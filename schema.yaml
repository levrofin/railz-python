openapi: 3.0.0
paths:
  /v2/connections:
    get:
      operationId: connections
      summary: List Connections
      description: |-
        **Supported for:**

        `freshbooks` `quickbooks` `quickbooksDesktop` `xero` `oracleNetsuite` `sageBusinessCloud` `sageIntacct` `dynamicsBusinessCentral` `wave` `shopify` `square` `plaid` `zohoBooks`
      parameters:
        - name: businessName
          required: false
          in: query
          description: Unique business name identifier.
          example: Railz
          schema:
            type: string
        - name: businessUuid
          required: false
          in: query
          description: Unique business identifier.
          example: BIZ-26bc4510-8c6f-4688-996d-e87acf3e0b3f
          schema:
            type: string
        - name: serviceName
          required: false
          in: query
          description: Name of accounting service provider.
          schema:
            enum:
              - freshbooks
              - quickbooks
              - quickbooksDesktop
              - xero
              - oracleNetsuite
              - sageBusinessCloud
              - sageIntacct
              - dynamicsBusinessCentral
              - wave
              - shopify
              - square
              - plaid
              - zohoBooks
            type: string
        - name: institutionName
          required: false
          in: query
          description: Name of banking service.
          schema:
            type: string
        - name: connectionUuid
          required: false
          in: query
          description: Unique connection identifier.
          example: CON-e66400c1-4d2f-4683-9bea-275799943695
          schema:
            type: string
        - name: status
          required: false
          in: query
          description: The status of a connection.
          schema:
            enum:
              - pending
              - active
              - disconnected
              - expired
              - invalid
            type: string
        - name: limit
          required: false
          in: query
          schema:
            minimum: 1
            maximum: 500
            format: integer
            type: number
        - name: offset
          required: false
          in: query
          schema:
            format: integer
            type: number
        - name: serviceAccountRef.id
          required: false
          in: query
          example: "12345"
          schema:
            type: string
        - name: serviceAccountRef.entityRef.id
          required: false
          in: query
          example: "100"
          schema:
            type: string
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectionsResponseDtoV2'
        "202":
          description: Data in pending state
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectionsResponseDtoV2'
        "204":
          description: No data available
        "400":
          description: Bad Request Error - Thrown if fields sent via query does not follow specifications
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400ResponseDto'
        "401":
          description: Unauthorized - Not logged in or log in expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401ResponseDto'
        "403":
          description: Forbidden - Not enough permission
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error403ResponseDto'
        "500":
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500ResponseDto'
      security:
        - bearer: []
      tags:
        - Connections
  /v2/connections/disconnect:
    put:
      operationId: disable connection
      summary: Disconnect a connection
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DisableConnectionDto'
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DisconnectResponseDto'
        "400":
          description: Bad Request Error - Thrown if fields sent via query does not follow specifications
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400ResponseDto'
        "401":
          description: Unauthorized - Not logged in or log in expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401ResponseDto'
        "403":
          description: Forbidden - Not enough permission
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error403ResponseDto'
        "500":
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500ResponseDto'
      security:
        - bearer: []
      tags:
        - Connections
  /v2/data/pushStatus:
    get:
      operationId: pushStatus
      summary: Fetch Status of Push Requests
      description: |-
        **Supported for:**

        `freshbooks` `quickbooks` `quickbooksDesktop` `xero` `oracleNetsuite` `sageBusinessCloud` `sageIntacct` `dynamicsBusinessCentral` `wave` `shopify` `square` `plaid` `zohoBooks`
      parameters:
        - name: connectionUuid
          required: true
          in: query
          description: Unique connection identifier.
          example: CON-396d5daa-26b2-4979-89b6-cafb2c298155
          schema:
            type: string
        - name: pushCommunicationId
          required: false
          in: query
          schema:
            type: string
        - name: batchId
          required: false
          in: query
          schema:
            type: string
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PushStatusResponseV2Dto'
        "400":
          description: Bad Request Error - Thrown if fields sent via query does not follow specifications
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400ResponseDtoV2'
        "401":
          description: Unauthorized - Not logged in or log in expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401ResponseDto'
        "403":
          description: Forbidden - Not enough permission
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error403ResponseDto'
        "500":
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500ResponseDto'
      security:
        - bearer: []
      tags:
        - Data
  /v2/data/deleteStatus:
    get:
      operationId: deleteStatus
      summary: Fetch Status of Delete Requests
      description: Gets the status of delete communication records.
      parameters:
        - name: connectionUuid
          required: true
          in: query
          description: Unique connection identifier.
          example: CON-396d5daa-26b2-4979-89b6-cafb2c298155
          schema:
            type: string
        - name: deleteCommunicationId
          required: false
          in: query
          schema:
            type: string
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteStatusResponseV2Dto'
        "400":
          description: Bad Request Error - Thrown if fields sent via query does not follow specifications
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400ResponseDtoV2'
        "401":
          description: Unauthorized - Not logged in or log in expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401ResponseDto'
        "403":
          description: Forbidden - Not enough permission
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error403ResponseDto'
        "500":
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500ResponseDto'
      security:
        - bearer: []
      tags:
        - Data
  /v2/data/syncStatus:
    get:
      operationId: syncStatus
      summary: Fetch Status of Data Syncs
      description: |-
        **Supported for:**

        `freshbooks` `quickbooks` `xero` `oracleNetsuite` `sageBusinessCloud` `sageIntacct` `dynamicsBusinessCentral` `wave` `shopify` `square` `plaid` `zohoBooks`
      parameters:
        - name: connectionUuid
          required: true
          in: query
          description: Unique connection identifier.
          example: CON-396d5daa-26b2-4979-89b6-cafb2c298155
          schema:
            type: string
        - name: offset
          required: false
          in: query
          schema:
            format: integer
            type: number
        - name: limit
          required: false
          in: query
          example: 100
          schema:
            format: integer
            type: number
        - name: startDate
          required: false
          in: query
          schema:
            type: string
        - name: endDate
          required: false
          in: query
          schema:
            type: string
        - name: dataType
          required: false
          in: query
          schema:
            enum:
              - attachments
              - accountingTransactions
              - agedReceivable
              - agedPayable
              - billPaymentRequests
              - bankTransactions
              - bankAccounts
              - bankTransfers
              - bankingReconciliation
              - balanceSheets
              - bills
              - billCreditNotes
              - billPayments
              - businessInfo
              - businessValuations
              - cashflowStatements
              - accounts
              - creditScore
              - customers
              - deposits
              - estimates
              - fraudRiskMetrics
              - financialBenchmarking
              - portfolioMetrics
              - financialRatios
              - financialForecasts
              - incomeStatements
              - inventory
              - invoices
              - invoiceCreditNotes
              - invoicePayments
              - journalEntries
              - journals
              - purchaseOrders
              - probabilityOfDefault
              - refunds
              - taxBenchmarking
              - taxRates
              - taxAuthority
              - trackingCategories
              - trialBalances
              - vendors
              - paymentMethods
              - expenses
              - contacts
              - vendorBankAccounts
              - customerBankAccounts
            type: string
        - name: reportFrequency
          required: false
          in: query
          schema:
            type: string
        - name: currentStatus
          required: false
          in: query
          schema:
            type: string
        - name: accountingMethod
          required: false
          in: query
          schema:
            enum:
              - cash
              - accrual
            type: string
        - name: orderBy
          required: false
          in: query
          schema:
            type: string
        - name: requestId
          required: false
          in: query
          schema:
            type: string
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataStatusResponseV2Dto'
        "400":
          description: Bad Request Error - Thrown if fields sent via query does not follow specifications
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400ResponseDtoV2'
        "401":
          description: Unauthorized - Not logged in or log in expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401ResponseDto'
        "403":
          description: Forbidden - Not enough permission
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error403ResponseDto'
        "500":
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500ResponseDto'
      security:
        - bearer: []
      tags:
        - Data
  /v2/data/syncInfo:
    get:
      operationId: syncInfo
      summary: Fetch Latest Sync Information
      description: Gets info related to the latest synchronization of a business connection.
      parameters:
        - name: connectionUuid
          required: true
          in: query
          description: Unique connection identifier.
          example: CON-396d5daa-26b2-4979-89b6-cafb2c298155
          schema:
            type: string
        - name: requestId
          required: false
          in: query
          schema:
            type: string
        - name: syncType
          required: false
          in: query
          schema:
            enum:
              - partial
              - full
              - manual
            type: string
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SyncInfoResponseV2Dto'
        "400":
          description: Bad Request Error - Thrown if fields sent via query does not follow specifications
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400ResponseDtoV2'
        "401":
          description: Unauthorized - Not logged in or log in expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401ResponseDto'
        "403":
          description: Forbidden - Not enough permission
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error403ResponseDto'
        "500":
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500ResponseDto'
      security:
        - bearer: []
      tags:
        - Data
  /v2/data/sync:
    post:
      operationId: dataSync
      summary: Queue a Data Sync
      description: |-
        **Supported for:**

        `freshbooks` `quickbooks` `xero` `oracleNetsuite` `sageBusinessCloud` `sageIntacct` `dynamicsBusinessCentral` `wave` `shopify` `square` `plaid` `zohoBooks`
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DataSyncV2Dto'
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataSyncResponseV2Dto'
        "400":
          description: Bad Request Error - Thrown if fields sent via query does not follow specifications
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400ResponseDtoV2'
        "401":
          description: Unauthorized - Not logged in or log in expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401ResponseDto'
        "403":
          description: Forbidden - Not enough permission
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error403ResponseDto'
        "500":
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500ResponseDto'
      security:
        - bearer: []
      tags:
        - Data
  /v2/data/pushOptions:
    get:
      operationId: pushOptions
      summary: Fetch Push Options for Asps
      description: |-
        **Supported for:**

        `freshbooks` `quickbooks` `quickbooksDesktop` `xero` `oracleNetsuite` `sageBusinessCloud` `sageIntacct` `dynamicsBusinessCentral` `wave` `shopify` `square` `plaid` `zohoBooks`
      parameters:
        - name: connectionUuid
          required: true
          in: query
          description: Unique connection identifier.
          example: CON-396d5daa-26b2-4979-89b6-cafb2c298155
          schema:
            type: string
        - name: dataType
          required: false
          in: query
          example: accounts
          schema:
            enum:
              - attachments
              - accountingTransactions
              - agedReceivable
              - agedPayable
              - billPaymentRequests
              - bankTransactions
              - bankAccounts
              - bankTransfers
              - bankingReconciliation
              - balanceSheets
              - bills
              - billCreditNotes
              - billPayments
              - businessInfo
              - businessValuations
              - cashflowStatements
              - accounts
              - creditScore
              - customers
              - deposits
              - estimates
              - fraudRiskMetrics
              - financialBenchmarking
              - portfolioMetrics
              - financialRatios
              - financialForecasts
              - incomeStatements
              - inventory
              - invoices
              - invoiceCreditNotes
              - invoicePayments
              - journalEntries
              - journals
              - purchaseOrders
              - probabilityOfDefault
              - refunds
              - taxBenchmarking
              - taxRates
              - taxAuthority
              - trackingCategories
              - trialBalances
              - vendors
              - paymentMethods
              - expenses
              - contacts
              - vendorBankAccounts
              - customerBankAccounts
            type: string
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PushOptionsResponseDto'
        "400":
          description: Bad Request Error - Thrown if fields sent via query does not follow specifications
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400ResponseDtoV2'
        "401":
          description: Unauthorized - Not logged in or log in expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401ResponseDto'
        "403":
          description: Forbidden - Not enough permission
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error403ResponseDto'
        "500":
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500ResponseDto'
      security:
        - bearer: []
      tags:
        - Data
  /v2/accounting/accounts:
    get:
      operationId: accounts
      summary: List Accounts
      description: |-
        **Supported for:**

        `quickbooks` `xero` `freshbooks` `quickbooksDesktop` `sageIntacct` `sageBusinessCloud` `oracleNetsuite` `dynamicsBusinessCentral` `wave` `zohoBooks`
      parameters:
        - name: connectionUuid
          required: true
          in: query
          description: Unique connection identifier.
          example: CON-396d5daa-26b2-4979-89b6-cafb2c298155
          schema:
            type: string
        - name: offset
          required: false
          in: query
          description: The offset is the position in the dataset of a particular record.
          schema:
            format: integer
            type: number
        - name: limit
          required: false
          in: query
          description: 'This is the size of the results set you would like (default: 100).'
          example: 100
          schema:
            format: integer
            type: number
        - name: orderBy
          required: false
          in: query
          schema:
            type: string
        - name: isActive
          required: false
          in: query
          description: Confirms whether the account is an active account or not.
          example: "true"
          schema:
            format: boolean
            type: boolean
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetChartOfAccountsV2ResponseDto'
        "202":
          description: Data in pending state
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetChartOfAccountsV2ResponseDto'
        "204":
          description: No data available
        "400":
          description: Bad Request Error - Thrown if fields sent via query does not follow specifications
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400ResponseDtoV2'
        "401":
          description: Unauthorized - Not logged in or log in expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401ResponseDto'
        "403":
          description: Forbidden - Not enough permission
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error403ResponseDto'
        "500":
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500ResponseDto'
      security:
        - bearer: []
      tags:
        - Chart of Accounts
    post:
      operationId: push-accounts
      summary: Create an Account
      description: |-
        **Supported for:**

        `quickbooks` `xero` `freshbooks` `sageIntacct` `sageBusinessCloud` `oracleNetsuite` `wave` `zohoBooks`
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PushChartOfAccountV2Dto'
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PushChartOfAccountV2ResponseDto'
        "400":
          description: Bad Request Error - Thrown if fields sent via query does not follow specifications
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400ResponseDtoV2'
        "401":
          description: Unauthorized - Not logged in or log in expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401ResponseDto'
        "403":
          description: Forbidden - Not enough permission
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error403ResponseDto'
        "500":
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500ResponseDto'
      security:
        - bearer: []
      tags:
        - Chart of Accounts
  /v2/accounting/accounts/batch:
    post:
      operationId: push-batchAccounts
      summary: Batch Create Accounts
      description: |-
        **Supported for:**

        `quickbooks` `xero` `sageIntacct` `sageBusinessCloud` `oracleNetsuite` `wave`
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchPushChartOfAccountV2Dto'
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchPushChartOfAccountV2ResponseDto'
        "400":
          description: Bad Request Error - Thrown if fields sent via query does not follow specifications
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400ResponseDtoV2'
        "401":
          description: Unauthorized - Not logged in or log in expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401ResponseDto'
        "403":
          description: Forbidden - Not enough permission
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error403ResponseDto'
        "500":
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500ResponseDto'
      security:
        - bearer: []
      tags:
        - Chart of Accounts
    put:
      operationId: update-batchAccounts
      summary: Batch Update Accounts
      description: |-
        **Supported for:**

        `zohoBooks`
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchUpdateChartOfAccountV2Dto'
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchUpdateChartOfAccountV2ResponseDto'
        "400":
          description: Bad Request Error - Thrown if fields sent via query does not follow specifications
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400ResponseDtoV2'
        "401":
          description: Unauthorized - Not logged in or log in expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401ResponseDto'
        "403":
          description: Forbidden - Not enough permission
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error403ResponseDto'
        "500":
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500ResponseDto'
      security:
        - bearer: []
      tags:
        - Chart of Accounts
  /v2/accounting/accounts/{id}:
    put:
      operationId: update-accounts
      summary: Update an Account
      description: |-
        **Supported for:**

        `zohoBooks`
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateChartOfAccountV2Dto'
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateChartOfAccountV2ResponseDto'
        "400":
          description: Bad Request Error - Thrown if fields sent via query does not follow specifications
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400ResponseDtoV2'
        "401":
          description: Unauthorized - Not logged in or log in expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401ResponseDto'
        "403":
          description: Forbidden - Not enough permission
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error403ResponseDto'
        "500":
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500ResponseDto'
      security:
        - bearer: []
      tags:
        - Chart of Accounts
  /v2/accounting/accountingTransactions:
    get:
      operationId: accountingTransactions
      summary: List Accounting Transactions
      description: |-
        **Supported for:**

        `quickbooks` `xero` `freshbooks` `quickbooksDesktop` `sageIntacct` `sageBusinessCloud` `oracleNetsuite` `dynamicsBusinessCentral` `zohoBooks`
      parameters:
        - name: connectionUuid
          required: true
          in: query
          description: Unique connection identifier.
          example: CON-396d5daa-26b2-4979-89b6-cafb2c298155
          schema:
            type: string
        - name: startDate
          required: false
          in: query
          description: 'Date from which the report data begins in the format: YYYY-MM-DD.'
          schema:
            type: string
        - name: endDate
          required: false
          in: query
          description: 'Date from which the report data ends in the format: YYYY-MM-DD.'
          schema:
            type: string
        - name: offset
          required: false
          in: query
          description: The offset is the position in the dataset of a particular record.
          schema:
            format: integer
            type: number
        - name: limit
          required: false
          in: query
          description: 'This is the size of the results set you would like (default: 100).'
          example: 100
          schema:
            format: integer
            type: number
        - name: orderBy
          required: false
          in: query
          schema:
            type: string
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountingTransactionsResponseV2Dto'
        "202":
          description: Data in pending state
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountingTransactionsResponseV2Dto'
        "204":
          description: No data available
        "400":
          description: Bad Request Error - Thrown if fields sent via query does not follow specifications
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400ResponseDtoV2'
        "401":
          description: Unauthorized - Not logged in or log in expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401ResponseDto'
        "403":
          description: Forbidden - Not enough permission
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error403ResponseDto'
        "500":
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500ResponseDto'
      security:
        - bearer: []
      tags:
        - Accounting Transactions
  /v2/accounting/apAging:
    get:
      operationId: apAging
      summary: List Aged Payables
      description: |-
        **Supported for:**

        `quickbooks` `freshbooks` `quickbooksDesktop` `dynamicsBusinessCentral`
      parameters:
        - name: connectionUuid
          required: true
          in: query
          description: Unique connection identifier.
          example: CON-396d5daa-26b2-4979-89b6-cafb2c298155
          schema:
            type: string
        - name: startDate
          required: false
          in: query
          description: 'Transaction date greater than or equal to parameter in the format: YYYY-MM-DD.'
          schema:
            type: string
        - name: endDate
          required: false
          in: query
          description: 'Transaction date less than or equal to parameter in the format: YYYY-MM-DD.'
          schema:
            type: string
        - name: offset
          required: false
          in: query
          description: The offset is the position in the dataset of a particular record.
          schema:
            format: integer
            type: number
        - name: limit
          required: false
          in: query
          description: 'This is the size of the results set you would like (default: 100).'
          example: 100
          schema:
            format: integer
            type: number
        - name: orderBy
          required: false
          in: query
          schema:
            type: string
        - name: reportFrequency
          required: true
          in: query
          schema:
            enum:
              - month
              - quarter
              - year
            type: string
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApAgingResponseV2Dto'
        "202":
          description: Data in pending state
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApAgingResponseV2Dto'
        "204":
          description: No data available
        "400":
          description: Bad Request Error - Thrown if fields sent via query does not follow specifications
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400ResponseDtoV2'
        "401":
          description: Unauthorized - Not logged in or log in expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401ResponseDto'
        "403":
          description: Forbidden - Not enough permission
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error403ResponseDto'
        "500":
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500ResponseDto'
      security:
        - bearer: []
      tags:
        - Aging Reports
  /v2/accounting/arAging:
    get:
      operationId: arAging
      summary: List Aged Receivables
      description: |-
        **Supported for:**

        `quickbooks` `freshbooks` `quickbooksDesktop` `sageIntacct` `dynamicsBusinessCentral`
      parameters:
        - name: connectionUuid
          required: true
          in: query
          description: Unique connection identifier.
          example: CON-396d5daa-26b2-4979-89b6-cafb2c298155
          schema:
            type: string
        - name: startDate
          required: false
          in: query
          description: 'Transaction date greater than or equal to parameter in the format: YYYY-MM-DD.'
          schema:
            type: string
        - name: endDate
          required: false
          in: query
          description: 'Transaction date less than or equal to parameter in the format: YYYY-MM-DD.'
          schema:
            type: string
        - name: offset
          required: false
          in: query
          description: The offset is the position in the dataset of a particular record.
          schema:
            format: integer
            type: number
        - name: limit
          required: false
          in: query
          description: 'This is the size of the results set you would like (default: 100).'
          example: 100
          schema:
            format: integer
            type: number
        - name: orderBy
          required: false
          in: query
          schema:
            type: string
        - name: reportFrequency
          required: true
          in: query
          schema:
            enum:
              - month
              - quarter
              - year
            type: string
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArAgingResponseV2Dto'
        "202":
          description: Data in pending state
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArAgingResponseV2Dto'
        "204":
          description: No data available
        "400":
          description: Bad Request Error - Thrown if fields sent via query does not follow specifications
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400ResponseDtoV2'
        "401":
          description: Unauthorized - Not logged in or log in expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401ResponseDto'
        "403":
          description: Forbidden - Not enough permission
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error403ResponseDto'
        "500":
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500ResponseDto'
      security:
        - bearer: []
      tags:
        - Aging Reports
  /v2/accounting/attachments:
    get:
      operationId: attachments
      summary: List Attachments
      description: |-
        **Supported for:**

        `quickbooks` `xero` `freshbooks` `sageIntacct` `sageBusinessCloud` `dynamicsBusinessCentral` `zohoBooks`
      parameters:
        - name: connectionUuid
          required: true
          in: query
          description: Unique connection identifier.
          example: CON-396d5daa-26b2-4979-89b6-cafb2c298155
          schema:
            type: string
        - name: offset
          required: false
          in: query
          description: The offset is the position in the dataset of a particular record.
          schema:
            format: integer
            type: number
        - name: limit
          required: false
          in: query
          description: 'This is the size of the results set you would like (default: 100).'
          example: 100
          schema:
            format: integer
            type: number
        - name: orderBy
          required: false
          in: query
          schema:
            type: string
        - name: id
          required: false
          in: query
          schema:
            type: string
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetAttachmentV2ResponseDto'
        "202":
          description: Data in pending state
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetAttachmentV2ResponseDto'
        "204":
          description: No data available
        "400":
          description: Bad Request Error - Thrown if fields sent via query does not follow specifications
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400ResponseDtoV2'
        "401":
          description: Unauthorized - Not logged in or log in expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401ResponseDto'
        "403":
          description: Forbidden - Not enough permission
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error403ResponseDto'
        "500":
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500ResponseDto'
      security:
        - bearer: []
      tags:
        - Attachments
    post:
      operationId: pushAttachment
      summary: Create an Attachment
      description: |-
        **Supported for:**

        `quickbooks` `xero` `freshbooks` `sageIntacct` `sageBusinessCloud` `oracleNetsuite` `dynamicsBusinessCentral` `zohoBooks`
      parameters: []
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PushAttachmentV2Dto'
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PushAttachmentV2ResponseDto'
        "400":
          description: Bad Request Error - Thrown if fields sent via query does not follow specifications
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400ResponseDtoV2'
        "401":
          description: Unauthorized - Not logged in or log in expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401ResponseDto'
        "403":
          description: Forbidden - Not enough permission
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error403ResponseDto'
        "500":
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500ResponseDto'
      security:
        - bearer: []
      tags:
        - Attachments
  /v2/accounting/bankTransfers:
    get:
      operationId: bankTransfers
      summary: List Bank Transfers
      description: |-
        **Supported for:**

        `xero` `sageBusinessCloud` `zohoBooks`
      parameters:
        - name: connectionUuid
          required: true
          in: query
          description: Unique connection identifier.
          example: CON-396d5daa-26b2-4979-89b6-cafb2c298155
          schema:
            type: string
        - name: startDate
          required: false
          in: query
          description: 'The start date of the Transaction report frequency in the format: YYYY-MM-DD.'
          schema:
            type: string
        - name: endDate
          required: false
          in: query
          description: 'The end date of the Transaction report frequency in the format: YYYY-MM-DD.'
          schema:
            type: string
        - name: offset
          required: false
          in: query
          description: The offset is the position in the dataset of a particular record.
          schema:
            format: integer
            type: number
        - name: limit
          required: false
          in: query
          description: 'This is the size of the results set you would like (default: 100).'
          example: 100
          schema:
            format: integer
            type: number
        - name: orderBy
          required: false
          in: query
          schema:
            type: string
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetBankTransfersResponseV2Dto'
        "202":
          description: Data in pending state
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetBankTransfersResponseV2Dto'
        "204":
          description: No data available
        "400":
          description: Bad Request Error - Thrown if fields sent via query does not follow specifications
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400ResponseDtoV2'
        "401":
          description: Unauthorized - Not logged in or log in expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401ResponseDto'
        "403":
          description: Forbidden - Not enough permission
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error403ResponseDto'
        "500":
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500ResponseDto'
      security:
        - bearer: []
      tags:
        - Bank Transfers (Accounting)
    post:
      operationId: push-bankTransfer
      summary: Create a Bank Transfer
      description: |-
        **Supported for:**

        `xero` `sageBusinessCloud` `zohoBooks`
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PushBankTransfersV2Dto'
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PushBankTransfersResponseV2Dto'
        "400":
          description: Bad Request Error - Thrown if fields sent via query does not follow specifications
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400ResponseDtoV2'
        "401":
          description: Unauthorized - Not logged in or log in expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401ResponseDto'
        "403":
          description: Forbidden - Not enough permission
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error403ResponseDto'
        "500":
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500ResponseDto'
      security:
        - bearer: []
      tags:
        - Bank Transfers (Accounting)
  /v2/banking/bankAccounts:
    get:
      operationId: bankAccounts
      summary: List Bank Accounts
      description: |-
        **Supported for:**

        `plaid`
      parameters:
        - name: connectionUuid
          required: true
          in: query
          description: Unique connection identifier.
          example: CON-396d5daa-26b2-4979-89b6-cafb2c298155
          schema:
            type: string
        - name: offset
          required: false
          in: query
          schema:
            format: integer
            type: number
        - name: limit
          required: false
          in: query
          example: 100
          schema:
            format: integer
            type: number
        - name: orderBy
          required: false
          in: query
          schema:
            type: string
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetBankAccountResponseV2Dto'
        "202":
          description: Data in pending state
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetBankAccountResponseV2Dto'
        "204":
          description: No data available
        "400":
          description: Bad Request Error - Thrown if fields sent via query does not follow specifications
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400ResponseDtoV2'
        "401":
          description: Unauthorized - Not logged in or log in expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401ResponseDto'
        "403":
          description: Forbidden - Not enough permission
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error403ResponseDto'
        "500":
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500ResponseDto'
      security:
        - bearer: []
      tags:
        - Bank Accounts (Banking)
  /v2/accounting/bankAccounts:
    get:
      operationId: accounting-BankAccounts
      summary: List Bank Accounts
      description: |-
        **Supported for:**

        `quickbooks` `xero` `quickbooksDesktop` `sageIntacct` `sageBusinessCloud` `dynamicsBusinessCentral` `zohoBooks`
      parameters:
        - name: connectionUuid
          required: true
          in: query
          description: Unique connection identifier.
          example: CON-396d5daa-26b2-4979-89b6-cafb2c298155
          schema:
            type: string
        - name: offset
          required: false
          in: query
          schema:
            format: integer
            type: number
        - name: limit
          required: false
          in: query
          example: 100
          schema:
            format: integer
            type: number
        - name: orderBy
          required: false
          in: query
          schema:
            type: string
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetBankAccountAccountingResponseV2Dto'
        "202":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetBankAccountAccountingResponseV2Dto'
        "204":
          description: No data available
        "400":
          description: Bad Request Error - Thrown if fields sent via query does not follow specifications
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400ResponseDtoV2'
        "401":
          description: Unauthorized - Not logged in or log in expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401ResponseDto'
        "403":
          description: Forbidden - Not enough permission
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error403ResponseDto'
        "500":
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500ResponseDto'
      security:
        - bearer: []
      tags:
        - Bank Accounts (Accounting)
    post:
      operationId: push-accountingBankAccounts
      summary: Create a Bank Account
      description: |-
        **Supported for:**

        `quickbooks` `xero` `sageIntacct` `sageBusinessCloud` `dynamicsBusinessCentral` `zohoBooks`
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PushBankAccountV2Dto'
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PushBankAccountResponseV2Dto'
        "400":
          description: Bad Request Error - Thrown if fields sent via query does not follow specifications
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400ResponseDtoV2'
        "401":
          description: Unauthorized - Not logged in or log in expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401ResponseDto'
        "403":
          description: Forbidden - Not enough permission
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error403ResponseDto'
        "500":
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500ResponseDto'
      security:
        - bearer: []
      tags:
        - Bank Accounts (Accounting)
  /v2/banking/bankTransactions:
    get:
      operationId: bankTransactions
      summary: List Bank Transactions
      description: |-
        **Supported for:**

        `plaid`
      parameters:
        - name: connectionUuid
          required: true
          in: query
          description: Unique connection identifier.
          example: CON-396d5daa-26b2-4979-89b6-cafb2c298155
          schema:
            type: string
        - name: offset
          required: false
          in: query
          schema:
            format: integer
            type: number
        - name: limit
          required: false
          in: query
          example: 100
          schema:
            format: integer
            type: number
        - name: orderBy
          required: false
          in: query
          schema:
            type: string
        - name: startDate
          required: false
          in: query
          schema:
            type: string
        - name: endDate
          required: false
          in: query
          schema:
            type: string
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetBankTransactionsV2ResponseDto'
        "202":
          description: Data in pending state
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetBankTransactionsV2ResponseDto'
        "204":
          description: No data available
        "400":
          description: Bad Request Error - Thrown if fields sent via query does not follow specifications
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400ResponseDtoV2'
        "401":
          description: Unauthorized - Not logged in or log in expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401ResponseDto'
        "403":
          description: Forbidden - Not enough permission
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error403ResponseDto'
        "500":
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500ResponseDto'
      security:
        - bearer: []
      tags:
        - Bank Transactions (Banking)
  /v2/accounting/bankTransactions:
    get:
      operationId: accounting-bankTransactions
      summary: List Bank Transactions
      description: |-
        **Supported for:**

        `xero` `zohoBooks`
      parameters:
        - name: connectionUuid
          required: true
          in: query
          description: Unique connection identifier.
          example: CON-396d5daa-26b2-4979-89b6-cafb2c298155
          schema:
            type: string
        - name: startDate
          required: false
          in: query
          description: 'The start date of the Transaction report frequency in the format: YYYY-MM-DD.'
          schema:
            type: string
        - name: endDate
          required: false
          in: query
          description: 'The end date of the Transaction report frequency in the format: YYYY-MM-DD.'
          schema:
            type: string
        - name: offset
          required: false
          in: query
          description: The offset is the position in the dataset of a particular record.
          schema:
            format: integer
            type: number
        - name: limit
          required: false
          in: query
          description: 'This is the size of the results set you would like (default: 100).'
          example: 100
          schema:
            format: integer
            type: number
        - name: orderBy
          required: false
          in: query
          schema:
            type: string
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetAspBankTransactionsV2ResponseDto'
        "202":
          description: Data in pending state
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetAspBankTransactionsV2ResponseDto'
        "204":
          description: No data available
        "400":
          description: Bad Request Error - Thrown if fields sent via query does not follow specifications
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400ResponseDtoV2'
        "401":
          description: Unauthorized - Not logged in or log in expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401ResponseDto'
        "403":
          description: Forbidden - Not enough permission
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error403ResponseDto'
        "500":
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500ResponseDto'
      security:
        - bearer: []
      tags:
        - Bank Transactions (Accounting)
    post:
      operationId: push-bankTransaction
      summary: Create a Bank Transaction
      description: |-
        **Supported for:**

        `xero` `wave` `zohoBooks`
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PushBankTransactionV2Dto'
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PushBankTransactionResponseV2Dto'
        "400":
          description: Bad Request Error - Thrown if fields sent via query does not follow specifications
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400ResponseDtoV2'
        "401":
          description: Unauthorized - Not logged in or log in expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401ResponseDto'
        "403":
          description: Forbidden - Not enough permission
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error403ResponseDto'
        "500":
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500ResponseDto'
      security:
        - bearer: []
      tags:
        - Bank Transactions (Accounting)
  /v2/accounting/bankTransactions/batch:
    post:
      operationId: push-batchbankTransaction
      summary: Batch Create Bank Transactions
      description: |-
        **Supported for:**

        `xero`
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchPushBankTransactionV2Dto'
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchPushBankTransactionResponseV2Dto'
        "400":
          description: Bad Request Error - Thrown if fields sent via query does not follow specifications
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400ResponseDtoV2'
        "401":
          description: Unauthorized - Not logged in or log in expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401ResponseDto'
        "403":
          description: Forbidden - Not enough permission
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error403ResponseDto'
        "500":
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500ResponseDto'
      security:
        - bearer: []
      tags:
        - Bank Transactions (Accounting)
    put:
      operationId: update-batchbankTransaction
      summary: Batch Update Bank Transactions
      description: |-
        **Supported for:**

        `xero`
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchUpdateBankTransactionDto'
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchUpdateBankTransactionResponseV2Dto'
        "400":
          description: Bad Request Error - Thrown if fields sent via query does not follow specifications
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400ResponseDtoV2'
        "401":
          description: Unauthorized - Not logged in or log in expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401ResponseDto'
        "403":
          description: Forbidden - Not enough permission
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error403ResponseDto'
        "500":
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500ResponseDto'
      security:
        - bearer: []
      tags:
        - Bank Transactions (Accounting)
  /v2/accounting/bankTransactions/{id}:
    put:
      operationId: update-bankTransaction
      summary: Update a Bank Transaction
      description: |-
        **Supported for:**

        `xero` `zohoBooks`
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateBankTransactionDto'
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateBankTransactionResponseDto'
        "400":
          description: Bad Request Error - Thrown if fields sent via query does not follow specifications
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400ResponseDtoV2'
        "401":
          description: Unauthorized - Not logged in or log in expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401ResponseDto'
        "403":
          description: Forbidden - Not enough permission
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error403ResponseDto'
        "500":
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500ResponseDto'
      security:
        - bearer: []
      tags:
        - Bank Transactions (Accounting)
  /v2/analytics/bankReconciliation:
    get:
      operationId: bankReconciliation
      summary: List Banking Reconciliations
      description: |-
        **Supported for:**

        `quickbooks` `xero` `freshbooks` `quickbooksDesktop` `sageIntacct` `sageBusinessCloud` `oracleNetsuite` `dynamicsBusinessCentral`
      parameters:
        - name: connectionUuid
          required: true
          in: query
          description: Unique connection identifier.
          example: CON-396d5daa-26b2-4979-89b6-cafb2c298155
          schema:
            type: string
        - name: startDate
          required: false
          in: query
          description: 'The start date of the Transaction report frequency in the format: YYYY-MM-DD.'
          schema:
            type: string
        - name: endDate
          required: false
          in: query
          description: 'The end date of the Transaction report frequency in the format: YYYY-MM-DD.'
          schema:
            type: string
        - name: offset
          required: false
          in: query
          description: The offset is the position in the dataset of a particular record.
          schema:
            format: integer
            type: number
        - name: limit
          required: false
          in: query
          description: 'This is the size of the results set you would like (default: 100).'
          example: 100
          schema:
            format: integer
            type: number
        - name: orderBy
          required: false
          in: query
          schema:
            type: string
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BankReconciliationResponseV2Dto'
        "202":
          description: Data in pending state
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BankReconciliationResponseV2Dto'
        "204":
          description: No data available
        "400":
          description: Bad Request Error - Thrown if fields sent via query does not follow specifications
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400ResponseDtoV2'
        "401":
          description: Unauthorized - Not logged in or log in expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401ResponseDto'
        "403":
          description: Forbidden - Not enough permission
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error403ResponseDto'
        "500":
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500ResponseDto'
      security:
        - bearer: []
      tags:
        - Bank Reconciliation (Accuracy Score)
  /v2/banking/bankAssets:
    get:
      operationId: bankAssets
      summary: List Bank Assets
      description: |-
        **Supported for:**

        `plaid`
      parameters:
        - name: connectionUuid
          required: true
          in: query
          description: Unique connection identifier.
          example: CON-396d5daa-26b2-4979-89b6-cafb2c298155
          schema:
            type: string
        - name: offset
          required: false
          in: query
          schema:
            format: integer
            type: number
        - name: limit
          required: false
          in: query
          example: 100
          schema:
            format: integer
            type: number
        - name: orderBy
          required: false
          in: query
          schema:
            type: string
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetBankAssetResponseDto'
        "202":
          description: Data in pending state
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetBankAssetResponseDto'
        "204":
          description: No data available
        "400":
          description: Bad Request Error - Thrown if fields sent via query does not follow specifications
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400ResponseDtoV2'
        "401":
          description: Unauthorized - Not logged in or log in expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401ResponseDto'
        "403":
          description: Forbidden - Not enough permission
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error403ResponseDto'
        "500":
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500ResponseDto'
      security:
        - bearer: []
      tags:
        - Bank Assets (Banking)
  /v2/accounting/bills:
    get:
      operationId: getBills
      summary: List Bills
      description: |-
        **Supported for:**

        `quickbooks` `xero` `freshbooks` `quickbooksDesktop` `sageIntacct` `sageBusinessCloud` `oracleNetsuite` `dynamicsBusinessCentral` `zohoBooks`
      parameters:
        - name: connectionUuid
          required: true
          in: query
          description: Unique connection identifier.
          example: CON-396d5daa-26b2-4979-89b6-cafb2c298155
          schema:
            type: string
        - name: startDate
          required: false
          in: query
          description: 'Transaction date greater than or equal to parameter in the format: YYYY-MM-DD.'
          schema:
            type: string
        - name: endDate
          required: false
          in: query
          description: 'Transaction date less than or equal to parameter in the format: YYYY-MM-DD.'
          schema:
            type: string
        - name: offset
          required: false
          in: query
          description: The offset is the position in the dataset of a particular record.
          schema:
            format: integer
            type: number
        - name: limit
          required: false
          in: query
          description: 'This is the size of the results set you would like (default: 100).'
          example: 100
          schema:
            format: integer
            type: number
        - name: orderBy
          required: false
          in: query
          schema:
            type: string
        - name: status
          required: false
          in: query
          schema:
            enum:
              - open
              - draft
              - partiallyPaid
              - paid
              - unknown
              - void
            type: string
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetBillResponseV2Dto'
        "202":
          description: Data in pending state
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetBillResponseV2Dto'
        "204":
          description: No data available
        "400":
          description: Bad Request Error - Thrown if fields sent via query does not follow specifications
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400ResponseDtoV2'
        "401":
          description: Unauthorized - Not logged in or log in expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401ResponseDto'
        "403":
          description: Forbidden - Not enough permission
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error403ResponseDto'
        "500":
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500ResponseDto'
      security:
        - bearer: []
      tags:
        - Bills
    post:
      operationId: push-bills
      summary: Create a Bill
      description: |-
        **Supported for:**

        `quickbooks` `xero` `freshbooks` `sageIntacct` `sageBusinessCloud` `oracleNetsuite` `dynamicsBusinessCentral` `zohoBooks`
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PushBillV2Dto'
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PushBillResponseV2Dto'
        "400":
          description: Bad Request Error - Thrown if fields sent via query does not follow specifications
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400ResponseDtoV2'
        "401":
          description: Unauthorized - Not logged in or log in expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401ResponseDto'
        "403":
          description: Forbidden - Not enough permission
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error403ResponseDto'
        "500":
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500ResponseDto'
      security:
        - bearer: []
      tags:
        - Bills
  /v2/accounting/bills/{id}:
    put:
      operationId: put-bills
      summary: Update a Bill
      description: |-
        **Supported for:**

        `quickbooks` `xero` `sageIntacct` `sageBusinessCloud` `oracleNetsuite`
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateBillsV2Dto'
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateBillsResponseV2Dto'
        "400":
          description: Bad Request Error - Thrown if fields sent via query does not follow specifications
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400ResponseDtoV2'
        "401":
          description: Unauthorized - Not logged in or log in expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401ResponseDto'
        "403":
          description: Forbidden - Not enough permission
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error403ResponseDto'
        "500":
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500ResponseDto'
      security:
        - bearer: []
      tags:
        - Bills
    delete:
      operationId: delete-bills
      summary: Delete a Bill
      description: |-
        **Supported for:**

        `quickbooks` `xero` `freshbooks` `sageIntacct` `sageBusinessCloud` `dynamicsBusinessCentral`
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
        - name: connectionUuid
          required: true
          in: query
          description: Unique connection identifier.
          example: CON-396d5daa-26b2-4979-89b6-cafb2c298155
          schema:
            type: string
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SaveDeleteCommunicationResponseV2'
        "400":
          description: Bad Request Error - Thrown if fields sent via query does not follow specifications
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400ResponseDtoV2'
        "401":
          description: Unauthorized - Not logged in or log in expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401ResponseDto'
        "403":
          description: Forbidden - Not enough permission
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error403ResponseDto'
        "500":
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500ResponseDto'
      security:
        - bearer: []
      tags:
        - Bills
  /v2/accounting/bills/payments:
    get:
      operationId: billsPayments
      summary: List Bill Payments
      description: |-
        **Supported for:**

        `quickbooks` `xero` `freshbooks` `quickbooksDesktop` `sageIntacct` `sageBusinessCloud` `oracleNetsuite` `dynamicsBusinessCentral` `zohoBooks`
      parameters:
        - name: connectionUuid
          required: true
          in: query
          description: Unique connection identifier.
          example: CON-396d5daa-26b2-4979-89b6-cafb2c298155
          schema:
            type: string
        - name: startDate
          required: false
          in: query
          description: 'Transaction date greater than or equal to parameter in the format: YYYY-MM-DD.'
          schema:
            type: string
        - name: endDate
          required: false
          in: query
          description: 'Transaction date less than or equal to parameter in the format: YYYY-MM-DD.'
          schema:
            type: string
        - name: offset
          required: false
          in: query
          description: The offset is the position in the dataset of a particular record.
          schema:
            format: integer
            type: number
        - name: limit
          required: false
          in: query
          description: 'This is the size of the results set you would like (default: 100).'
          example: 100
          schema:
            format: integer
            type: number
        - name: orderBy
          required: false
          in: query
          schema:
            type: string
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetBillPaymentResponseV2Dto'
        "202":
          description: Data in pending state
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetBillPaymentResponseV2Dto'
        "204":
          description: No data available
        "400":
          description: Bad Request Error - Thrown if fields sent via query does not follow specifications
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400ResponseDtoV2'
        "401":
          description: Unauthorized - Not logged in or log in expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401ResponseDto'
        "403":
          description: Forbidden - Not enough permission
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error403ResponseDto'
        "500":
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500ResponseDto'
      security:
        - bearer: []
      tags:
        - Bill Payments
    post:
      operationId: push-bills-payments
      summary: Create a Bill Payment
      description: |-
        **Supported for:**

        `quickbooks` `xero` `freshbooks` `sageIntacct` `sageBusinessCloud` `oracleNetsuite` `dynamicsBusinessCentral` `zohoBooks`
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PushBillPaymentV2Dto'
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PushBillPaymentResponseV2Dto'
        "400":
          description: Bad Request Error - Thrown if fields sent via query does not follow specifications
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400ResponseDtoV2'
        "401":
          description: Unauthorized - Not logged in or log in expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401ResponseDto'
        "403":
          description: Forbidden - Not enough permission
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error403ResponseDto'
        "500":
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500ResponseDto'
      security:
        - bearer: []
      tags:
        - Bill Payments
  /v2/accounting/bills/payments/{id}:
    put:
      operationId: put-bills-payments
      summary: Update a Bill Payment
      description: |-
        **Supported for:**

        `quickbooks` `freshbooks` `oracleNetsuite`
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateBillPaymentV2Dto'
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateBillPaymentResponseV2Dto'
        "400":
          description: Bad Request Error - Thrown if fields sent via query does not follow specifications
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400ResponseDtoV2'
        "401":
          description: Unauthorized - Not logged in or log in expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401ResponseDto'
        "403":
          description: Forbidden - Not enough permission
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error403ResponseDto'
        "500":
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500ResponseDto'
      security:
        - bearer: []
      tags:
        - Bill Payments
    delete:
      operationId: delete-bill-payments
      summary: Delete a Bill Payment
      description: |-
        **Supported for:**

        `quickbooks` `xero` `freshbooks` `sageIntacct` `dynamicsBusinessCentral`
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
        - name: connectionUuid
          required: true
          in: query
          description: Unique connection identifier.
          example: CON-396d5daa-26b2-4979-89b6-cafb2c298155
          schema:
            type: string
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SaveDeleteCommunicationResponseV2'
        "400":
          description: Bad Request Error - Thrown if fields sent via query does not follow specifications
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400ResponseDtoV2'
        "401":
          description: Unauthorized - Not logged in or log in expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401ResponseDto'
        "403":
          description: Forbidden - Not enough permission
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error403ResponseDto'
        "500":
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500ResponseDto'
      security:
        - bearer: []
      tags:
        - Bill Payments
  /v2/accounting/bills/creditNotes:
    get:
      operationId: bill-creditNotes
      summary: List Bill Credit Notes
      description: |-
        **Supported for:**

        `quickbooks` `xero` `quickbooksDesktop` `sageIntacct` `sageBusinessCloud` `oracleNetsuite` `zohoBooks`
      parameters:
        - name: connectionUuid
          required: true
          in: query
          description: Unique connection identifier.
          example: CON-396d5daa-26b2-4979-89b6-cafb2c298155
          schema:
            type: string
        - name: startDate
          required: false
          in: query
          description: 'Transaction date greater than or equal to parameter in the format: YYYY-MM-DD.'
          schema:
            type: string
        - name: endDate
          required: false
          in: query
          description: 'Transaction date less than or equal to parameter in the format: YYYY-MM-DD.'
          schema:
            type: string
        - name: offset
          required: false
          in: query
          description: The offset is the position in the dataset of a particular record.
          schema:
            format: integer
            type: number
        - name: limit
          required: false
          in: query
          description: 'This is the size of the results set you would like (default: 100).'
          example: 100
          schema:
            format: integer
            type: number
        - name: orderBy
          required: false
          in: query
          schema:
            type: string
        - name: totalAmount
          required: false
          in: query
          description: Total amount of a credit note.
          schema:
            format: float
            type: number
        - name: remainingCredit
          required: false
          in: query
          description: Remaining credit on a credit note.
          schema:
            format: float
            type: number
        - name: status
          required: false
          in: query
          schema:
            enum:
              - open
              - paid
              - partiallyPaid
              - void
              - unknown
              - draft
            type: string
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetBillCreditNoteResponseV2Dto'
        "202":
          description: Data in pending state
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetBillCreditNoteResponseV2Dto'
        "204":
          description: No data available
        "400":
          description: Bad Request Error - Thrown if fields sent via query does not follow specifications
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400ResponseDtoV2'
        "401":
          description: Unauthorized - Not logged in or log in expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401ResponseDto'
        "403":
          description: Forbidden - Not enough permission
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error403ResponseDto'
        "500":
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500ResponseDto'
      security:
        - bearer: []
      tags:
        - Bill Credit Notes
    post:
      operationId: push-bill-creditNotes
      summary: Create a Bill Credit Note
      description: |-
        **Supported for:**

        `quickbooks` `xero` `sageBusinessCloud` `oracleNetsuite` `zohoBooks`
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PushBillCreditNoteV2Dto'
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PushBillCreditNoteResponseV2Dto'
        "400":
          description: Bad Request Error - Thrown if fields sent via query does not follow specifications
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400ResponseDtoV2'
        "401":
          description: Unauthorized - Not logged in or log in expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401ResponseDto'
        "403":
          description: Forbidden - Not enough permission
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error403ResponseDto'
        "500":
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500ResponseDto'
      security:
        - bearer: []
      tags:
        - Bill Credit Notes
  /v2/accounting/bills/paymentRequests:
    get:
      operationId: bill-paymentRequests
      summary: List Bill Payment Requests
      description: |-
        **Supported for:**

        `sageIntacct`
      parameters:
        - name: connectionUuid
          required: true
          in: query
          description: Unique connection identifier.
          example: CON-396d5daa-26b2-4979-89b6-cafb2c298155
          schema:
            type: string
        - name: startDate
          required: false
          in: query
          description: 'Transaction date greater than or equal to parameter in the format: YYYY-MM-DD.'
          schema:
            type: string
        - name: endDate
          required: false
          in: query
          description: 'Transaction date less than or equal to parameter in the format: YYYY-MM-DD.'
          schema:
            type: string
        - name: offset
          required: false
          in: query
          description: The offset is the position in the dataset of a particular record.
          schema:
            format: integer
            type: number
        - name: limit
          required: false
          in: query
          description: 'This is the size of the results set you would like (default: 100).'
          example: 100
          schema:
            format: integer
            type: number
        - name: orderBy
          required: false
          in: query
          schema:
            type: string
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetBillPaymentRequestV2ResponseDto'
        "202":
          description: Data in pending state
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetBillPaymentRequestV2ResponseDto'
        "204":
          description: No data available
        "400":
          description: Bad Request Error - Thrown if fields sent via query does not follow specifications
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400ResponseDtoV2'
        "401":
          description: Unauthorized - Not logged in or log in expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401ResponseDto'
        "403":
          description: Forbidden - Not enough permission
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error403ResponseDto'
        "500":
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500ResponseDto'
      security:
        - bearer: []
      tags:
        - Bill Payment Requests
    post:
      operationId: post-bill-paymentRequests
      summary: Create a Bill Payment Request
      description: |-
        **Supported for:**

        `sageIntacct`
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostBillPaymentRequestV2Dto'
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostBillPaymentRequestResponseV2Dto'
        "400":
          description: Bad Request Error - Thrown if fields sent via query does not follow specifications
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400ResponseDtoV2'
        "401":
          description: Unauthorized - Not logged in or log in expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401ResponseDto'
        "403":
          description: Forbidden - Not enough permission
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error403ResponseDto'
        "500":
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500ResponseDto'
      security:
        - bearer: []
      tags:
        - Bill Payment Requests
  /v2/accounting/bills/paymentRequests/{id}:
    patch:
      operationId: put-bill-paymentRequests
      summary: Update a Bill Payment Request
      description: |-
        **Supported for:**

        `sageIntacct`
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateBillPaymentRequestV2Dto'
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateBillPaymentResponseV2Dto'
        "400":
          description: Bad Request Error - Thrown if fields sent via query does not follow specifications
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400ResponseDtoV2'
        "401":
          description: Unauthorized - Not logged in or log in expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401ResponseDto'
        "403":
          description: Forbidden - Not enough permission
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error403ResponseDto'
        "500":
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500ResponseDto'
      security:
        - bearer: []
      tags:
        - Bill Payment Requests
  /v2/businesses:
    get:
      operationId: get businesses
      summary: List Businesses
      parameters:
        - name: businessName
          required: false
          in: query
          example: Railz
          schema:
            type: string
        - name: businessNameOrUuid
          required: false
          in: query
          description: Partial or full business name or UUID.
          example: BIZ-123
          schema:
            type: string
        - name: integrationUuids
          required: false
          in: query
          description: One or more integration uuids related to businesses to filter by.
          example:
            - INT-123
          schema:
            minItems: 1
            type: array
            items:
              type: string
        - name: status
          required: false
          in: query
          description: The status of a business. If no status is provided then it fetches all
          schema:
            minItems: 1
            type: array
            items:
              type: string
              enum:
                - active
                - inactive
                - new
        - name: limit
          required: false
          in: query
          schema:
            minimum: 1
            maximum: 500
            format: integer
            type: number
        - name: offset
          required: false
          in: query
          schema:
            format: integer
            type: number
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BusinessesV2ResponseDto'
        "202":
          description: Data in pending state
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BusinessesV2ResponseDto'
        "204":
          description: No data available
        "400":
          description: Bad Request Error - Thrown if fields sent via query does not follow specifications
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400ResponseDtoV2'
        "401":
          description: Unauthorized - Not logged in or log in expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401ResponseDto'
        "403":
          description: Forbidden - Not enough permission
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error403ResponseDto'
        "500":
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500ResponseDto'
      tags:
        - Businesses
      security:
        - bearer: []
    post:
      operationId: create businesses
      summary: Create a Business
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateBusinessDto'
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostBusinessesResponseDtoV2'
        "400":
          description: Bad Request Error - Thrown if fields sent via query does not follow specifications
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400ResponseDtoV2'
        "401":
          description: Unauthorized - Not logged in or log in expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401ResponseDto'
        "403":
          description: Forbidden - Not enough permission
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error403ResponseDto'
        "500":
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500ResponseDto'
        "201":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostBusinessesResponseDtoV2'
      tags:
        - Businesses
      security:
        - bearer: []
  /v2/businesses/{uuid}:
    put:
      operationId: update businesses
      summary: Update a Business
      parameters:
        - name: uuid
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateBusinessDtoV2'
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PutBusinessesResponseDtoV2'
        "400":
          description: Bad Request Error - Thrown if fields sent via query does not follow specifications
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400ResponseDtoV2'
        "401":
          description: Unauthorized - Not logged in or log in expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401ResponseDto'
        "403":
          description: Forbidden - Not enough permission
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error403ResponseDto'
        "500":
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500ResponseDto'
      tags:
        - Businesses
      security:
        - bearer: []
    delete:
      operationId: delete business by name
      summary: Delete a Business
      parameters:
        - name: uuid
          required: true
          in: path
          schema:
            type: string
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteBusinessResponseDto'
        "400":
          description: Bad Request Error - Thrown if fields sent via query does not follow specifications
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400ResponseDtoV2'
        "401":
          description: Unauthorized - Not logged in or log in expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401ResponseDto'
        "403":
          description: Forbidden - Not enough permission
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error403ResponseDto'
        "500":
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500ResponseDto'
      tags:
        - Businesses
      security:
        - bearer: []
  /v2/businesses/{uuid}/connection/migrate:
    post:
      operationId: migrateConnection
      summary: Migrate Connection
      parameters:
        - name: uuid
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConnectionMigrationDto'
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectionMigrationResponseDto'
        "400":
          description: Bad Request Error - Thrown if fields sent via query does not follow specifications
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400ResponseDtoV2'
        "401":
          description: Unauthorized - Not logged in or log in expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401ResponseDto'
        "403":
          description: Forbidden - Not enough permission
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error403ResponseDto'
        "500":
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500ResponseDto'
      tags:
        - Businesses
      security:
        - bearer: []
  /v2/businesses/info:
    get:
      operationId: businessInfo
      summary: List Business Info
      description: |-
        **Supported for:**

        `quickbooks` `xero` `freshbooks` `quickbooksDesktop` `sageIntacct` `sageBusinessCloud` `oracleNetsuite` `dynamicsBusinessCentral` `wave` `zohoBooks`
      parameters:
        - name: connectionUuid
          required: true
          in: query
          description: Unique connection identifier.
          example: CON-396d5daa-26b2-4979-89b6-cafb2c298155
          schema:
            type: string
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BusinessInfoResponseDtoV2'
        "202":
          description: Data in pending state
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BusinessInfoResponseDtoV2'
        "204":
          description: No data available
        "400":
          description: Bad Request Error - Thrown if fields sent via query does not follow specifications
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400ResponseDtoV2'
        "401":
          description: Unauthorized - Not logged in or log in expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401ResponseDto'
        "403":
          description: Forbidden - Not enough permission
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error403ResponseDto'
        "500":
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500ResponseDto'
      tags:
        - Businesses
      security:
        - bearer: []
  /v2/businesses/generateUrl:
    post:
      operationId: generateUrl
      summary: API for generating sites URL
      description: API for generating short lived session IDs, session ID should expire 5 days from created date
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                businessUuid:
                  type: string
                  example: BUS-1233
              required:
                - businessUuid
      responses:
        "201":
          description: ""
          content:
            application/json:
              schema:
                type: object
                properties:
                  url:
                    type: string
                    readOnly: true
                    example: https://sites.railz.ai/ux34ass113333
                  expiryDate:
                    type: string
                    readOnly: true
                    example: "2021-08-09 23:50:00"
                required:
                  - url
                  - expiryDate
        "400":
          description: Bad Request Error - Thrown if fields sent via query does not follow specifications
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400ResponseDtoV2'
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401ResponseDto'
        "403":
          description: Forbidden - Not enough permission
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error403ResponseDto'
        "404":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404Dto'
        "500":
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500ResponseDto'
      tags:
        - Businesses
      security:
        - bearer: []
  /v2/analytics/businessValuations:
    get:
      operationId: businessValuations
      summary: List Business Valuations
      description: |-
        **Supported for:**

        `quickbooks` `xero` `freshbooks` `quickbooksDesktop` `dynamicsBusinessCentral` `zohoBooks`
      parameters:
        - name: connectionUuid
          required: true
          in: query
          description: Unique connection identifier.
          example: CON-396d5daa-26b2-4979-89b6-cafb2c298155
          schema:
            type: string
        - name: startDate
          required: false
          in: query
          schema:
            type: string
        - name: endDate
          required: false
          in: query
          schema:
            type: string
        - name: reconstruct
          required: false
          in: query
          description: Railz reconstructed Business Valuation
          schema:
            default: "false"
            enum:
              - "true"
              - "false"
            type: string
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BusinessValuationResponseV2Dto'
        "202":
          description: Data in pending state
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BusinessValuationResponseV2Dto'
        "204":
          description: No data available
        "400":
          description: Bad Request Error - Thrown if fields sent via query does not follow specifications
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400ResponseDtoV2'
        "401":
          description: Unauthorized - Not logged in or log in expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401ResponseDto'
        "403":
          description: Forbidden - Not enough permission
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error403ResponseDto'
        "500":
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500ResponseDto'
      security:
        - bearer: []
      tags:
        - Business Valuations
  /v2/analytics/creditScores:
    get:
      operationId: creditScores
      summary: List Credit Scores
      description: |-
        **Supported for:**

        `quickbooks` `xero` `freshbooks` `quickbooksDesktop` `dynamicsBusinessCentral` `zohoBooks`
      parameters:
        - name: connectionUuid
          required: true
          in: query
          description: Unique connection identifier.
          example: CON-396d5daa-26b2-4979-89b6-cafb2c298155
          schema:
            type: string
        - name: endDate
          required: false
          in: query
          description: 'The end date of the Transaction report frequency in the format: YYYY-MM-DD.'
          schema:
            type: string
        - name: reconstruct
          required: false
          in: query
          description: Railz reconstructed Credit Score.
          schema:
            default: "false"
            enum:
              - "true"
              - "false"
            type: string
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreditScoresResponseV2Dto'
        "202":
          description: Data in pending state
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreditScoresResponseV2Dto'
        "204":
          description: No data available
        "400":
          description: Bad Request Error - Thrown if fields sent via query does not follow specifications
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400ResponseDtoV2'
        "401":
          description: Unauthorized - Not logged in or log in expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401ResponseDto'
        "403":
          description: Forbidden - Not enough permission
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error403ResponseDto'
        "500":
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500ResponseDto'
      security:
        - bearer: []
      tags:
        - Credit Scores
  /v2/analytics/creditRatings:
    get:
      operationId: creditRatings
      summary: List Credit Ratings
      description: |-
        **Supported for:**

        `quickbooks` `xero` `freshbooks` `quickbooksDesktop` `dynamicsBusinessCentral` `zohoBooks`
      parameters:
        - name: connectionUuid
          required: true
          in: query
          description: Unique connection identifier.
          example: CON-396d5daa-26b2-4979-89b6-cafb2c298155
          schema:
            type: string
        - name: endDate
          required: false
          in: query
          description: 'The end date of the Transaction report frequency in the format: YYYY-MM-DD.'
          schema:
            type: string
        - name: reconstruct
          required: false
          in: query
          description: Railz reconstructed Credit Rating
          schema:
            default: "false"
            enum:
              - "true"
              - "false"
            type: string
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreditRatingsResponseV2Dto'
        "202":
          description: Data in pending state
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreditRatingsResponseV2Dto'
        "204":
          description: No data available
        "400":
          description: Bad Request Error - Thrown if fields sent via query does not follow specifications
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400ResponseDtoV2'
        "401":
          description: Unauthorized - Not logged in or log in expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401ResponseDto'
        "403":
          description: Forbidden - Not enough permission
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error403ResponseDto'
        "500":
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500ResponseDto'
      security:
        - bearer: []
      tags:
        - Credit Ratings
  /v2/accounting/customers:
    get:
      operationId: customers
      summary: List Customers
      description: |-
        **Supported for:**

        `quickbooks` `xero` `freshbooks` `quickbooksDesktop` `sageIntacct` `sageBusinessCloud` `oracleNetsuite` `dynamicsBusinessCentral` `wave` `zohoBooks`
      parameters:
        - name: connectionUuid
          required: true
          in: query
          description: Unique connection identifier.
          example: CON-396d5daa-26b2-4979-89b6-cafb2c298155
          schema:
            type: string
        - name: offset
          required: false
          in: query
          description: The offset is the position in the dataset of a particular record.
          schema:
            format: integer
            type: number
        - name: limit
          required: false
          in: query
          description: 'This is the size of the results set you would like (default: 100).'
          example: 100
          schema:
            format: integer
            type: number
        - name: orderBy
          required: false
          in: query
          schema:
            type: string
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetCustomerResponseV2Dto'
        "202":
          description: Data in pending state
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetCustomerResponseV2Dto'
        "204":
          description: No data available
        "400":
          description: Bad Request Error - Thrown if fields sent via query does not follow specifications
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400ResponseDtoV2'
        "401":
          description: Unauthorized - Not logged in or log in expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401ResponseDto'
        "403":
          description: Forbidden - Not enough permission
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error403ResponseDto'
        "500":
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500ResponseDto'
      security:
        - bearer: []
      tags:
        - Customers
    post:
      operationId: push-customers
      summary: Create a Customer
      description: |-
        **Supported for:**

        `quickbooks` `xero` `freshbooks` `sageIntacct` `sageBusinessCloud` `oracleNetsuite` `dynamicsBusinessCentral` `wave` `zohoBooks`
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PushCustomerV2Dto'
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PushCustomerV2ResponseDto'
        "400":
          description: Bad Request Error - Thrown if fields sent via query does not follow specifications
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400ResponseDtoV2'
        "401":
          description: Unauthorized - Not logged in or log in expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401ResponseDto'
        "403":
          description: Forbidden - Not enough permission
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error403ResponseDto'
        "500":
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500ResponseDto'
      security:
        - bearer: []
      tags:
        - Customers
  /v2/accounting/customers/batch:
    post:
      operationId: post-batchCustomer
      summary: Batch Create Customers
      description: |-
        **Supported for:**

        `quickbooks` `xero` `freshbooks` `sageIntacct` `sageBusinessCloud` `oracleNetsuite` `dynamicsBusinessCentral` `wave`
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchPushCustomerV2Dto'
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchPushCustomerResponseV2Dto'
        "400":
          description: Bad Request Error - Thrown if fields sent via query does not follow specifications
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400ResponseDtoV2'
        "401":
          description: Unauthorized - Not logged in or log in expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401ResponseDto'
        "403":
          description: Forbidden - Not enough permission
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error403ResponseDto'
        "500":
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500ResponseDto'
      security:
        - bearer: []
      tags:
        - Customers
    put:
      operationId: update-batchCustomer
      summary: Batch Update Customers
      description: |-
        **Supported for:**

        `quickbooks` `xero` `freshbooks` `sageIntacct` `sageBusinessCloud` `oracleNetsuite` `dynamicsBusinessCentral` `wave`
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchUpdateCustomerDto'
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchUpdateCustomerResponseDto'
        "400":
          description: Bad Request Error - Thrown if fields sent via query does not follow specifications
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400ResponseDtoV2'
        "401":
          description: Unauthorized - Not logged in or log in expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401ResponseDto'
        "403":
          description: Forbidden - Not enough permission
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error403ResponseDto'
        "500":
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500ResponseDto'
      security:
        - bearer: []
      tags:
        - Customers
  /v2/accounting/customers/{id}:
    put:
      operationId: put-customer
      summary: Update a Customer
      description: |-
        **Supported for:**

        `quickbooks` `xero` `freshbooks` `sageIntacct` `sageBusinessCloud` `oracleNetsuite` `dynamicsBusinessCentral` `wave` `zohoBooks`
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PushUpdateCustomerV2Dto'
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PutCustomerV2ResponseDto'
        "400":
          description: Bad Request Error - Thrown if fields sent via query does not follow specifications
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400ResponseDtoV2'
        "401":
          description: Unauthorized - Not logged in or log in expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401ResponseDto'
        "403":
          description: Forbidden - Not enough permission
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error403ResponseDto'
        "500":
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500ResponseDto'
      security:
        - bearer: []
      tags:
        - Customers
  /v2/accounting/customers/bankAccounts:
    get:
      operationId: customers-bankAccounts
      summary: List Customer Bank Accounts
      description: |-
        **Supported for:**

        `quickbooks` `xero` `sageIntacct`
      parameters:
        - name: connectionUuid
          required: true
          in: query
          description: Unique connection identifier.
          example: CON-396d5daa-26b2-4979-89b6-cafb2c298155
          schema:
            type: string
        - name: offset
          required: false
          in: query
          description: The offset is the position in the dataset of a particular record.
          schema:
            format: integer
            type: number
        - name: limit
          required: false
          in: query
          description: 'This is the size of the results set you would like (default: 100).'
          example: 100
          schema:
            format: integer
            type: number
        - name: orderBy
          required: false
          in: query
          schema:
            type: string
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetCustomerBankAccountResponseV2Dto'
        "202":
          description: Data in pending state
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetCustomerBankAccountResponseV2Dto'
        "204":
          description: No data available
        "400":
          description: Bad Request Error - Thrown if fields sent via query does not follow specifications
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400ResponseDtoV2'
        "401":
          description: Unauthorized - Not logged in or log in expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401ResponseDto'
        "403":
          description: Forbidden - Not enough permission
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error403ResponseDto'
        "500":
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500ResponseDto'
      security:
        - bearer: []
      tags:
        - Customers
    post:
      operationId: push-customers-bankAccounts
      summary: Create a Customer Bank Account
      description: |-
        **Supported for:**

        `quickbooks` `sageIntacct`
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PushCustomerBankAccountDto'
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PushCustomerBankAccountResponseDto'
        "400":
          description: Bad Request Error - Thrown if fields sent via query does not follow specifications
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400ResponseDtoV2'
        "401":
          description: Unauthorized - Not logged in or log in expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401ResponseDto'
        "403":
          description: Forbidden - Not enough permission
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error403ResponseDto'
        "500":
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500ResponseDto'
      security:
        - bearer: []
      tags:
        - Customers
  /v2/accounting/deposits:
    get:
      operationId: deposits
      summary: List Deposits
      description: |-
        **Supported for:**

        `quickbooks` `xero` `quickbooksDesktop` `sageBusinessCloud` `oracleNetsuite`
      parameters:
        - name: connectionUuid
          required: true
          in: query
          description: Unique connection identifier.
          example: CON-396d5daa-26b2-4979-89b6-cafb2c298155
          schema:
            type: string
        - name: startDate
          required: false
          in: query
          description: 'Transaction date greater than or equal to parameter in the format: YYYY-MM-DD.'
          schema:
            type: string
        - name: endDate
          required: false
          in: query
          description: 'Transaction date less than or equal to parameter in the format: YYYY-MM-DD.'
          schema:
            type: string
        - name: offset
          required: false
          in: query
          description: The offset is the position in the dataset of a particular record.
          schema:
            format: integer
            type: number
        - name: limit
          required: false
          in: query
          description: 'This is the size of the results set you would like (default: 100).'
          example: 100
          schema:
            format: integer
            type: number
        - name: orderBy
          required: false
          in: query
          schema:
            type: string
        - name: totalAmount
          required: false
          in: query
          schema:
            format: float
            type: number
        - name: status
          required: false
          in: query
          schema:
            enum:
              - open
              - paid
              - void
              - unknown
              - draft
            type: string
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetDepositResponseV2Dto'
        "202":
          description: Data in pending state
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetDepositResponseV2Dto'
        "204":
          description: No data available
        "400":
          description: Bad Request Error - Thrown if fields sent via query does not follow specifications
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400ResponseDtoV2'
        "401":
          description: Unauthorized - Not logged in or log in expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401ResponseDto'
        "403":
          description: Forbidden - Not enough permission
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error403ResponseDto'
        "500":
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500ResponseDto'
      security:
        - bearer: []
      tags:
        - Deposits
    post:
      operationId: push-deposit
      summary: Create a Deposit
      description: |-
        **Supported for:**

        `quickbooks` `xero` `sageBusinessCloud` `oracleNetsuite`
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PushDepositV2Dto'
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PushDepositV2ResponseDto'
        "400":
          description: Bad Request Error - Thrown if fields sent via query does not follow specifications
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400ResponseDtoV2'
        "401":
          description: Unauthorized - Not logged in or log in expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401ResponseDto'
        "403":
          description: Forbidden - Not enough permission
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error403ResponseDto'
        "500":
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500ResponseDto'
      security:
        - bearer: []
      tags:
        - Deposits
  /v2/accounting/estimates:
    get:
      operationId: estimates
      summary: List Estimates
      description: |-
        **Supported for:**

        `quickbooks` `xero` `freshbooks` `oracleNetsuite`
      parameters:
        - name: connectionUuid
          required: true
          in: query
          description: Unique connection identifier.
          example: CON-396d5daa-26b2-4979-89b6-cafb2c298155
          schema:
            type: string
        - name: startDate
          required: false
          in: query
          description: 'Transaction date greater than or equal to parameter in the format: YYYY-MM-DD.'
          schema:
            type: string
        - name: endDate
          required: false
          in: query
          description: 'Transaction date less than or equal to parameter in the format: YYYY-MM-DD.'
          schema:
            type: string
        - name: offset
          required: false
          in: query
          description: The offset is the position in the dataset of a particular record.
          schema:
            format: integer
            type: number
        - name: limit
          required: false
          in: query
          description: 'This is the size of the results set you would like (default: 100).'
          example: 100
          schema:
            format: integer
            type: number
        - name: orderBy
          required: false
          in: query
          schema:
            type: string
        - name: totalAmount
          required: false
          in: query
          schema:
            format: float
            type: number
        - name: status
          required: false
          in: query
          schema:
            enum:
              - open
              - closed
              - void
              - unknown
              - draft
            type: string
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetEstimateResponseV2Dto'
        "202":
          description: Data in pending state
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetEstimateResponseV2Dto'
        "204":
          description: No data available
        "400":
          description: Bad Request Error - Thrown if fields sent via query does not follow specifications
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400ResponseDtoV2'
        "401":
          description: Unauthorized - Not logged in or log in expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401ResponseDto'
        "403":
          description: Forbidden - Not enough permission
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error403ResponseDto'
        "500":
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500ResponseDto'
      security:
        - bearer: []
      tags:
        - Estimates
    post:
      operationId: push-estimates
      summary: Create an Estimate
      description: |-
        **Supported for:**

        `quickbooks` `xero` `freshbooks` `oracleNetsuite`
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PushEstimateV2Dto'
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PushEstimateV2ResponseDto'
        "400":
          description: Bad Request Error - Thrown if fields sent via query does not follow specifications
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400ResponseDtoV2'
        "401":
          description: Unauthorized - Not logged in or log in expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401ResponseDto'
        "403":
          description: Forbidden - Not enough permission
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error403ResponseDto'
        "500":
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500ResponseDto'
      security:
        - bearer: []
      tags:
        - Estimates
  /v2/analytics/financialBenchmarking:
    get:
      operationId: financialBenchmarking
      summary: List of Financial Benchmarks
      parameters:
        - name: industryCode
          required: false
          in: query
          example: "54"
          schema:
            type: string
        - name: region
          required: false
          in: query
          example: CA
          schema:
            type: string
        - name: timeInBusiness
          required: false
          in: query
          schema:
            enum:
              - 1
              - 2
              - 3
              - 4
              - 5
              - 10
              - 99
            type: number
        - name: offset
          required: false
          in: query
          schema:
            format: integer
            type: number
        - name: limit
          required: false
          in: query
          example: 100
          schema:
            format: integer
            type: number
        - name: orderBy
          required: false
          in: query
          schema:
            type: string
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FinancialBenchmarkingsResponseDto'
        "202":
          description: Data in pending state
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FinancialBenchmarkingsResponseDto'
        "204":
          description: No data available
        "400":
          description: Bad Request Error - Thrown if fields sent via query does not follow specifications
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400ResponseDtoV2'
        "401":
          description: Unauthorized - Not logged in or log in expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401ResponseDto'
        "403":
          description: Forbidden - Not enough permission
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error403ResponseDto'
        "500":
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500ResponseDto'
      security:
        - bearer: []
        - bearer: []
      tags:
        - Financial Benchmarking
  /v2/analytics/financialForecasts:
    get:
      operationId: financialForecasts
      summary: List Financial Forecasts
      description: |-
        **Supported for:**

        `quickbooks` `xero` `freshbooks` `quickbooksDesktop` `dynamicsBusinessCentral` `zohoBooks`
      parameters:
        - name: connectionUuid
          required: true
          in: query
          description: Unique connection identifier.
          example: CON-396d5daa-26b2-4979-89b6-cafb2c298155
          schema:
            type: string
        - name: startDate
          required: false
          in: query
          schema:
            type: string
        - name: endDate
          required: false
          in: query
          schema:
            type: string
        - name: financialStatementType
          required: true
          in: query
          schema:
            enum:
              - balanceSheets
              - incomeStatements
              - cashflowStatements
            type: string
        - name: reportFrequency
          required: true
          in: query
          schema:
            enum:
              - month
              - quarter
              - year
            type: string
        - name: percentile
          required: false
          in: query
          example: 0.05
          schema:
            format: float
            type: number
        - name: reconstruct
          required: false
          in: query
          description: Railz reconstructed Financial Forecast
          schema:
            default: "false"
            enum:
              - "true"
              - "false"
            type: string
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FinancialForecastResponseV2Dto'
        "202":
          description: Data in pending state
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FinancialForecastResponseV2Dto'
        "204":
          description: No data available
        "400":
          description: Bad Request Error - Thrown if fields sent via query does not follow specifications
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400ResponseDtoV2'
        "401":
          description: Unauthorized - Not logged in or log in expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401ResponseDto'
        "403":
          description: Forbidden - Not enough permission
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error403ResponseDto'
        "500":
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500ResponseDto'
      security:
        - bearer: []
      tags:
        - Financial Forecasts
  /v2/analytics/fraudRiskMetrics:
    get:
      operationId: financialFraudMetrics
      summary: List Fraud Risk Metrics
      description: |-
        **Supported for:**

        `quickbooks` `xero` `freshbooks` `quickbooksDesktop` `dynamicsBusinessCentral` `zohoBooks`
      parameters:
        - name: connectionUuid
          required: true
          in: query
          description: Unique connection identifier.
          example: CON-396d5daa-26b2-4979-89b6-cafb2c298155
          schema:
            type: string
        - name: startDate
          required: false
          in: query
          description: 'The start date of the Transaction report frequency in the format: YYYY-MM-DD.'
          schema:
            type: string
        - name: endDate
          required: false
          in: query
          description: 'The end date of the Transaction report frequency in the format: YYYY-MM-DD.'
          schema:
            type: string
        - name: offset
          required: false
          in: query
          description: The offset is the position in the dataset of a particular record.
          schema:
            format: integer
            type: number
        - name: limit
          required: false
          in: query
          description: 'This is the size of the results set you would like (default: 100).'
          example: 100
          schema:
            format: integer
            type: number
        - name: orderBy
          required: false
          in: query
          schema:
            type: string
        - name: reportFrequency
          required: true
          in: query
          schema:
            default: month
            enum:
              - month
              - quarter
              - year
            type: string
        - name: reconstruct
          required: false
          in: query
          description: Railz reconstructed Fraud Risk Metrics
          schema:
            default: "false"
            enum:
              - "true"
              - "false"
            type: string
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FinancialFraudRiskResponseV2Dto'
        "202":
          description: Data in pending state
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FinancialFraudRiskResponseV2Dto'
        "204":
          description: No data available
        "400":
          description: Bad Request Error - Thrown if fields sent via query does not follow specifications
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400ResponseDtoV2'
        "401":
          description: Unauthorized - Not logged in or log in expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401ResponseDto'
        "403":
          description: Forbidden - Not enough permission
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error403ResponseDto'
        "500":
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500ResponseDto'
      security:
        - bearer: []
      tags:
        - Financial Fraud Risk
  /v2/analytics/financialRatios:
    get:
      operationId: financialRatios
      summary: List Financial Ratios
      description: |-
        **Supported for:**

        `quickbooks` `xero` `freshbooks` `quickbooksDesktop` `dynamicsBusinessCentral` `zohoBooks`
      parameters:
        - name: connectionUuid
          required: true
          in: query
          description: Unique connection identifier.
          example: CON-396d5daa-26b2-4979-89b6-cafb2c298155
          schema:
            type: string
        - name: reportFrequency
          required: true
          in: query
          schema:
            enum:
              - month
              - quarter
              - year
            type: string
        - name: startDate
          required: false
          in: query
          schema:
            type: string
        - name: endDate
          required: false
          in: query
          schema:
            type: string
        - name: ratio
          required: false
          in: query
          schema:
            enum:
              - averageCollectionPeriod
              - grossBurnRate
              - inventoryTurnoverRatio
              - assetTurnoverRatio
              - payablesConversionPeriod
              - accountsReceivableTurnoverRatio
              - accountsPayableTurnoverRatio
              - daysPayableOutstanding
              - daysSalesOutstanding
              - averageOutstandingPayablesBalance
              - averageOutstandingReceivablesBalance
              - churnRate
              - equityToLTAssets
              - shortDebtToEquityRatio
              - debtToEquityRatio
              - interestBankLoan
              - interestCoverageRatio
              - debtToAssetsRatio
              - debtServiceCoverageRatio
              - leverageIndex
              - leverageRatio
              - quickRatio
              - absoluteLiquidity
              - currentRatio
              - grossBurn
              - runway
              - cashRatio
              - freeCashflowRatio
              - cashFlowCoverageRatio
              - debtToEnterpriseValue
              - returnOnAssets
              - ebitda
              - ebitdaMargin
              - workingCapital
              - freeCashFlow
              - grossMargin
              - netProfitMargin
              - operatingMargin
              - returnOnEquity
              - revenueConcentrationIndex
              - totalAccrualsTotalAssets
              - sgaExpensesIndex
              - salesGrowthIndex
              - grossMarginIndex
              - monthlyRecurringRevenue
              - monthlyRecurringRevenueRate
              - annualRecurringRevenue
              - annualRecurringRevenueRate
              - depreciationIndex
              - assetQualityIndex
              - daysSalesReceivablesIndex
            type: string
        - name: ratioType
          required: false
          in: query
          schema:
            enum:
              - credit
              - efficiency
              - leverage
              - liquidity
              - market
              - profitability
              - reliability
            type: string
        - name: offset
          required: false
          in: query
          schema:
            format: integer
            type: number
        - name: limit
          required: false
          in: query
          example: 100
          schema:
            format: integer
            type: number
        - name: orderBy
          required: false
          in: query
          schema:
            type: string
        - name: reconstruct
          required: false
          in: query
          description: Railz reconstructed Financial Ratio
          schema:
            default: "false"
            enum:
              - "true"
              - "false"
            type: string
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FinancialRatiosResponseV2Dto'
        "202":
          description: Data in pending state
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FinancialRatiosResponseV2Dto'
        "204":
          description: No data available
        "400":
          description: Bad Request Error - Thrown if fields sent via query does not follow specifications
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400ResponseDtoV2'
        "401":
          description: Unauthorized - Not logged in or log in expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401ResponseDto'
        "403":
          description: Forbidden - Not enough permission
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error403ResponseDto'
        "500":
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500ResponseDto'
      security:
        - bearer: []
      tags:
        - Financial Ratios
  /v2/accounting/balanceSheets:
    get:
      operationId: balanceSheets
      summary: List Balance Sheets
      description: |-
        **Supported for:**

        `quickbooks` `xero` `freshbooks` `quickbooksDesktop` `dynamicsBusinessCentral` `zohoBooks`
      parameters:
        - name: connectionUuid
          required: true
          in: query
          description: Unique connection identifier.
          example: CON-396d5daa-26b2-4979-89b6-cafb2c298155
          schema:
            type: string
        - name: accountingMethod
          required: false
          in: query
          schema:
            default: accrual
            enum:
              - cash
              - accrual
            type: string
        - name: reportFrequency
          required: true
          in: query
          schema:
            enum:
              - month
              - quarter
              - year
            type: string
        - name: startDate
          required: false
          in: query
          schema:
            type: string
        - name: endDate
          required: false
          in: query
          schema:
            type: string
        - name: section
          required: false
          in: query
          schema:
            enum:
              - Assets
              - Liabilities
              - Equity
            type: string
        - name: subSection
          required: false
          in: query
          schema:
            enum:
              - Current Assets
              - Non-Current Assets
              - Current Liabilities
              - Non-Current Liabilities
              - Equity
              - Other Assets
              - Other Liabilities
              - Expenses
            type: string
        - name: group
          required: false
          in: query
          schema:
            type: string
        - name: subGroup
          required: false
          in: query
          schema:
            type: string
        - name: accountId
          required: false
          in: query
          schema:
            type: string
        - name: subAccountId
          required: false
          in: query
          schema:
            type: string
        - name: account
          required: false
          in: query
          schema:
            type: string
        - name: value
          required: false
          in: query
          schema:
            format: float
            type: number
        - name: offset
          required: false
          in: query
          schema:
            format: integer
            type: number
        - name: limit
          required: false
          in: query
          example: 100
          schema:
            format: integer
            type: number
        - name: orderBy
          required: false
          in: query
          schema:
            type: string
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BalanceSheetsResponseV2Dto'
        "202":
          description: Data in pending state
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BalanceSheetsResponseV2Dto'
        "204":
          description: No data available
        "400":
          description: Bad Request Error - Thrown if fields sent via query does not follow specifications
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400ResponseDtoV2'
        "401":
          description: Unauthorized - Not logged in or log in expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401ResponseDto'
        "403":
          description: Forbidden - Not enough permission
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error403ResponseDto'
        "500":
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500ResponseDto'
      security:
        - bearer: []
      tags:
        - Balance Sheets
  /v2/accounting/cashflowStatements:
    get:
      operationId: cashflowStatements
      summary: List Cashflow Statements
      description: |-
        **Supported for:**

        `quickbooks` `dynamicsBusinessCentral` `zohoBooks`
      parameters:
        - name: connectionUuid
          required: true
          in: query
          description: Unique connection identifier.
          example: CON-396d5daa-26b2-4979-89b6-cafb2c298155
          schema:
            type: string
        - name: accountingMethod
          required: false
          in: query
          schema:
            default: accrual
            enum:
              - cash
              - accrual
            type: string
        - name: reportFrequency
          required: true
          in: query
          schema:
            enum:
              - month
              - quarter
              - year
            type: string
        - name: startDate
          required: false
          in: query
          schema:
            type: string
        - name: endDate
          required: false
          in: query
          schema:
            type: string
        - name: section
          required: false
          in: query
          schema:
            enum:
              - Operating Activities
              - Financing Activities
              - Investing Activities
              - Cash
            type: string
        - name: subSection
          required: false
          in: query
          schema:
            enum:
              - Payments
              - Adjustments
              - Changes
              - Proceeds
              - Stock
              - Intangibles
              - Property Plant And Equipment
              - Cash
            type: string
        - name: group
          required: false
          in: query
          schema:
            type: string
        - name: subGroup
          required: false
          in: query
          schema:
            type: string
        - name: accountId
          required: false
          in: query
          schema:
            type: string
        - name: subAccountId
          required: false
          in: query
          schema:
            type: string
        - name: account
          required: false
          in: query
          schema:
            type: string
        - name: value
          required: false
          in: query
          schema:
            format: float
            type: number
        - name: offset
          required: false
          in: query
          schema:
            format: integer
            type: number
        - name: limit
          required: false
          in: query
          example: 100
          schema:
            format: integer
            type: number
        - name: orderBy
          required: false
          in: query
          schema:
            type: string
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CashflowStatementsResponseV2Dto'
        "202":
          description: Data in pending state
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CashflowStatementsResponseV2Dto'
        "204":
          description: No data available
        "400":
          description: Bad Request Error - Thrown if fields sent via query does not follow specifications
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400ResponseDtoV2'
        "401":
          description: Unauthorized - Not logged in or log in expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401ResponseDto'
        "403":
          description: Forbidden - Not enough permission
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error403ResponseDto'
        "500":
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500ResponseDto'
      security:
        - bearer: []
      tags:
        - Cashflow Statements
  /v2/accounting/incomeStatements:
    get:
      operationId: incomeStatements
      summary: List Income Statements
      description: |-
        **Supported for:**

        `quickbooks` `xero` `freshbooks` `quickbooksDesktop` `dynamicsBusinessCentral` `zohoBooks`
      parameters:
        - name: connectionUuid
          required: true
          in: query
          description: Unique connection identifier.
          example: CON-396d5daa-26b2-4979-89b6-cafb2c298155
          schema:
            type: string
        - name: accountingMethod
          required: false
          in: query
          schema:
            default: accrual
            enum:
              - cash
              - accrual
            type: string
        - name: reportFrequency
          required: true
          in: query
          schema:
            enum:
              - month
              - quarter
              - year
            type: string
        - name: startDate
          required: false
          in: query
          schema:
            type: string
        - name: endDate
          required: false
          in: query
          schema:
            type: string
        - name: section
          required: false
          in: query
          schema:
            enum:
              - Income
              - Expenses
            type: string
        - name: subSection
          required: false
          in: query
          schema:
            enum:
              - Income
              - Cost of Goods Sold
              - Operating Expenses
              - Other Income
              - Other Expenses
              - Uncategorized Expenses
              - Uncategorized Income
              - Expenses
            type: string
        - name: group
          required: false
          in: query
          schema:
            type: string
        - name: subGroup
          required: false
          in: query
          schema:
            type: string
        - name: accountId
          required: false
          in: query
          schema:
            type: string
        - name: subAccountId
          required: false
          in: query
          schema:
            type: string
        - name: account
          required: false
          in: query
          schema:
            type: string
        - name: value
          required: false
          in: query
          schema:
            format: float
            type: number
        - name: offset
          required: false
          in: query
          schema:
            format: integer
            type: number
        - name: limit
          required: false
          in: query
          example: 100
          schema:
            format: integer
            type: number
        - name: orderBy
          required: false
          in: query
          schema:
            type: string
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IncomeStatementsResponseV2Dto'
        "202":
          description: Data in pending state
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IncomeStatementsResponseV2Dto'
        "204":
          description: No data available
        "400":
          description: Bad Request Error - Thrown if fields sent via query does not follow specifications
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400ResponseDtoV2'
        "401":
          description: Unauthorized - Not logged in or log in expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401ResponseDto'
        "403":
          description: Forbidden - Not enough permission
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error403ResponseDto'
        "500":
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500ResponseDto'
      security:
        - bearer: []
      tags:
        - Income Statements
  /v2/accounting/inventory:
    get:
      operationId: inventory
      summary: List Inventory Items
      description: |-
        **Supported for:**

        `quickbooks` `xero` `freshbooks` `quickbooksDesktop` `sageIntacct` `sageBusinessCloud` `oracleNetsuite` `dynamicsBusinessCentral` `wave` `zohoBooks`
      parameters:
        - name: connectionUuid
          required: true
          in: query
          description: Unique connection identifier.
          example: CON-396d5daa-26b2-4979-89b6-cafb2c298155
          schema:
            type: string
        - name: offset
          required: false
          in: query
          description: The offset is the position in the dataset of a particular record.
          schema:
            format: integer
            type: number
        - name: limit
          required: false
          in: query
          description: 'This is the size of the results set you would like (default: 100).'
          example: 100
          schema:
            format: integer
            type: number
        - name: orderBy
          required: false
          in: query
          schema:
            type: string
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetInventoryResponseV2Dto'
        "202":
          description: Data in pending state
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetInventoryResponseV2Dto'
        "204":
          description: No data available
        "400":
          description: Bad Request Error - Thrown if fields sent via query does not follow specifications
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400ResponseDtoV2'
        "401":
          description: Unauthorized - Not logged in or log in expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401ResponseDto'
        "403":
          description: Forbidden - Not enough permission
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error403ResponseDto'
        "500":
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500ResponseDto'
      security:
        - bearer: []
      tags:
        - Inventory
    post:
      operationId: push-inventory
      summary: Create an Inventory Item
      description: |-
        **Supported for:**

        `quickbooks` `xero` `freshbooks` `sageIntacct` `oracleNetsuite` `dynamicsBusinessCentral` `wave` `zohoBooks`
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PushInventoryV2Dto'
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PushInventoryV2ResponseDto'
        "400":
          description: Bad Request Error - Thrown if fields sent via query does not follow specifications
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400ResponseDtoV2'
        "401":
          description: Unauthorized - Not logged in or log in expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401ResponseDto'
        "403":
          description: Forbidden - Not enough permission
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error403ResponseDto'
        "500":
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500ResponseDto'
      security:
        - bearer: []
      tags:
        - Inventory
  /v2/accounting/inventory/{id}:
    put:
      operationId: put-inventory
      summary: Update an Inventory Item
      description: |-
        **Supported for:**

        `quickbooks` `xero` `freshbooks` `sageIntacct` `oracleNetsuite` `dynamicsBusinessCentral` `wave` `zohoBooks`
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateInventoryV2Dto'
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateInventoryV2ResponseDto'
        "400":
          description: Bad Request Error - Thrown if fields sent via query does not follow specifications
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400ResponseDtoV2'
        "401":
          description: Unauthorized - Not logged in or log in expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401ResponseDto'
        "403":
          description: Forbidden - Not enough permission
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error403ResponseDto'
        "500":
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500ResponseDto'
      security:
        - bearer: []
      tags:
        - Inventory
  /v2/accounting/invoices:
    get:
      operationId: invoices
      summary: List Invoices
      description: |-
        **Supported for:**

        `quickbooks` `xero` `freshbooks` `quickbooksDesktop` `sageIntacct` `sageBusinessCloud` `oracleNetsuite` `dynamicsBusinessCentral` `wave` `zohoBooks`
      parameters:
        - name: connectionUuid
          required: true
          in: query
          description: Unique connection identifier.
          example: CON-396d5daa-26b2-4979-89b6-cafb2c298155
          schema:
            type: string
        - name: startDate
          required: false
          in: query
          description: 'Transaction date greater than or equal to parameter in the format: YYYY-MM-DD.'
          schema:
            type: string
        - name: endDate
          required: false
          in: query
          description: 'Transaction date less than or equal to parameter in the format: YYYY-MM-DD.'
          schema:
            type: string
        - name: offset
          required: false
          in: query
          description: The offset is the position in the dataset of a particular record.
          schema:
            format: integer
            type: number
        - name: limit
          required: false
          in: query
          description: 'This is the size of the results set you would like (default: 100).'
          example: 100
          schema:
            format: integer
            type: number
        - name: orderBy
          required: false
          in: query
          schema:
            type: string
        - name: status
          required: false
          in: query
          schema:
            enum:
              - open
              - draft
              - partiallyPaid
              - paid
              - unknown
              - void
            type: string
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetInvoiceResponseV2Dto'
        "202":
          description: Data in pending state
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetInvoiceResponseV2Dto'
        "204":
          description: No data available
        "400":
          description: Bad Request Error - Thrown if fields sent via query does not follow specifications
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400ResponseDtoV2'
        "401":
          description: Unauthorized - Not logged in or log in expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401ResponseDto'
        "403":
          description: Forbidden - Not enough permission
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error403ResponseDto'
        "500":
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500ResponseDto'
      security:
        - bearer: []
      tags:
        - Invoices
    post:
      operationId: push-invoices
      summary: Create an Invoice
      description: |-
        **Supported for:**

        `quickbooks` `xero` `freshbooks` `sageIntacct` `sageBusinessCloud` `oracleNetsuite` `dynamicsBusinessCentral` `wave` `zohoBooks`
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PushInvoiceV2Dto'
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PushInvoiceResponseV2Dto'
        "400":
          description: Bad Request Error - Thrown if fields sent via query does not follow specifications
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400ResponseDtoV2'
        "401":
          description: Unauthorized - Not logged in or log in expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401ResponseDto'
        "403":
          description: Forbidden - Not enough permission
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error403ResponseDto'
        "500":
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500ResponseDto'
      security:
        - bearer: []
      tags:
        - Invoices
  /v2/accounting/invoices/{id}:
    put:
      operationId: update-invoices
      summary: Update an Invoice
      description: |-
        **Supported for:**

        `quickbooks` `xero` `freshbooks` `oracleNetsuite`
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateInvoiceV2Dto'
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateInvoiceResponseV2Dto'
        "400":
          description: Bad Request Error - Thrown if fields sent via query does not follow specifications
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400ResponseDtoV2'
        "401":
          description: Unauthorized - Not logged in or log in expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401ResponseDto'
        "403":
          description: Forbidden - Not enough permission
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error403ResponseDto'
        "500":
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500ResponseDto'
      security:
        - bearer: []
      tags:
        - Invoices
    delete:
      operationId: delete-invoices
      summary: Delete an Invoice
      description: |-
        **Supported for:**

        `quickbooks` `xero` `freshbooks` `sageIntacct` `sageBusinessCloud` `dynamicsBusinessCentral` `wave`
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
        - name: connectionUuid
          required: true
          in: query
          description: Unique connection identifier.
          example: CON-396d5daa-26b2-4979-89b6-cafb2c298155
          schema:
            type: string
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SaveDeleteCommunicationResponseV2'
        "400":
          description: Bad Request Error - Thrown if fields sent via query does not follow specifications
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400ResponseDtoV2'
        "401":
          description: Unauthorized - Not logged in or log in expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401ResponseDto'
        "403":
          description: Forbidden - Not enough permission
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error403ResponseDto'
        "500":
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500ResponseDto'
      security:
        - bearer: []
      tags:
        - Invoices
  /v2/accounting/invoices/creditNotes:
    get:
      operationId: invoice-creditNotes
      summary: List Invoice Credit Notes
      description: |-
        **Supported for:**

        `quickbooks` `xero` `freshbooks` `quickbooksDesktop` `sageIntacct` `sageBusinessCloud` `oracleNetsuite` `dynamicsBusinessCentral` `zohoBooks`
      parameters:
        - name: connectionUuid
          required: true
          in: query
          description: Unique connection identifier.
          example: CON-396d5daa-26b2-4979-89b6-cafb2c298155
          schema:
            type: string
        - name: startDate
          required: false
          in: query
          description: 'Transaction date greater than or equal to parameter in the format: YYYY-MM-DD.'
          schema:
            type: string
        - name: endDate
          required: false
          in: query
          description: 'Transaction date less than or equal to parameter in the format: YYYY-MM-DD.'
          schema:
            type: string
        - name: offset
          required: false
          in: query
          description: The offset is the position in the dataset of a particular record.
          schema:
            format: integer
            type: number
        - name: limit
          required: false
          in: query
          description: 'This is the size of the results set you would like (default: 100).'
          example: 100
          schema:
            format: integer
            type: number
        - name: orderBy
          required: false
          in: query
          schema:
            type: string
        - name: totalAmount
          required: false
          in: query
          description: Total amount of a credit note.
          schema:
            format: float
            type: number
        - name: remainingCredit
          required: false
          in: query
          description: Remaining credit on a credit note.
          schema:
            format: float
            type: number
        - name: status
          required: false
          in: query
          schema:
            enum:
              - open
              - paid
              - partiallyPaid
              - void
              - unknown
              - draft
            type: string
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetInvoiceCreditNoteResponseV2Dto'
        "202":
          description: Data in pending state
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetInvoiceCreditNoteResponseV2Dto'
        "204":
          description: No data available
        "400":
          description: Bad Request Error - Thrown if fields sent via query does not follow specifications
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400ResponseDtoV2'
        "401":
          description: Unauthorized - Not logged in or log in expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401ResponseDto'
        "403":
          description: Forbidden - Not enough permission
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error403ResponseDto'
        "500":
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500ResponseDto'
      security:
        - bearer: []
      tags:
        - Invoice Credit Notes
    post:
      operationId: push-invoices-creditNotes
      summary: Create an Invoice Credit Note
      description: |-
        **Supported for:**

        `quickbooks` `xero` `freshbooks` `sageBusinessCloud` `oracleNetsuite` `dynamicsBusinessCentral` `zohoBooks`
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PushInvoiceCreditNoteV2Dto'
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PushInvoiceCreditNoteV2ResponseDto'
        "400":
          description: Bad Request Error - Thrown if fields sent via query does not follow specifications
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400ResponseDtoV2'
        "401":
          description: Unauthorized - Not logged in or log in expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401ResponseDto'
        "403":
          description: Forbidden - Not enough permission
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error403ResponseDto'
        "500":
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500ResponseDto'
      security:
        - bearer: []
      tags:
        - Invoice Credit Notes
  /v2/accounting/invoices/payments:
    get:
      operationId: invoicesPayments
      summary: List Invoice Payments
      description: |-
        **Supported for:**

        `quickbooks` `xero` `freshbooks` `quickbooksDesktop` `sageIntacct` `sageBusinessCloud` `oracleNetsuite` `dynamicsBusinessCentral` `zohoBooks`
      parameters:
        - name: connectionUuid
          required: true
          in: query
          description: Unique connection identifier.
          example: CON-396d5daa-26b2-4979-89b6-cafb2c298155
          schema:
            type: string
        - name: startDate
          required: false
          in: query
          description: 'Transaction date greater than or equal to parameter in the format: YYYY-MM-DD.'
          schema:
            type: string
        - name: endDate
          required: false
          in: query
          description: 'Transaction date less than or equal to parameter in the format: YYYY-MM-DD.'
          schema:
            type: string
        - name: offset
          required: false
          in: query
          description: The offset is the position in the dataset of a particular record.
          schema:
            format: integer
            type: number
        - name: limit
          required: false
          in: query
          description: 'This is the size of the results set you would like (default: 100).'
          example: 100
          schema:
            format: integer
            type: number
        - name: orderBy
          required: false
          in: query
          schema:
            type: string
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetInvoicePaymentResponseV2Dto'
        "202":
          description: Data in pending state
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetInvoicePaymentResponseV2Dto'
        "204":
          description: No data available
        "400":
          description: Bad Request Error - Thrown if fields sent via query does not follow specifications
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400ResponseDtoV2'
        "401":
          description: Unauthorized - Not logged in or log in expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401ResponseDto'
        "403":
          description: Forbidden - Not enough permission
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error403ResponseDto'
        "500":
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500ResponseDto'
      security:
        - bearer: []
      tags:
        - Invoice Payments
    post:
      operationId: push-invoices-payments
      summary: Create an Invoice Payment
      description: |-
        **Supported for:**

        `quickbooks` `xero` `freshbooks` `sageIntacct` `sageBusinessCloud` `oracleNetsuite` `dynamicsBusinessCentral` `zohoBooks`
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PushInvoicePaymentV2Dto'
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PushInvoicePaymentResponseV2Dto'
        "400":
          description: Bad Request Error - Thrown if fields sent via query does not follow specifications
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400ResponseDtoV2'
        "401":
          description: Unauthorized - Not logged in or log in expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401ResponseDto'
        "403":
          description: Forbidden - Not enough permission
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error403ResponseDto'
        "500":
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500ResponseDto'
      security:
        - bearer: []
      tags:
        - Invoice Payments
  /v2/accounting/invoices/payments/{id}:
    put:
      operationId: update-invoices-payments
      summary: Update an Invoice Payment
      description: |-
        **Supported for:**

        `quickbooks` `freshbooks` `oracleNetsuite`
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateInvoicePaymentDto'
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateInvoicePaymentResponseDto'
        "400":
          description: Bad Request Error - Thrown if fields sent via query does not follow specifications
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400ResponseDtoV2'
        "401":
          description: Unauthorized - Not logged in or log in expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401ResponseDto'
        "403":
          description: Forbidden - Not enough permission
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error403ResponseDto'
        "500":
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500ResponseDto'
      security:
        - bearer: []
      tags:
        - Invoice Payments
    delete:
      operationId: delete-invoices-payments
      summary: Delete an Invoice Payment
      description: |-
        **Supported for:**

        `quickbooks` `xero` `freshbooks` `sageIntacct` `dynamicsBusinessCentral`
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
        - name: connectionUuid
          required: true
          in: query
          description: Unique connection identifier.
          example: CON-396d5daa-26b2-4979-89b6-cafb2c298155
          schema:
            type: string
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SaveDeleteCommunicationResponseV2'
        "400":
          description: Bad Request Error - Thrown if fields sent via query does not follow specifications
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400ResponseDtoV2'
        "401":
          description: Unauthorized - Not logged in or log in expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401ResponseDto'
        "403":
          description: Forbidden - Not enough permission
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error403ResponseDto'
        "500":
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500ResponseDto'
      security:
        - bearer: []
      tags:
        - Invoice Payments
  /v2/accounting/journalEntries:
    get:
      operationId: journalEntries
      summary: List Journal Entries
      description: |-
        **Supported for:**

        `quickbooks` `xero` `freshbooks` `quickbooksDesktop` `sageIntacct` `sageBusinessCloud` `oracleNetsuite` `dynamicsBusinessCentral` `zohoBooks`
      parameters:
        - name: connectionUuid
          required: true
          in: query
          description: Unique connection identifier.
          example: CON-396d5daa-26b2-4979-89b6-cafb2c298155
          schema:
            type: string
        - name: startDate
          required: false
          in: query
          description: 'Transaction date greater than or equal to parameter in the format: YYYY-MM-DD.'
          schema:
            type: string
        - name: endDate
          required: false
          in: query
          description: 'Transaction date less than or equal to parameter in the format: YYYY-MM-DD.'
          schema:
            type: string
        - name: offset
          required: false
          in: query
          description: The offset is the position in the dataset of a particular record.
          schema:
            format: integer
            type: number
        - name: limit
          required: false
          in: query
          description: 'This is the size of the results set you would like (default: 100).'
          example: 100
          schema:
            format: integer
            type: number
        - name: orderBy
          required: false
          in: query
          schema:
            type: string
        - name: totalCredit
          required: false
          in: query
          description: Total amount of an journal entry credit line item.
          schema:
            format: float
            type: number
        - name: totalDebit
          required: false
          in: query
          description: Total amount of an journal entry debit line item.
          schema:
            format: float
            type: number
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetJournalEntryV2ResponseDto'
        "202":
          description: Data in pending state
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetJournalEntryV2ResponseDto'
        "204":
          description: No data available
        "400":
          description: Bad Request Error - Thrown if fields sent via query does not follow specifications
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400ResponseDtoV2'
        "401":
          description: Unauthorized - Not logged in or log in expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401ResponseDto'
        "403":
          description: Forbidden - Not enough permission
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error403ResponseDto'
        "500":
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500ResponseDto'
      security:
        - bearer: []
      tags:
        - Journal Entries
    post:
      operationId: push-journalEntries
      summary: Create a Journal Entry
      description: |-
        **Supported for:**

        `quickbooks` `xero` `freshbooks` `sageIntacct` `sageBusinessCloud` `oracleNetsuite` `dynamicsBusinessCentral` `zohoBooks`
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PushJournalEntriesV2Dto'
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PushJournalEntriesV2ResponseDto'
        "400":
          description: Bad Request Error - Thrown if fields sent via query does not follow specifications
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400ResponseDtoV2'
        "401":
          description: Unauthorized - Not logged in or log in expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401ResponseDto'
        "403":
          description: Forbidden - Not enough permission
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error403ResponseDto'
        "500":
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500ResponseDto'
      security:
        - bearer: []
      tags:
        - Journal Entries
  /v2/accounting/journalEntries/batch:
    post:
      operationId: push-batchJournalEntries
      summary: Batch Create Journal Entries
      description: |-
        **Supported for:**

        `quickbooks` `xero` `freshbooks` `sageIntacct` `sageBusinessCloud` `oracleNetsuite` `dynamicsBusinessCentral` `zohoBooks`
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchPushJournalEntriesV2Dto'
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchPushJournalEntriesV2ResponseDto'
        "400":
          description: Bad Request Error - Thrown if fields sent via query does not follow specifications
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400ResponseDtoV2'
        "401":
          description: Unauthorized - Not logged in or log in expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401ResponseDto'
        "403":
          description: Forbidden - Not enough permission
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error403ResponseDto'
        "500":
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500ResponseDto'
      security:
        - bearer: []
      tags:
        - Journal Entries
    put:
      operationId: update-batchJournalEntries
      summary: Batch Update Journal Entries
      description: |-
        **Supported for:**

        `quickbooks` `xero` `sageIntacct` `oracleNetsuite` `zohoBooks`
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchPushUpdateJournalEntriesV2Dto'
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchUpdateJournalEntriesV2ResponseDto'
        "400":
          description: Bad Request Error - Thrown if fields sent via query does not follow specifications
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400ResponseDtoV2'
        "401":
          description: Unauthorized - Not logged in or log in expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401ResponseDto'
        "403":
          description: Forbidden - Not enough permission
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error403ResponseDto'
        "500":
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500ResponseDto'
      security:
        - bearer: []
      tags:
        - Journal Entries
  /v2/accounting/journalEntries/{id}:
    put:
      operationId: put-journalEntries
      summary: Update a Journal Entry
      description: |-
        **Supported for:**

        `quickbooks` `xero` `sageIntacct` `oracleNetsuite` `zohoBooks`
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PushUpdateJournalEntriesV2Dto'
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PushUpdateJournalEntriesV2ResponseDto'
        "400":
          description: Bad Request Error - Thrown if fields sent via query does not follow specifications
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400ResponseDtoV2'
        "401":
          description: Unauthorized - Not logged in or log in expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401ResponseDto'
        "403":
          description: Forbidden - Not enough permission
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error403ResponseDto'
        "500":
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500ResponseDto'
      security:
        - bearer: []
      tags:
        - Journal Entries
  /v2/accounting/journals:
    get:
      operationId: journals
      summary: List Journals
      description: |-
        **Supported for:**

        `sageIntacct`
      parameters:
        - name: connectionUuid
          required: true
          in: query
          description: Unique connection identifier.
          example: CON-396d5daa-26b2-4979-89b6-cafb2c298155
          schema:
            type: string
        - name: offset
          required: false
          in: query
          description: The offset is the position in the dataset of a particular record.
          schema:
            format: integer
            type: number
        - name: limit
          required: false
          in: query
          description: 'This is the size of the results set you would like (default: 100).'
          example: 100
          schema:
            format: integer
            type: number
        - name: orderBy
          required: false
          in: query
          schema:
            type: string
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetJournalV2ResponseDto'
        "202":
          description: Data in pending state
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetJournalV2ResponseDto'
        "204":
          description: No data available
        "400":
          description: Bad Request Error - Thrown if fields sent via query does not follow specifications
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400ResponseDtoV2'
        "401":
          description: Unauthorized - Not logged in or log in expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401ResponseDto'
        "403":
          description: Forbidden - Not enough permission
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error403ResponseDto'
        "500":
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500ResponseDto'
      security:
        - bearer: []
      tags:
        - Journals
    post:
      operationId: push-journals
      summary: Create a Journal
      description: |-
        **Supported for:**

        `sageIntacct`
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PushJournalsDto'
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PushJournalsResponseDto'
        "400":
          description: Bad Request Error - Thrown if fields sent via query does not follow specifications
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400ResponseDtoV2'
        "401":
          description: Unauthorized - Not logged in or log in expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401ResponseDto'
        "403":
          description: Forbidden - Not enough permission
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error403ResponseDto'
        "500":
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500ResponseDto'
      security:
        - bearer: []
      tags:
        - Journals
  /v2/accounting/journals/{id}:
    put:
      operationId: update-journals
      summary: Update a Journal
      description: |-
        **Supported for:**

        `sageIntacct`
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PushUpdateJournalsDto'
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PushJournalsResponseDto'
        "400":
          description: Bad Request Error - Thrown if fields sent via query does not follow specifications
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400ResponseDtoV2'
        "401":
          description: Unauthorized - Not logged in or log in expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401ResponseDto'
        "403":
          description: Forbidden - Not enough permission
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error403ResponseDto'
        "500":
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500ResponseDto'
      security:
        - bearer: []
      tags:
        - Journals
  /v2/analytics/portfolioMetrics:
    get:
      operationId: getPortfolioMetrics
      summary: List of Portfolio Metrics
      parameters:
        - name: reportFrequency
          required: true
          in: query
          schema:
            enum:
              - month
              - quarter
              - year
            type: string
        - name: startDate
          required: false
          in: query
          example: "2020-11-01"
          schema:
            type: string
        - name: endDate
          required: false
          in: query
          example: "2020-11-30"
          schema:
            type: string
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PortfolioMetricsResponseDto'
        "202":
          description: Data in pending state
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PortfolioMetricsResponseDto'
        "204":
          description: No data available
        "400":
          description: Bad Request Error - Thrown if fields sent via query does not follow specifications
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400ResponseDtoV2'
        "401":
          description: Unauthorized - Not logged in or log in expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401ResponseDto'
        "403":
          description: Forbidden - Not enough permission
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error403ResponseDto'
        "500":
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500ResponseDto'
      security:
        - bearer: []
        - bearer: []
      tags:
        - Portfolio Metrics
  /v2/analytics/probabilityOfDefault:
    get:
      operationId: probabilityOfDefaults
      summary: List Probability Of Default
      description: |-
        **Supported for:**

        `quickbooks` `xero` `freshbooks` `quickbooksDesktop` `dynamicsBusinessCentral` `zohoBooks`
      parameters:
        - name: connectionUuid
          required: true
          in: query
          description: Unique connection identifier.
          example: CON-396d5daa-26b2-4979-89b6-cafb2c298155
          schema:
            type: string
        - name: startDate
          required: false
          in: query
          description: 'The start date of the Transaction report frequency in the format: YYYY-MM-DD.'
          schema:
            type: string
        - name: endDate
          required: false
          in: query
          description: 'The end date of the Transaction report frequency in the format: YYYY-MM-DD.'
          schema:
            type: string
        - name: offset
          required: false
          in: query
          description: The offset is the position in the dataset of a particular record.
          schema:
            format: integer
            type: number
        - name: limit
          required: false
          in: query
          description: 'This is the size of the results set you would like (default: 100).'
          example: 100
          schema:
            format: integer
            type: number
        - name: orderBy
          required: false
          in: query
          schema:
            type: string
        - name: reconstruct
          required: false
          in: query
          description: Railz reconstructed Probability Of Default
          schema:
            default: "false"
            enum:
              - "true"
              - "false"
            type: string
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProbabilityOfDefaultResponseV2Dto'
        "202":
          description: Data in pending state
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProbabilityOfDefaultResponseV2Dto'
        "204":
          description: No data available
        "400":
          description: Bad Request Error - Thrown if fields sent via query does not follow specifications
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400ResponseDtoV2'
        "401":
          description: Unauthorized - Not logged in or log in expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401ResponseDto'
        "403":
          description: Forbidden - Not enough permission
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error403ResponseDto'
        "500":
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500ResponseDto'
      security:
        - bearer: []
      tags:
        - Probability of Default
  /v2/accounting/purchaseOrders:
    get:
      operationId: purchaseOrder
      summary: List Purchase Orders
      description: |-
        **Supported for:**

        `quickbooks` `xero` `quickbooksDesktop` `sageIntacct` `oracleNetsuite` `dynamicsBusinessCentral` `zohoBooks`
      parameters:
        - name: connectionUuid
          required: true
          in: query
          description: Unique connection identifier.
          example: CON-396d5daa-26b2-4979-89b6-cafb2c298155
          schema:
            type: string
        - name: startDate
          required: false
          in: query
          description: 'Transaction date greater than or equal to parameter in the format: YYYY-MM-DD.'
          schema:
            type: string
        - name: endDate
          required: false
          in: query
          description: 'Transaction date less than or equal to parameter in the format: YYYY-MM-DD.'
          schema:
            type: string
        - name: offset
          required: false
          in: query
          description: The offset is the position in the dataset of a particular record.
          schema:
            format: integer
            type: number
        - name: limit
          required: false
          in: query
          description: 'This is the size of the results set you would like (default: 100).'
          example: 100
          schema:
            format: integer
            type: number
        - name: orderBy
          required: false
          in: query
          schema:
            type: string
        - name: totalAmount
          required: false
          in: query
          schema:
            format: float
            type: number
        - name: status
          required: false
          in: query
          schema:
            enum:
              - open
              - closed
              - void
              - unknown
              - draft
            type: string
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetPurchaseOrderResponseV2Dto'
        "202":
          description: Data in pending state
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetPurchaseOrderResponseV2Dto'
        "204":
          description: No data available
        "400":
          description: Bad Request Error - Thrown if fields sent via query does not follow specifications
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400ResponseDtoV2'
        "401":
          description: Unauthorized - Not logged in or log in expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401ResponseDto'
        "403":
          description: Forbidden - Not enough permission
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error403ResponseDto'
        "500":
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500ResponseDto'
      security:
        - bearer: []
      tags:
        - Purchase Orders
    post:
      operationId: push-purchaseOrders
      summary: Create a Purchase Order
      description: |-
        **Supported for:**

        `quickbooks` `xero` `oracleNetsuite` `dynamicsBusinessCentral` `zohoBooks`
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PushPurchaseOrderV2Dto'
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PushPurchaseOrderV2ResponseDto'
        "400":
          description: Bad Request Error - Thrown if fields sent via query does not follow specifications
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400ResponseDtoV2'
        "401":
          description: Unauthorized - Not logged in or log in expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401ResponseDto'
        "403":
          description: Forbidden - Not enough permission
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error403ResponseDto'
        "500":
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500ResponseDto'
      security:
        - bearer: []
      tags:
        - Purchase Orders
  /v2/accounting/refunds:
    get:
      operationId: refund
      summary: List Refunds
      description: |-
        **Supported for:**

        `quickbooks` `xero` `oracleNetsuite`
      parameters:
        - name: connectionUuid
          required: true
          in: query
          description: Unique connection identifier.
          example: CON-396d5daa-26b2-4979-89b6-cafb2c298155
          schema:
            type: string
        - name: startDate
          required: false
          in: query
          description: 'Transaction date greater than or equal to parameter in the format: YYYY-MM-DD.'
          schema:
            type: string
        - name: endDate
          required: false
          in: query
          description: 'Transaction date less than or equal to parameter in the format: YYYY-MM-DD.'
          schema:
            type: string
        - name: offset
          required: false
          in: query
          description: The offset is the position in the dataset of a particular record.
          schema:
            format: integer
            type: number
        - name: limit
          required: false
          in: query
          description: 'This is the size of the results set you would like (default: 100).'
          example: 100
          schema:
            format: integer
            type: number
        - name: orderBy
          required: false
          in: query
          schema:
            type: string
        - name: totalAmount
          required: false
          in: query
          schema:
            format: float
            type: number
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetRefundResponseV2Dto'
        "202":
          description: Data in pending state
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetRefundResponseV2Dto'
        "204":
          description: No data available
        "400":
          description: Bad Request Error - Thrown if fields sent via query does not follow specifications
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400ResponseDtoV2'
        "401":
          description: Unauthorized - Not logged in or log in expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401ResponseDto'
        "403":
          description: Forbidden - Not enough permission
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error403ResponseDto'
        "500":
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500ResponseDto'
      tags:
        - Refunds
      security:
        - bearer: []
    post:
      operationId: push-refund
      summary: Create a Refund
      description: |-
        **Supported for:**

        `quickbooks` `xero` `oracleNetsuite`
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PushRefundV2Dto'
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PushRefundResponseV2Dto'
        "400":
          description: Bad Request Error - Thrown if fields sent via query does not follow specifications
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400ResponseDtoV2'
        "401":
          description: Unauthorized - Not logged in or log in expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401ResponseDto'
        "403":
          description: Forbidden - Not enough permission
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error403ResponseDto'
        "500":
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500ResponseDto'
      tags:
        - Refunds
      security:
        - bearer: []
  /v2/analytics/taxBenchmarking:
    get:
      operationId: taxbenchmarking
      summary: List of Tax Benchmarks
      parameters:
        - name: industryCode
          required: true
          in: query
          example: "44"
          schema:
            type: string
        - name: region
          required: false
          in: query
          example: CA
          schema:
            type: string
        - name: offset
          required: false
          in: query
          schema:
            format: integer
            type: number
        - name: limit
          required: false
          in: query
          example: 100
          schema:
            format: integer
            type: number
        - name: orderBy
          required: false
          in: query
          schema:
            type: string
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaxBenchmarkingsResponseDto'
        "202":
          description: Data in pending state
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaxBenchmarkingsResponseDto'
        "204":
          description: No data available
        "400":
          description: Bad Request Error - Thrown if fields sent via query does not follow specifications
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400ResponseDtoV2'
        "401":
          description: Unauthorized - Not logged in or log in expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401ResponseDto'
        "403":
          description: Forbidden - Not enough permission
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error403ResponseDto'
        "500":
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500ResponseDto'
      security:
        - bearer: []
        - bearer: []
      tags:
        - Tax Benchmarking
  /v2/accounting/taxRates:
    get:
      operationId: taxRates
      summary: List Tax Rates
      description: |-
        **Supported for:**

        `quickbooks` `xero` `freshbooks` `quickbooksDesktop` `sageIntacct` `sageBusinessCloud` `oracleNetsuite` `dynamicsBusinessCentral` `wave` `zohoBooks`
      parameters:
        - name: connectionUuid
          required: true
          in: query
          description: Unique connection identifier.
          example: CON-396d5daa-26b2-4979-89b6-cafb2c298155
          schema:
            type: string
        - name: offset
          required: false
          in: query
          description: The offset is the position in the dataset of a particular record.
          schema:
            format: integer
            type: number
        - name: limit
          required: false
          in: query
          description: 'This is the size of the results set you would like (default: 100).'
          example: 100
          schema:
            format: integer
            type: number
        - name: orderBy
          required: false
          in: query
          schema:
            type: string
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetTaxRatesResponseV2Dto'
        "202":
          description: Data in pending state
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetTaxRatesResponseV2Dto'
        "204":
          description: No data available
        "400":
          description: Bad Request Error - Thrown if fields sent via query does not follow specifications
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400ResponseDtoV2'
        "401":
          description: Unauthorized - Not logged in or log in expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401ResponseDto'
        "403":
          description: Forbidden - Not enough permission
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error403ResponseDto'
        "500":
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500ResponseDto'
      security:
        - bearer: []
      tags:
        - Tax Rates
    post:
      operationId: push-taxRates
      summary: Create a Tax Rate
      description: |-
        **Supported for:**

        `xero` `freshbooks` `sageBusinessCloud` `dynamicsBusinessCentral`
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PushTaxRateDto'
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PushTaxRateResponseDto'
        "400":
          description: Bad Request Error - Thrown if fields sent via query does not follow specifications
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400ResponseDtoV2'
        "401":
          description: Unauthorized - Not logged in or log in expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401ResponseDto'
        "403":
          description: Forbidden - Not enough permission
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error403ResponseDto'
        "500":
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500ResponseDto'
      security:
        - bearer: []
      tags:
        - Tax Rates
  /v2/accounting/taxAuthority:
    get:
      operationId: taxAuthority
      summary: List Tax Authorities
      description: |-
        **Supported for:**

        `quickbooks` `zohoBooks`
      parameters:
        - name: connectionUuid
          required: true
          in: query
          description: Unique connection identifier.
          example: CON-396d5daa-26b2-4979-89b6-cafb2c298155
          schema:
            type: string
        - name: offset
          required: false
          in: query
          description: The offset is the position in the dataset of a particular record.
          schema:
            format: integer
            type: number
        - name: limit
          required: false
          in: query
          description: 'This is the size of the results set you would like (default: 100).'
          example: 100
          schema:
            format: integer
            type: number
        - name: orderBy
          required: false
          in: query
          schema:
            type: string
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetTaxAuthorityResponseDto'
        "202":
          description: Data in pending state
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetTaxAuthorityResponseDto'
        "204":
          description: No data available
        "400":
          description: Bad Request Error - Thrown if fields sent via query does not follow specifications
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400ResponseDtoV2'
        "401":
          description: Unauthorized - Not logged in or log in expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401ResponseDto'
        "403":
          description: Forbidden - Not enough permission
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error403ResponseDto'
        "500":
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500ResponseDto'
      security:
        - bearer: []
      tags:
        - Tax Authority
  /v2/accounting/trackingCategories:
    get:
      operationId: trackingCategories
      summary: List Tracking Categories
      description: |-
        **Supported for:**

        `quickbooks` `xero` `freshbooks` `quickbooksDesktop` `sageIntacct` `oracleNetsuite` `dynamicsBusinessCentral`
      parameters:
        - name: connectionUuid
          required: true
          in: query
          description: Unique connection identifier.
          example: CON-396d5daa-26b2-4979-89b6-cafb2c298155
          schema:
            type: string
        - name: offset
          required: false
          in: query
          description: The offset is the position in the dataset of a particular record.
          schema:
            format: integer
            type: number
        - name: limit
          required: false
          in: query
          description: 'This is the size of the results set you would like (default: 100).'
          example: 100
          schema:
            format: integer
            type: number
        - name: orderBy
          required: false
          in: query
          schema:
            type: string
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetTrackingCategoryResponseV2Dto'
        "202":
          description: Data in pending state
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetTrackingCategoryResponseV2Dto'
        "204":
          description: No data available
        "400":
          description: Bad Request Error - Thrown if fields sent via query does not follow specifications
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400ResponseDtoV2'
        "401":
          description: Unauthorized - Not logged in or log in expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401ResponseDto'
        "403":
          description: Forbidden - Not enough permission
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error403ResponseDto'
        "500":
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500ResponseDto'
      security:
        - bearer: []
      tags:
        - Tracking Categories
    post:
      operationId: push-trackingCategories
      summary: Create a Tracking Category
      description: |-
        **Supported for:**

        `quickbooks` `xero` `sageIntacct` `oracleNetsuite`
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PushTrackingCategoriesV2Dto'
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PushTrackingCategoriesResponseV2Dto'
        "400":
          description: Bad Request Error - Thrown if fields sent via query does not follow specifications
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400ResponseDtoV2'
        "401":
          description: Unauthorized - Not logged in or log in expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401ResponseDto'
        "403":
          description: Forbidden - Not enough permission
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error403ResponseDto'
        "500":
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500ResponseDto'
      security:
        - bearer: []
      tags:
        - Tracking Categories
  /v2/accounting/trialBalances:
    get:
      operationId: trialBalance
      summary: List Trial Balances
      description: |-
        **Supported for:**

        `quickbooks` `xero` `freshbooks` `quickbooksDesktop` `sageIntacct` `sageBusinessCloud` `oracleNetsuite` `dynamicsBusinessCentral` `zohoBooks`
      parameters:
        - name: connectionUuid
          required: true
          in: query
          description: Unique connection identifier.
          example: CON-396d5daa-26b2-4979-89b6-cafb2c298155
          schema:
            type: string
        - name: reportFrequency
          required: true
          in: query
          schema:
            enum:
              - month
              - quarter
              - year
            type: string
        - name: accountingMethod
          required: false
          in: query
          schema:
            default: accrual
            enum:
              - cash
              - accrual
            type: string
        - name: startDate
          required: false
          in: query
          schema:
            type: string
        - name: endDate
          required: false
          in: query
          schema:
            type: string
        - name: section
          required: false
          in: query
          schema:
            enum:
              - Income
              - Expenses
              - Assets
              - Liabilities
              - Equity
            type: string
        - name: subSection
          required: false
          in: query
          schema:
            enum:
              - Income
              - Cost of Goods Sold
              - Operating Expenses
              - Other Income
              - Other Expenses
              - Uncategorized Expenses
              - Uncategorized Income
              - Expenses
              - Current Assets
              - Non-Current Assets
              - Current Liabilities
              - Non-Current Liabilities
              - Equity
              - Other Assets
              - Other Liabilities
            type: string
        - name: group
          required: false
          in: query
          schema:
            type: string
        - name: subGroup
          required: false
          in: query
          schema:
            type: string
        - name: accountId
          required: false
          in: query
          schema:
            type: string
        - name: subAccountId
          required: false
          in: query
          schema:
            type: string
        - name: account
          required: false
          in: query
          schema:
            type: string
        - name: debit
          required: false
          in: query
          schema:
            format: float
            type: number
        - name: credit
          required: false
          in: query
          schema:
            format: float
            type: number
        - name: ytdDebit
          required: false
          in: query
          schema:
            format: float
            type: number
        - name: ytdCredit
          required: false
          in: query
          schema:
            format: float
            type: number
        - name: offset
          required: false
          in: query
          schema:
            format: integer
            type: number
        - name: limit
          required: false
          in: query
          example: 100
          schema:
            format: integer
            type: number
        - name: orderBy
          required: false
          in: query
          schema:
            type: string
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TrialBalancesResponseV2Dto'
        "202":
          description: Data in pending state
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TrialBalancesResponseV2Dto'
        "204":
          description: No data available
        "400":
          description: Bad Request Error - Thrown if fields sent via query does not follow specifications
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400ResponseDtoV2'
        "401":
          description: Unauthorized - Not logged in or log in expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401ResponseDto'
        "403":
          description: Forbidden - Not enough permission
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error403ResponseDto'
        "500":
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500ResponseDto'
      security:
        - bearer: []
      tags:
        - Trial Balances
  /v2/accounting/vendors:
    get:
      operationId: vendors
      summary: List Vendors
      description: |-
        **Supported for:**

        `quickbooks` `xero` `freshbooks` `quickbooksDesktop` `sageIntacct` `sageBusinessCloud` `oracleNetsuite` `dynamicsBusinessCentral` `wave` `zohoBooks`
      parameters:
        - name: connectionUuid
          required: true
          in: query
          description: Unique connection identifier.
          example: CON-396d5daa-26b2-4979-89b6-cafb2c298155
          schema:
            type: string
        - name: offset
          required: false
          in: query
          description: The offset is the position in the dataset of a particular record.
          schema:
            format: integer
            type: number
        - name: limit
          required: false
          in: query
          description: 'This is the size of the results set you would like (default: 100).'
          example: 100
          schema:
            format: integer
            type: number
        - name: orderBy
          required: false
          in: query
          schema:
            type: string
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetVendorResponseV2Dto'
        "202":
          description: Data in pending state
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetVendorResponseV2Dto'
        "204":
          description: No data available
        "400":
          description: Bad Request Error - Thrown if fields sent via query does not follow specifications
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400ResponseDtoV2'
        "401":
          description: Unauthorized - Not logged in or log in expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401ResponseDto'
        "403":
          description: Forbidden - Not enough permission
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error403ResponseDto'
        "500":
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500ResponseDto'
      security:
        - bearer: []
      tags:
        - Vendors
    post:
      operationId: push-vendors
      summary: Create a Vendor
      description: |-
        **Supported for:**

        `quickbooks` `xero` `freshbooks` `sageIntacct` `sageBusinessCloud` `oracleNetsuite` `dynamicsBusinessCentral` `zohoBooks`
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PushVendorV2Dto'
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PushVendorV2ResponseDto'
        "400":
          description: Bad Request Error - Thrown if fields sent via query does not follow specifications
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400ResponseDtoV2'
        "401":
          description: Unauthorized - Not logged in or log in expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401ResponseDto'
        "403":
          description: Forbidden - Not enough permission
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error403ResponseDto'
        "500":
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500ResponseDto'
      security:
        - bearer: []
      tags:
        - Vendors
  /v2/accounting/vendors/batch:
    post:
      operationId: push-batchVendors
      summary: Batch Create Vendors
      description: |-
        **Supported for:**

        `quickbooks` `xero` `freshbooks` `sageIntacct` `sageBusinessCloud` `oracleNetsuite` `dynamicsBusinessCentral`
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchPushVendorV2Dto'
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchPushVendorResponseV2Dto'
        "400":
          description: Bad Request Error - Thrown if fields sent via query does not follow specifications
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400ResponseDtoV2'
        "401":
          description: Unauthorized - Not logged in or log in expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401ResponseDto'
        "403":
          description: Forbidden - Not enough permission
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error403ResponseDto'
        "500":
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500ResponseDto'
      security:
        - bearer: []
      tags:
        - Vendors
    put:
      operationId: update-batchVendors
      summary: Batch Update Vendors
      description: |-
        **Supported for:**

        `quickbooks` `xero` `freshbooks` `sageIntacct` `sageBusinessCloud` `oracleNetsuite` `dynamicsBusinessCentral`
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchUpdateVendorV2Dto'
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchUpdateVendorResponseV2Dto'
        "400":
          description: Bad Request Error - Thrown if fields sent via query does not follow specifications
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400ResponseDtoV2'
        "401":
          description: Unauthorized - Not logged in or log in expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401ResponseDto'
        "403":
          description: Forbidden - Not enough permission
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error403ResponseDto'
        "500":
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500ResponseDto'
      security:
        - bearer: []
      tags:
        - Vendors
  /v2/accounting/vendors/{id}:
    put:
      operationId: put-vendor
      summary: Update a Vendor
      description: |-
        **Supported for:**

        `quickbooks` `xero` `freshbooks` `sageIntacct` `sageBusinessCloud` `oracleNetsuite` `dynamicsBusinessCentral` `zohoBooks`
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PushUpdateVendorV2Dto'
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PutVendorV2ResponseDto'
        "400":
          description: Bad Request Error - Thrown if fields sent via query does not follow specifications
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400ResponseDtoV2'
        "401":
          description: Unauthorized - Not logged in or log in expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401ResponseDto'
        "403":
          description: Forbidden - Not enough permission
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error403ResponseDto'
        "500":
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500ResponseDto'
      security:
        - bearer: []
      tags:
        - Vendors
  /v2/accounting/vendors/bankAccounts:
    get:
      operationId: vendors-bankAccounts
      summary: List Vendor Bank Accounts
      description: |-
        **Supported for:**

        `quickbooks` `xero` `sageIntacct` `sageBusinessCloud` `dynamicsBusinessCentral`
      parameters:
        - name: connectionUuid
          required: true
          in: query
          description: Unique connection identifier.
          example: CON-396d5daa-26b2-4979-89b6-cafb2c298155
          schema:
            type: string
        - name: offset
          required: false
          in: query
          description: The offset is the position in the dataset of a particular record.
          schema:
            format: integer
            type: number
        - name: limit
          required: false
          in: query
          description: 'This is the size of the results set you would like (default: 100).'
          example: 100
          schema:
            format: integer
            type: number
        - name: orderBy
          required: false
          in: query
          schema:
            type: string
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetVendorBankAccountResponseV2Dto'
        "202":
          description: Data in pending state
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetVendorBankAccountResponseV2Dto'
        "204":
          description: No data available
        "400":
          description: Bad Request Error - Thrown if fields sent via query does not follow specifications
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400ResponseDtoV2'
        "401":
          description: Unauthorized - Not logged in or log in expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401ResponseDto'
        "403":
          description: Forbidden - Not enough permission
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error403ResponseDto'
        "500":
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500ResponseDto'
      security:
        - bearer: []
      tags:
        - Vendors
    post:
      operationId: push-vendors-bankAccounts
      summary: Create a Vendor Bank Account
      description: |-
        **Supported for:**

        `quickbooks` `xero` `sageIntacct` `sageBusinessCloud`
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PushVendorBankAccountDto'
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PushVendorBankAccountResponseDto'
        "400":
          description: Bad Request Error - Thrown if fields sent via query does not follow specifications
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400ResponseDtoV2'
        "401":
          description: Unauthorized - Not logged in or log in expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401ResponseDto'
        "403":
          description: Forbidden - Not enough permission
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error403ResponseDto'
        "500":
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500ResponseDto'
      security:
        - bearer: []
      tags:
        - Vendors
  /v2/accounting/vendors/bankAccounts/{id}:
    put:
      operationId: put-vendors-bankAccounts
      summary: Update a Vendor Bank Account
      description: |-
        **Supported for:**

        `xero` `sageIntacct`
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutVendorBankAccountDto'
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PutVendorBankAccountResponseDto'
        "400":
          description: Bad Request Error - Thrown if fields sent via query does not follow specifications
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400ResponseDtoV2'
        "401":
          description: Unauthorized - Not logged in or log in expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401ResponseDto'
        "403":
          description: Forbidden - Not enough permission
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error403ResponseDto'
        "500":
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500ResponseDto'
      security:
        - bearer: []
      tags:
        - Vendors
  /v2/accounting/paymentMethods:
    get:
      operationId: paymentMethod
      summary: List Payment Methods
      description: |-
        **Supported for:**

        `quickbooks` `sageBusinessCloud` `oracleNetsuite` `dynamicsBusinessCentral`
      parameters:
        - name: connectionUuid
          required: true
          in: query
          description: Unique connection identifier.
          example: CON-396d5daa-26b2-4979-89b6-cafb2c298155
          schema:
            type: string
        - name: offset
          required: false
          in: query
          description: The offset is the position in the dataset of a particular record.
          schema:
            format: integer
            type: number
        - name: limit
          required: false
          in: query
          description: 'This is the size of the results set you would like (default: 100).'
          example: 100
          schema:
            format: integer
            type: number
        - name: orderBy
          required: false
          in: query
          schema:
            type: string
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetPaymentMethodResponseV2Dto'
        "202":
          description: Data in pending state
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetPaymentMethodResponseV2Dto'
        "204":
          description: No data available
        "400":
          description: Bad Request Error - Thrown if fields sent via query does not follow specifications
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400ResponseDtoV2'
        "401":
          description: Unauthorized - Not logged in or log in expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401ResponseDto'
        "403":
          description: Forbidden - Not enough permission
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error403ResponseDto'
        "500":
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500ResponseDto'
      security:
        - bearer: []
      tags:
        - Payment Methods
  /v2/accounting/expenses:
    get:
      operationId: Expense
      summary: List Expenses
      description: |-
        **Supported for:**

        `quickbooks` `freshbooks` `zohoBooks`
      parameters:
        - name: connectionUuid
          required: true
          in: query
          description: Unique connection identifier.
          example: CON-396d5daa-26b2-4979-89b6-cafb2c298155
          schema:
            type: string
        - name: startDate
          required: false
          in: query
          description: 'Transaction date greater than or equal to parameter in the format: YYYY-MM-DD.'
          schema:
            type: string
        - name: endDate
          required: false
          in: query
          description: 'Transaction date less than or equal to parameter in the format: YYYY-MM-DD.'
          schema:
            type: string
        - name: offset
          required: false
          in: query
          description: The offset is the position in the dataset of a particular record.
          schema:
            format: integer
            type: number
        - name: limit
          required: false
          in: query
          description: 'This is the size of the results set you would like (default: 100).'
          example: 100
          schema:
            format: integer
            type: number
        - name: orderBy
          required: false
          in: query
          schema:
            type: string
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetExpenseResponseV2Dto'
        "202":
          description: Data in pending state
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetExpenseResponseV2Dto'
        "204":
          description: No data available
        "400":
          description: Bad Request Error - Thrown if fields sent via query does not follow specifications
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400ResponseDtoV2'
        "401":
          description: Unauthorized - Not logged in or log in expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401ResponseDto'
        "403":
          description: Forbidden - Not enough permission
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error403ResponseDto'
        "500":
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500ResponseDto'
      security:
        - bearer: []
      tags:
        - Expenses
    post:
      operationId: push-expense
      summary: Create an Expense
      description: |-
        **Supported for:**

        `quickbooks` `freshbooks` `zohoBooks`
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PushExpenseDto'
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PushExpenseeResponseDto'
        "400":
          description: Bad Request Error - Thrown if fields sent via query does not follow specifications
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400ResponseDtoV2'
        "401":
          description: Unauthorized - Not logged in or log in expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401ResponseDto'
        "403":
          description: Forbidden - Not enough permission
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error403ResponseDto'
        "500":
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500ResponseDto'
      security:
        - bearer: []
      tags:
        - Expenses
  /v2/accounting/contacts:
    get:
      operationId: contacts
      summary: List Contacts
      description: |-
        **Supported for:**

        `xero`
      parameters:
        - name: connectionUuid
          required: true
          in: query
          description: Unique connection identifier.
          example: CON-396d5daa-26b2-4979-89b6-cafb2c298155
          schema:
            type: string
        - name: offset
          required: false
          in: query
          description: The offset is the position in the dataset of a particular record.
          schema:
            format: integer
            type: number
        - name: limit
          required: false
          in: query
          description: 'This is the size of the results set you would like (default: 100).'
          example: 100
          schema:
            format: integer
            type: number
        - name: orderBy
          required: false
          in: query
          schema:
            type: string
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetContactResponseDto'
        "202":
          description: Data in pending state
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetContactResponseDto'
        "204":
          description: No data available
        "400":
          description: Bad Request Error - Thrown if fields sent via query does not follow specifications
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400ResponseDtoV2'
        "401":
          description: Unauthorized - Not logged in or log in expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401ResponseDto'
        "403":
          description: Forbidden - Not enough permission
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error403ResponseDto'
        "500":
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500ResponseDto'
      security:
        - bearer: []
      tags:
        - Contacts
  /v2/commerce/products:
    get:
      operationId: product
      summary: List Products
      description: |-
        **Supported for:**

        `shopify` `square`
      parameters:
        - name: connectionUuid
          required: true
          in: query
          description: Unique connection identifier.
          example: CON-396d5daa-26b2-4979-89b6-cafb2c298155
          schema:
            type: string
        - name: offset
          required: false
          in: query
          description: The offset is the position in the dataset of a particular record.
          schema:
            format: integer
            type: number
        - name: limit
          required: false
          in: query
          description: 'This is the size of the results set you would like (default: 100).'
          example: 100
          schema:
            format: integer
            type: number
        - name: orderBy
          required: false
          in: query
          schema:
            type: string
        - name: id
          required: false
          in: query
          example: "12345"
          schema:
            type: string
        - name: name
          required: false
          in: query
          example: Ipod
          schema:
            type: string
        - name: status
          required: false
          in: query
          example: active
          schema:
            enum:
              - active
              - archived
              - draft
            type: string
        - name: startDate
          required: false
          in: query
          example: "2014-04-25"
          schema:
            type: string
        - name: endDate
          required: false
          in: query
          example: "2014-04-25"
          schema:
            type: string
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetProductResponseV2Dto'
        "202":
          description: Data in pending state
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetProductResponseV2Dto'
        "204":
          description: No data available
        "400":
          description: Bad Request Error - Thrown if fields sent via query does not follow specifications
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400ResponseDtoV2'
        "401":
          description: Unauthorized - Not logged in or log in expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401ResponseDto'
        "403":
          description: Forbidden - Not enough permission
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error403ResponseDto'
        "500":
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500ResponseDto'
      security:
        - bearer: []
      tags:
        - Commerce Products
  /v2/commerce/disputes:
    get:
      operationId: dispute
      summary: List Disputes
      description: |-
        **Supported for:**

        `shopify` `square`
      parameters:
        - name: connectionUuid
          required: true
          in: query
          description: Unique connection identifier.
          example: CON-396d5daa-26b2-4979-89b6-cafb2c298155
          schema:
            type: string
        - name: offset
          required: false
          in: query
          description: The offset is the position in the dataset of a particular record.
          schema:
            format: integer
            type: number
        - name: limit
          required: false
          in: query
          description: 'This is the size of the results set you would like (default: 100).'
          example: 100
          schema:
            format: integer
            type: number
        - name: orderBy
          required: false
          in: query
          schema:
            type: string
        - name: id
          required: false
          in: query
          example: "12345"
          schema:
            type: string
        - name: status
          required: false
          in: query
          example: processing
          schema:
            enum:
              - evidenceRequired
              - inquiryProcessing
              - processing
              - inquiryClosed
              - chargeRefunded
              - inquiryAccepted
              - inquiryWon
              - inquiryLost
              - unknown
              - other
            type: string
        - name: startDate
          required: false
          in: query
          example: "2014-04-25"
          schema:
            type: string
        - name: endDate
          required: false
          in: query
          example: "2014-04-25"
          schema:
            type: string
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetDisputeResponseV2Dto'
        "202":
          description: Data in pending state
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetDisputeResponseV2Dto'
        "204":
          description: No data available
        "400":
          description: Bad Request Error - Thrown if fields sent via query does not follow specifications
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400ResponseDtoV2'
        "401":
          description: Unauthorized - Not logged in or log in expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401ResponseDto'
        "403":
          description: Forbidden - Not enough permission
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error403ResponseDto'
        "500":
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500ResponseDto'
      security:
        - bearer: []
      tags:
        - Commerce Disputes
  /v2/commerce/orders:
    get:
      operationId: order
      summary: List Orders
      description: |-
        **Supported for:**

        `shopify` `square`
      parameters:
        - name: connectionUuid
          required: true
          in: query
          description: Unique connection identifier.
          example: CON-396d5daa-26b2-4979-89b6-cafb2c298155
          schema:
            type: string
        - name: offset
          required: false
          in: query
          description: The offset is the position in the dataset of a particular record.
          schema:
            format: integer
            type: number
        - name: limit
          required: false
          in: query
          description: 'This is the size of the results set you would like (default: 100).'
          example: 100
          schema:
            format: integer
            type: number
        - name: orderBy
          required: false
          in: query
          schema:
            type: string
        - name: id
          required: false
          in: query
          example: "12345"
          schema:
            type: string
        - name: fulfillmentStatus
          required: false
          in: query
          example: fulfilled
          schema:
            enum:
              - fulfilled
              - partial
              - unfulfilled
              - cancelled
              - unknown
            type: string
        - name: paymentStatus
          required: false
          in: query
          example: approved
          schema:
            enum:
              - pending
              - approved
              - paid
              - failed
              - cancelled
              - refunded
              - unknown
            type: string
        - name: status
          required: false
          in: query
          example: cancelled
          schema:
            enum:
              - open
              - closed
              - cancelled
              - unknown
              - draft
            type: string
        - name: startDate
          required: false
          in: query
          example: "2014-04-25"
          schema:
            type: string
        - name: endDate
          required: false
          in: query
          example: "2014-04-25"
          schema:
            type: string
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetOrderResponseV2Dto'
        "202":
          description: Data in pending state
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetOrderResponseV2Dto'
        "204":
          description: No data available
        "400":
          description: Bad Request Error - Thrown if fields sent via query does not follow specifications
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400ResponseDtoV2'
        "401":
          description: Unauthorized - Not logged in or log in expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401ResponseDto'
        "403":
          description: Forbidden - Not enough permission
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error403ResponseDto'
        "500":
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500ResponseDto'
      security:
        - bearer: []
      tags:
        - Commerce Orders
  /v2/commerce/transactions:
    get:
      operationId: transactions
      summary: List Transactions
      description: |-
        **Supported for:**

        `shopify` `square`
      parameters:
        - name: connectionUuid
          required: true
          in: query
          description: Unique connection identifier.
          example: CON-396d5daa-26b2-4979-89b6-cafb2c298155
          schema:
            type: string
        - name: offset
          required: false
          in: query
          description: The offset is the position in the dataset of a particular record.
          schema:
            format: integer
            type: number
        - name: limit
          required: false
          in: query
          description: 'This is the size of the results set you would like (default: 100).'
          example: 100
          schema:
            format: integer
            type: number
        - name: orderBy
          required: false
          in: query
          schema:
            type: string
        - name: id
          required: false
          in: query
          example: "12345"
          schema:
            type: string
        - name: status
          required: false
          in: query
          example: cancelled
          schema:
            enum:
              - success
              - failed
              - pending
              - cancelled
              - approved
              - scheduled
              - other
              - unknown
            type: string
        - name: startDate
          required: false
          in: query
          example: "2022-04-25"
          schema:
            type: string
        - name: endDate
          required: false
          in: query
          example: "2022-04-25"
          schema:
            type: string
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetTransactionResponseV2Dto'
        "202":
          description: Data in pending state
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetTransactionResponseV2Dto'
        "204":
          description: No data available
        "400":
          description: Bad Request Error - Thrown if fields sent via query does not follow specifications
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400ResponseDtoV2'
        "401":
          description: Unauthorized - Not logged in or log in expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401ResponseDto'
        "403":
          description: Forbidden - Not enough permission
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error403ResponseDto'
        "500":
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500ResponseDto'
      security:
        - bearer: []
      tags:
        - Commerce Transactions
  /v2/sandbox/fireWebhooks:
    post:
      operationId: FeederSandboxControllerV2_fireWebhook
      summary: Trigger Sandbox Webhook Events
      description: |-
        **Supported for:**

        `freshbooks` `quickbooks` `quickbooksDesktop` `xero` `oracleNetsuite` `sageBusinessCloud` `sageIntacct` `dynamicsBusinessCentral` `wave` `shopify` `square` `plaid` `zohoBooks`
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FireWebhookV2Dto'
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FireWebhookResponseV2Dto'
        "400":
          description: Bad Request Error - Thrown if fields sent via query does not follow specifications
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400ResponseDto'
        "401":
          description: Unauthorized - Not logged in or log in expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401ResponseDto'
        "403":
          description: Forbidden - Not enough permission
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error403ResponseDto'
        "500":
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500ResponseDto'
      tags:
        - Sandbox
      security:
        - bearer: []
        - bearer: []
  /v2/visualizations/invoices:
    get:
      operationId: reportInvoices
      summary: List Invoices report
      description: |-
        **Supported for:**

        `quickbooks` `xero` `freshbooks` `quickbooksDesktop` `sageIntacct` `sageBusinessCloud` `oracleNetsuite` `dynamicsBusinessCentral` `wave` `zohoBooks`
      parameters:
        - name: connectionUuid
          required: true
          in: query
          example: CON-9a6d0e4c-0420-4ecf-9c73-d7e1c2f5843e
          description: Unique connection identifier.
          schema:
            type: string
        - name: startDate
          required: true
          in: query
          example: "2021-01-01"
          description: 'The start date of the report frequency in the format: yyyy-MM-dd.'
          schema:
            type: string
        - name: endDate
          required: true
          in: query
          example: "2021-07-31"
          description: 'The end date of the report frequency in the format: yyyy-MM-dd.'
          schema:
            type: string
      responses:
        "200":
          description: Successfully returned invoices report
          content:
            application/json:
              schema:
                type: object
                readOnly: true
                properties:
                  meta:
                    type: object
                    readOnly: true
                    properties:
                      reportId:
                        type: array
                        items:
                          type: string
                        readOnly: true
                        example:
                          - 5fad8a342a88364234392fb5
                      serviceName:
                        type: string
                        readOnly: true
                        enum:
                          - freshbooks
                          - quickbooks
                          - quickbooksDesktop
                          - xero
                          - oracleNetsuite
                          - sageBusinessCloud
                          - sageIntacct
                          - dynamicsBusinessCentral
                          - wave
                          - zohoBooks
                        example: xero
                      businessName:
                        type: string
                        readOnly: true
                        example: Railz
                      createdAt:
                        type: string
                        readOnly: true
                        example: "2020-12-25T01:02:03Z"
                      updatedAt:
                        type: string
                        readOnly: true
                        example: "2020-12-25T01:02:03Z"
                      endDate:
                        type: string
                        readOnly: true
                        example: "2020-12-25T01:02:03Z"
                        description: if report frequency is monthly, end date is maximum of 12 months from start date, if quaterly, its a maximum of 3 years from start date, if yearly, its maximum of 12 years from start date
                      startDate:
                        type: string
                        readOnly: true
                        example: "2020-11-25T01:02:03Z"
                    required:
                      - reportId
                      - serviceName
                      - businessName
                      - endDate
                      - startDate
                  data:
                    type: object
                    readOnly: true
                    properties:
                      unpaidAmount:
                        type: number
                        description: sum of amount due
                        minimum: 0
                        example: 0
                      paidAmount:
                        type: number
                        description: sum (latestAmount - amountDue)
                        minimum: 0
                        example: 1000
                      overdueAmount:
                        type: number
                        description: where current Date > dueDate, sum amountDue
                        minimum: 0
                    required:
                      - unpaidAmount
                      - paidAmount
                      - overdueAmount
                required:
                  - meta
                  - data
        "202":
          description: Data in pending state
        "204":
          description: No data available
        "400":
          description: Bad Request Error - Thrown if fields sent via query does not follow specifications
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400ResponseDto'
        "401":
          description: Unauthorized - Not logged in or log in expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401ResponseDto'
        "403":
          description: Forbidden - Not enough permission
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error403ResponseDto'
        "500":
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500ResponseDto'
      tags:
        - Visualizations
      security:
        - bearer: []
  /v2/visualizations/bills:
    get:
      operationId: reportBills
      summary: List Bills report
      description: |-
        **Supported for:**

        `quickbooks` `xero` `freshbooks` `quickbooksDesktop` `sageIntacct` `sageBusinessCloud` `oracleNetsuite` `dynamicsBusinessCentral` `zohoBooks`
      parameters:
        - name: connectionUuid
          required: true
          in: query
          example: CON-9a6d0e4c-0420-4ecf-9c73-d7e1c2f5843e
          description: Unique connection identifier.
          schema:
            type: string
        - name: startDate
          required: true
          in: query
          example: "2021-01-01"
          description: 'The start date of the report frequency in the format: yyyy-MM-dd.'
          schema:
            type: string
        - name: endDate
          required: true
          in: query
          example: "2021-07-31"
          description: 'The end date of the report frequency in the format: yyyy-MM-dd.'
          schema:
            type: string
      responses:
        "200":
          description: Successfully returned bills report
          content:
            application/json:
              schema:
                type: object
                readOnly: true
                properties:
                  meta:
                    type: object
                    readOnly: true
                    properties:
                      reportId:
                        type: array
                        items:
                          type: string
                        readOnly: true
                        example:
                          - 5fad8a342a88364234392fb5
                      serviceName:
                        type: string
                        readOnly: true
                        enum:
                          - freshbooks
                          - quickbooks
                          - quickbooksDesktop
                          - xero
                          - oracleNetsuite
                          - sageBusinessCloud
                          - sageIntacct
                          - dynamicsBusinessCentral
                          - wave
                          - zohoBooks
                        example: xero
                      businessName:
                        type: string
                        readOnly: true
                        example: Railz
                      createdAt:
                        type: string
                        readOnly: true
                        example: "2020-12-25T01:02:03Z"
                      updatedAt:
                        type: string
                        readOnly: true
                        example: "2020-12-25T01:02:03Z"
                      endDate:
                        type: string
                        readOnly: true
                        example: "2020-12-25T01:02:03Z"
                        description: if report frequency is monthly, end date is maximum of 12 months from start date, if quaterly, its a maximum of 3 years from start date, if yearly, its maximum of 12 years from start date
                      startDate:
                        type: string
                        readOnly: true
                        example: "2020-11-25T01:02:03Z"
                    required:
                      - reportId
                      - serviceName
                      - businessName
                      - endDate
                      - startDate
                  data:
                    type: object
                    readOnly: true
                    properties:
                      unpaidAmount:
                        type: number
                        description: sum of amount due
                        minimum: 0
                        example: 0
                      paidAmount:
                        type: number
                        description: sum (latestAmount - amountDue)
                        minimum: 0
                        example: 1000
                      overdueAmount:
                        type: number
                        description: where current Date > dueDate, sum amountDue
                        minimum: 0
                    required:
                      - unpaidAmount
                      - paidAmount
                      - overdueAmount
                required:
                  - meta
                  - data
        "202":
          description: Data in pending state
        "204":
          description: No data available
        "400":
          description: Bad Request Error - Thrown if fields sent via query does not follow specifications
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400ResponseDto'
        "401":
          description: Unauthorized - Not logged in or log in expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401ResponseDto'
        "403":
          description: Forbidden - Not enough permission
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error403ResponseDto'
        "500":
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500ResponseDto'
      tags:
        - Visualizations
      security:
        - bearer: []
  /v2/visualizations/revenue:
    get:
      operationId: reportRevenue
      summary: List Revenue report
      description: |-
        **Supported for:**

        `quickbooks` `xero` `freshbooks` `quickbooksDesktop` `dynamicsBusinessCentral` `zohoBooks`
      parameters:
        - name: connectionUuid
          required: true
          in: query
          example: CON-9a6d0e4c-0420-4ecf-9c73-d7e1c2f5843e
          description: Unique connection identifier.
          schema:
            type: string
        - name: startDate
          required: true
          in: query
          example: "2021-01-01"
          description: 'The start date of the report frequency in the format: yyyy-MM-dd.'
          schema:
            type: string
        - name: endDate
          required: true
          in: query
          example: "2021-07-31"
          description: 'The end date of the report frequency in the format: yyyy-MM-dd.'
          schema:
            type: string
        - name: reportFrequency
          required: true
          in: query
          description: The report snapshot frequency.
          schema:
            enum:
              - month
              - quarter
              - year
            type: string
        - name: accountingMethod
          required: false
          in: query
          schema:
            default: accrual
            enum:
              - cash
              - accrual
            type: string
      responses:
        "200":
          description: Successfully returned revenue report
          content:
            application/json:
              schema:
                type: object
                properties:
                  meta:
                    type: object
                    readOnly: true
                    properties:
                      reportId:
                        type: array
                        readOnly: true
                        example:
                          - 5fad8a342a88364234392fb5
                        items:
                          type: string
                      serviceName:
                        type: string
                        enum:
                          - freshbooks
                          - quickbooks
                          - quickbooksDesktop
                          - xero
                          - oracleNetsuite
                          - sageBusinessCloud
                          - sageIntacct
                          - dynamicsBusinessCentral
                          - wave
                          - zohoBooks
                        readOnly: true
                        example: xero
                      businessName:
                        type: string
                        readOnly: true
                        example: Railz
                      endDate:
                        type: string
                        readOnly: true
                        example: "2020-12-25T01:02:03Z"
                        description: if report frequency is monthly, end date is maximum of 12 months from start date, if quaterly, its a maximum of 3 years from start date, if yearly, its maximum of 12 years from start date
                      startDate:
                        type: string
                        readOnly: true
                        example: "2020-11-25T01:02:03Z"
                      reportFrequency:
                        type: string
                        readOnly: true
                        example: month
                        enum:
                          - month
                          - quarter
                          - year
                      currency:
                        type: string
                        readOnly: true
                        example: USD
                    required:
                      - reportId
                      - serviceName
                      - businessName
                      - startDate
                      - endDate
                      - reportFrequency
                      - currency
                  data:
                    type: object
                    readOnly: true
                    properties:
                      subSections:
                        type: array
                        description: 'For each subsection, get its end date values and return the top 3 and the remaining sub section values should be summed up and indicated in the last object where name = ''Other'' '
                        items:
                          type: object
                          readOnly: true
                          properties:
                            name:
                              type: string
                              example: Operating Expenses
                              description: Sub section with the largest amount
                            amount:
                              type: number
                              example: 1200
                              minimum: 0
                              description: Total of all values in the expenses section in incomeStatement results
                          example:
                            - name: Utilities
                              amount: 2300
                            - name: Service Fee Income
                              amount: 1000
                            - name: Other
                              amount: 200
                          required:
                            - name
                            - amount
                      totalAmount:
                        type: number
                        example: 3500
                        description: Total of all values in the expenses section in incomeStatement results as at end date
                      percentageChange:
                        type: number
                        example: 15
                        description: Percentage change between previous period and current end date period
                    required:
                      - totalAmount
                      - percentChange
                      - subSections
                readOnly: true
                required:
                  - meta
                  - data
        "202":
          description: Data in pending state
        "204":
          description: No data available
        "400":
          description: Bad Request Error - Thrown if fields sent via query does not follow specifications
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400ResponseDto'
        "401":
          description: Unauthorized - Not logged in or log in expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401ResponseDto'
        "403":
          description: Forbidden - Not enough permission
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error403ResponseDto'
        "500":
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500ResponseDto'
      tags:
        - Visualizations
      security:
        - bearer: []
  /v2/visualizations/expenses:
    get:
      operationId: reportExpenses
      summary: List Expenses report
      description: |-
        **Supported for:**

        `quickbooks` `xero` `freshbooks` `quickbooksDesktop` `dynamicsBusinessCentral` `zohoBooks`
      parameters:
        - name: connectionUuid
          required: true
          in: query
          example: CON-9a6d0e4c-0420-4ecf-9c73-d7e1c2f5843e
          description: Unique connection identifier.
          schema:
            type: string
        - name: startDate
          required: true
          in: query
          example: "2021-01-01"
          description: 'The start date of the report frequency in the format: yyyy-MM-dd.'
          schema:
            type: string
        - name: endDate
          required: true
          in: query
          example: "2021-07-31"
          description: 'The end date of the report frequency in the format: yyyy-MM-dd.'
          schema:
            type: string
        - name: reportFrequency
          required: true
          in: query
          description: The report snapshot frequency.
          schema:
            enum:
              - month
              - quarter
              - year
            type: string
        - name: accountingMethod
          required: false
          in: query
          schema:
            default: accrual
            enum:
              - cash
              - accrual
            type: string
      responses:
        "200":
          description: Successfully returned expenses report
          content:
            application/json:
              schema:
                type: object
                properties:
                  meta:
                    type: object
                    readOnly: true
                    properties:
                      reportId:
                        type: array
                        readOnly: true
                        example:
                          - 5fad8a342a88364234392fb5
                        items:
                          type: string
                      serviceName:
                        type: string
                        enum:
                          - freshbooks
                          - quickbooks
                          - quickbooksDesktop
                          - xero
                          - oracleNetsuite
                          - sageBusinessCloud
                          - sageIntacct
                          - dynamicsBusinessCentral
                          - wave
                          - zohoBooks
                        readOnly: true
                        example: xero
                      businessName:
                        type: string
                        readOnly: true
                        example: Railz
                      endDate:
                        type: string
                        readOnly: true
                        example: "2020-12-25T01:02:03Z"
                        description: if report frequency is monthly, end date is maximum of 12 months from start date, if quaterly, its a maximum of 3 years from start date, if yearly, its maximum of 12 years from start date
                      startDate:
                        type: string
                        readOnly: true
                        example: "2020-11-25T01:02:03Z"
                      reportFrequency:
                        type: string
                        readOnly: true
                        example: month
                        enum:
                          - month
                          - quarter
                          - year
                      currency:
                        type: string
                        readOnly: true
                        example: USD
                    required:
                      - reportId
                      - serviceName
                      - businessName
                      - startDate
                      - endDate
                      - reportFrequency
                      - currency
                  data:
                    type: object
                    readOnly: true
                    properties:
                      subSections:
                        type: array
                        description: 'For each subsection, get its end date values and return the top 3 and the remaining sub section values should be summed up and indicated in the last object where name = ''Other'' '
                        items:
                          type: object
                          readOnly: true
                          properties:
                            name:
                              type: string
                              example: Operating Expenses
                              description: Sub section with the largest amount
                            amount:
                              type: number
                              example: 1200
                              minimum: 0
                              description: Total of all values in the expenses section in incomeStatement results
                          example:
                            - name: Utilities
                              amount: 2300
                            - name: Service Fee Income
                              amount: 1000
                            - name: Other
                              amount: 200
                          required:
                            - name
                            - amount
                      totalAmount:
                        type: number
                        example: 3500
                        description: Total of all values in the expenses section in incomeStatement results as at end date
                      percentageChange:
                        type: number
                        example: 15
                        description: Percentage change between previous period and current end date period
                    required:
                      - totalAmount
                      - percentChange
                      - subSections
                readOnly: true
                required:
                  - meta
                  - data
        "202":
          description: Data in pending state
        "204":
          description: No data available
        "400":
          description: Bad Request Error - Thrown if fields sent via query does not follow specifications
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400ResponseDto'
        "401":
          description: Unauthorized - Not logged in or log in expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401ResponseDto'
        "403":
          description: Forbidden - Not enough permission
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error403ResponseDto'
        "500":
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500ResponseDto'
      tags:
        - Visualizations
      security:
        - bearer: []
  /v2/visualizations/cashflowStatements:
    get:
      operationId: reportCashflowStatements
      summary: List Cashflow report
      description: |-
        **Supported for:**

        `quickbooks` `dynamicsBusinessCentral` `zohoBooks`
      parameters:
        - name: connectionUuid
          required: true
          in: query
          example: CON-9a6d0e4c-0420-4ecf-9c73-d7e1c2f5843e
          description: Unique connection identifier.
          schema:
            type: string
        - name: startDate
          required: true
          in: query
          example: "2021-01-01"
          description: 'The start date of the report frequency in the format: yyyy-MM-dd.'
          schema:
            type: string
        - name: endDate
          required: true
          in: query
          example: "2021-07-31"
          description: 'The end date of the report frequency in the format: yyyy-MM-dd.'
          schema:
            type: string
        - name: reportFrequency
          required: true
          in: query
          description: The report snapshot frequency.
          schema:
            enum:
              - month
              - quarter
              - year
            type: string
        - name: accountingMethod
          required: false
          in: query
          schema:
            default: accrual
            enum:
              - cash
              - accrual
            type: string
      responses:
        "200":
          description: Successfully returned cashflow report
          content:
            application/json:
              schema:
                type: object
                properties:
                  meta:
                    type: object
                    readOnly: true
                    properties:
                      reportId:
                        type: array
                        readOnly: true
                        example:
                          - 5fad8a342a88364234392fb5
                        items:
                          type: string
                      serviceName:
                        type: string
                        enum:
                          - freshbooks
                          - quickbooks
                          - quickbooksDesktop
                          - xero
                          - oracleNetsuite
                          - sageBusinessCloud
                          - sageIntacct
                          - dynamicsBusinessCentral
                          - wave
                          - zohoBooks
                        readOnly: true
                        example: xero
                      businessName:
                        type: string
                        readOnly: true
                        example: Railz
                      endDate:
                        type: string
                        readOnly: true
                        example: "2020-12-25T01:02:03Z"
                        description: if report frequency is monthly, end date is maximum of 12 months from start date, if quaterly, its a maximum of 3 years from start date, if yearly, its maximum of 12 years from start date
                      startDate:
                        type: string
                        readOnly: true
                        example: "2020-11-25T01:02:03Z"
                      reportFrequency:
                        type: string
                        readOnly: true
                        example: month
                        enum:
                          - month
                          - quarter
                          - year
                      currency:
                        type: array
                        readOnly: true
                        example:
                          - USD
                        items:
                          type: string
                    required:
                      - reportId
                      - serviceName
                      - businessName
                      - startDate
                      - endDate
                      - reportFrequency
                      - currency
                  data:
                    type: array
                    readOnly: true
                    items:
                      type: object
                      readOnly: true
                      properties:
                        period:
                          type: object
                          readOnly: true
                          properties:
                            year:
                              type: number
                              example: 2020
                            month:
                              type: number
                              example: 8
                              minimum: 1
                            quarter:
                              type: number
                              example: 3
                              minimum: 1
                            day:
                              type: number
                              example: 31
                              minimum: 1
                            date:
                              type: string
                              example: "2020-08-31T00:00:00.000Z"
                              minimum: 1
                          required:
                            - year
                            - month
                            - quarter
                            - day
                            - date
                        operatingActivities:
                          type: number
                          readOnly: true
                          example: 345
                        financingActivities:
                          type: number
                          readOnly: true
                          example: 345
                        investingActivities:
                          type: number
                          readOnly: true
                          example: 345
                        netCash:
                          type: number
                          readOnly: true
                          example: 345
                      required:
                        - period
                        - operatingActivities
                        - financingActivities
                        - investingActivities
                        - netCash
                readOnly: true
                required:
                  - meta
                  - data
        "202":
          description: Data in pending state
        "204":
          description: No data available
        "400":
          description: Bad Request Error - Thrown if fields sent via query does not follow specifications
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400ResponseDto'
        "401":
          description: Unauthorized - Not logged in or log in expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401ResponseDto'
        "403":
          description: Forbidden - Not enough permission
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error403ResponseDto'
        "500":
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500ResponseDto'
      tags:
        - Visualizations
      security:
        - bearer: []
  /v2/visualizations/incomeStatements:
    get:
      operationId: reportIncomeStatements
      summary: List Income Statements report
      description: |-
        **Supported for:**

        `quickbooks` `xero` `freshbooks` `quickbooksDesktop` `dynamicsBusinessCentral` `zohoBooks`
      parameters:
        - name: connectionUuid
          required: true
          in: query
          example: CON-9a6d0e4c-0420-4ecf-9c73-d7e1c2f5843e
          description: Unique connection identifier.
          schema:
            type: string
        - name: startDate
          required: true
          in: query
          example: "2021-01-01"
          description: 'The start date of the report frequency in the format: yyyy-MM-dd.'
          schema:
            type: string
        - name: endDate
          required: true
          in: query
          example: "2021-07-31"
          description: 'The end date of the report frequency in the format: yyyy-MM-dd.'
          schema:
            type: string
        - name: reportFrequency
          required: true
          in: query
          description: The report snapshot frequency.
          schema:
            enum:
              - month
              - quarter
              - year
            type: string
        - name: accountingMethod
          required: false
          in: query
          schema:
            default: accrual
            enum:
              - cash
              - accrual
            type: string
      responses:
        "200":
          description: Successfully returned income statements report
          content:
            application/json:
              schema:
                type: object
                properties:
                  meta:
                    type: object
                    readOnly: true
                    properties:
                      reportId:
                        type: array
                        readOnly: true
                        example:
                          - 5fad8a342a88364234392fb5
                        items:
                          type: string
                      serviceName:
                        type: string
                        enum:
                          - freshbooks
                          - quickbooks
                          - quickbooksDesktop
                          - xero
                          - oracleNetsuite
                          - sageBusinessCloud
                          - sageIntacct
                          - dynamicsBusinessCentral
                          - wave
                          - zohoBooks
                        readOnly: true
                        example: xero
                      businessName:
                        type: string
                        readOnly: true
                        example: Railz
                      endDate:
                        type: string
                        readOnly: true
                        example: "2020-12-25T01:02:03Z"
                        description: if report frequency is monthly, end date is maximum of 12 months from start date, if quaterly, its a maximum of 3 years from start date, if yearly, its maximum of 12 years from start date
                      startDate:
                        type: string
                        readOnly: true
                        example: "2020-11-25T01:02:03Z"
                      reportFrequency:
                        type: string
                        readOnly: true
                        example: month
                        enum:
                          - month
                          - quarter
                          - year
                      currency:
                        type: array
                        readOnly: true
                        example:
                          - USD
                        items:
                          type: string
                    required:
                      - reportId
                      - serviceName
                      - businessName
                      - startDate
                      - endDate
                      - reportFrequency
                      - currency
                  data:
                    type: array
                    readOnly: true
                    items:
                      type: object
                      readOnly: true
                      properties:
                        period:
                          type: object
                          readOnly: true
                          properties:
                            year:
                              type: number
                              example: 2020
                            month:
                              type: number
                              example: 8
                              minimum: 1
                            quarter:
                              type: number
                              example: 3
                              minimum: 1
                            day:
                              type: number
                              example: 31
                              minimum: 1
                            date:
                              type: string
                              example: "2020-08-31T00:00:00.000Z"
                              minimum: 1
                          required:
                            - year
                            - month
                            - quarter
                            - day
                            - date
                        operatingIncome:
                          type: number
                          readOnly: true
                          example: 345
                        operatingExpenses:
                          type: number
                          readOnly: true
                          example: 345
                        costOfGoodsSold:
                          type: number
                          readOnly: true
                          example: 345
                        otherIncome:
                          type: number
                          readOnly: true
                          example: 345
                        otherExpenses:
                          type: number
                          readOnly: true
                          example: 345
                        netIncome:
                          type: number
                          readOnly: true
                          example: 345
                      required:
                        - period
                        - operatingIncome
                        - operatingExpenses
                        - costOfGoodsSold
                        - otherIncome
                        - otherExpenses
                        - netIncome
                readOnly: true
                required:
                  - meta
                  - data
        "202":
          description: Data in pending state
        "204":
          description: No data available
        "400":
          description: Bad Request Error - Thrown if fields sent via query does not follow specifications
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400ResponseDto'
        "401":
          description: Unauthorized - Not logged in or log in expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401ResponseDto'
        "403":
          description: Forbidden - Not enough permission
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error403ResponseDto'
        "500":
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500ResponseDto'
      tags:
        - Visualizations
      security:
        - bearer: []
  /v2/visualizations/balanceSheets:
    get:
      operationId: reportBalanceSheets
      summary: List Balance Sheets report
      description: |-
        **Supported for:**

        `quickbooks` `xero` `freshbooks` `quickbooksDesktop` `dynamicsBusinessCentral` `zohoBooks`
      parameters:
        - name: connectionUuid
          required: true
          in: query
          example: CON-9a6d0e4c-0420-4ecf-9c73-d7e1c2f5843e
          description: Unique connection identifier.
          schema:
            type: string
        - name: startDate
          required: true
          in: query
          example: "2021-01-01"
          description: 'The start date of the report frequency in the format: yyyy-MM-dd.'
          schema:
            type: string
        - name: endDate
          required: true
          in: query
          example: "2021-07-31"
          description: 'The end date of the report frequency in the format: yyyy-MM-dd.'
          schema:
            type: string
        - name: reportFrequency
          required: true
          in: query
          description: The report snapshot frequency.
          schema:
            enum:
              - month
              - quarter
              - year
            type: string
        - name: accountingMethod
          required: false
          in: query
          schema:
            default: accrual
            enum:
              - cash
              - accrual
            type: string
      responses:
        "200":
          description: Successfully returned balance sheets
          content:
            application/json:
              schema:
                type: object
                properties:
                  meta:
                    type: object
                    readOnly: true
                    properties:
                      reportId:
                        type: array
                        readOnly: true
                        example:
                          - 5fad8a342a88364234392fb5
                        items:
                          type: string
                      serviceName:
                        type: string
                        enum:
                          - freshbooks
                          - quickbooks
                          - quickbooksDesktop
                          - xero
                          - oracleNetsuite
                          - sageBusinessCloud
                          - sageIntacct
                          - dynamicsBusinessCentral
                          - wave
                          - zohoBooks
                        readOnly: true
                        example: xero
                      businessName:
                        type: string
                        readOnly: true
                        example: Railz
                      endDate:
                        type: string
                        readOnly: true
                        example: "2020-12-25T01:02:03Z"
                        description: if report frequency is monthly, end date is maximum of 12 months from start date, if quaterly, its a maximum of 3 years from start date, if yearly, its maximum of 12 years from start date
                      startDate:
                        type: string
                        readOnly: true
                        example: "2020-11-25T01:02:03Z"
                      reportFrequency:
                        type: string
                        readOnly: true
                        example: month
                        enum:
                          - month
                          - quarter
                          - year
                      currency:
                        type: array
                        readOnly: true
                        example:
                          - USD
                        items:
                          type: string
                    required:
                      - reportId
                      - serviceName
                      - businessName
                      - startDate
                      - endDate
                      - reportFrequency
                      - currency
                  data:
                    type: array
                    readOnly: true
                    items:
                      type: object
                      readOnly: true
                      properties:
                        period:
                          type: object
                          readOnly: true
                          properties:
                            year:
                              type: number
                              example: 2020
                            month:
                              type: number
                              example: 8
                              minimum: 1
                            quarter:
                              type: number
                              example: 3
                              minimum: 1
                            day:
                              type: number
                              example: 31
                              minimum: 1
                            date:
                              type: string
                              example: "2020-08-31T00:00:00.000Z"
                              minimum: 1
                          required:
                            - year
                            - month
                            - quarter
                            - day
                            - date
                        currentAssets:
                          type: number
                          readOnly: true
                          example: 345
                        nonCurrentAssets:
                          type: number
                          readOnly: true
                          example: 345
                        currentLiabilities:
                          type: number
                          readOnly: true
                          example: 345
                        nonCurrentLiabilities:
                          type: number
                          readOnly: true
                          example: 345
                        equity:
                          type: number
                          readOnly: true
                          example: 345
                      required:
                        - period
                        - assets
                        - liabilities
                        - equity
                readOnly: true
                required:
                  - meta
                  - data
        "202":
          description: Data in pending state
        "204":
          description: No data available
        "400":
          description: Bad Request Error - Thrown if fields sent via query does not follow specifications
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400ResponseDto'
        "401":
          description: Unauthorized - Not logged in or log in expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401ResponseDto'
        "403":
          description: Forbidden - Not enough permission
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error403ResponseDto'
        "500":
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500ResponseDto'
      tags:
        - Visualizations
      security:
        - bearer: []
  /v2/visualizations/financialRatios:
    get:
      operationId: reportFinancialRatios
      summary: List Financial Ratios report
      description: |-
        **Supported for:**

        `quickbooks` `xero` `freshbooks` `quickbooksDesktop` `dynamicsBusinessCentral` `zohoBooks`
      parameters:
        - name: connectionUuid
          required: true
          in: query
          example: CON-9a6d0e4c-0420-4ecf-9c73-d7e1c2f5843e
          description: Unique connection identifier.
          schema:
            type: string
        - name: startDate
          required: true
          in: query
          example: "2021-01-01"
          description: 'The start date of the report frequency in the format: yyyy-MM-dd.'
          schema:
            type: string
        - name: endDate
          required: true
          in: query
          example: "2021-07-31"
          description: 'The end date of the report frequency in the format: yyyy-MM-dd.'
          schema:
            type: string
        - name: reportFrequency
          required: true
          in: query
          description: The report snapshot frequency.
          schema:
            enum:
              - month
              - quarter
              - year
            type: string
      responses:
        "200":
          description: Successfully returned financial ratios
          content:
            application/json:
              schema:
                type: object
                properties:
                  meta:
                    type: object
                    readOnly: true
                    properties:
                      reportId:
                        type: array
                        readOnly: true
                        example:
                          - 5fad8a342a88364234392fb5
                        items:
                          type: string
                      serviceName:
                        type: string
                        enum:
                          - freshbooks
                          - quickbooks
                          - quickbooksDesktop
                          - xero
                          - oracleNetsuite
                          - sageBusinessCloud
                          - sageIntacct
                          - dynamicsBusinessCentral
                          - wave
                          - zohoBooks
                        readOnly: true
                        example: xero
                      businessName:
                        type: string
                        readOnly: true
                        example: Railz
                      endDate:
                        type: string
                        readOnly: true
                        example: "2020-12-25T01:02:03Z"
                        description: if report frequency is monthly, end date is maximum of 12 months from start date, if quaterly, its a maximum of 3 years from start date, if yearly, its maximum of 12 years from start date
                      startDate:
                        type: string
                        readOnly: true
                        example: "2020-11-25T01:02:03Z"
                      reportFrequency:
                        type: string
                        readOnly: true
                        example: month
                        enum:
                          - month
                          - quarter
                          - year
                    required:
                      - reportId
                      - serviceName
                      - businessName
                      - startDate
                      - endDate
                      - reportFrequency
                      - currency
                  data:
                    type: object
                    properties:
                      credit:
                        type: object
                        readOnly: true
                        properties:
                          distanceToDefault:
                            type: object
                            readOnly: true
                            properties:
                              currentValue:
                                type: number
                                description: Return on Assets - EBITDA calculation (a decimal value)
                                example: 10
                                format: double
                              percentageChange:
                                type: number
                                description: EBITDA (a dollar value)
                                example: 10
                                format: double
                              timePeriodData:
                                type: array
                                readOnly: true
                                maxItems: 12
                                items:
                                  type: object
                                  readOnly: true
                                  properties:
                                    period:
                                      type: object
                                      readOnly: true
                                      properties:
                                        year:
                                          type: number
                                          example: 2020
                                        month:
                                          type: number
                                          example: 8
                                          minimum: 1
                                        quarter:
                                          type: number
                                          example: 3
                                          minimum: 1
                                        day:
                                          type: number
                                          example: 31
                                          minimum: 1
                                        date:
                                          type: string
                                          example: "2020-08-31T00:00:00.000Z"
                                          minimum: 1
                                      required:
                                        - year
                                        - month
                                        - quarter
                                        - day
                                        - date
                                    value:
                                      type: number
                                      minimum: 0
                                      example: 1000
                                  required:
                                    - period
                                    - value
                            required:
                              - currentValue
                              - percentageChange
                              - timePeriodData
                          probabilityOfDefault:
                            type: object
                            readOnly: true
                            properties:
                              currentValue:
                                type: number
                                description: Return on Assets - EBITDA calculation (a decimal value)
                                example: 10
                                format: double
                              percentageChange:
                                type: number
                                description: EBITDA (a dollar value)
                                example: 10
                                format: double
                              timePeriodData:
                                type: array
                                readOnly: true
                                maxItems: 12
                                items:
                                  type: object
                                  readOnly: true
                                  properties:
                                    period:
                                      type: object
                                      readOnly: true
                                      properties:
                                        year:
                                          type: number
                                          example: 2020
                                        month:
                                          type: number
                                          example: 8
                                          minimum: 1
                                        quarter:
                                          type: number
                                          example: 3
                                          minimum: 1
                                        day:
                                          type: number
                                          example: 31
                                          minimum: 1
                                        date:
                                          type: string
                                          example: "2020-08-31T00:00:00.000Z"
                                          minimum: 1
                                      required:
                                        - year
                                        - month
                                        - quarter
                                        - day
                                        - date
                                    value:
                                      type: number
                                      minimum: 0
                                      example: 1000
                                  required:
                                    - period
                                    - value
                            required:
                              - currentValue
                              - percentageChange
                              - timePeriodData
                          liquidationValue:
                            type: object
                            readOnly: true
                            properties:
                              currentValue:
                                type: number
                                description: Return on Assets - EBITDA calculation (a decimal value)
                                example: 10
                                format: double
                              percentageChange:
                                type: number
                                description: EBITDA (a dollar value)
                                example: 10
                                format: double
                              timePeriodData:
                                type: array
                                readOnly: true
                                maxItems: 12
                                items:
                                  type: object
                                  readOnly: true
                                  properties:
                                    period:
                                      type: object
                                      readOnly: true
                                      properties:
                                        year:
                                          type: number
                                          example: 2020
                                        month:
                                          type: number
                                          example: 8
                                          minimum: 1
                                        quarter:
                                          type: number
                                          example: 3
                                          minimum: 1
                                        day:
                                          type: number
                                          example: 31
                                          minimum: 1
                                        date:
                                          type: string
                                          example: "2020-08-31T00:00:00.000Z"
                                          minimum: 1
                                      required:
                                        - year
                                        - month
                                        - quarter
                                        - day
                                        - date
                                    value:
                                      type: number
                                      minimum: 0
                                      example: 1000
                                  required:
                                    - period
                                    - value
                            required:
                              - currentValue
                              - percentageChange
                              - timePeriodData
                      efficiency:
                        type: object
                        readOnly: true
                        properties:
                          grossBurnRate:
                            type: object
                            readOnly: true
                            properties:
                              currentValue:
                                type: number
                                description: Return on Assets - EBITDA calculation (a decimal value)
                                example: 10
                                format: double
                              percentageChange:
                                type: number
                                description: EBITDA (a dollar value)
                                example: 10
                                format: double
                              timePeriodData:
                                type: array
                                readOnly: true
                                maxItems: 12
                                items:
                                  type: object
                                  readOnly: true
                                  properties:
                                    period:
                                      type: object
                                      readOnly: true
                                      properties:
                                        year:
                                          type: number
                                          example: 2020
                                        month:
                                          type: number
                                          example: 8
                                          minimum: 1
                                        quarter:
                                          type: number
                                          example: 3
                                          minimum: 1
                                        day:
                                          type: number
                                          example: 31
                                          minimum: 1
                                        date:
                                          type: string
                                          example: "2020-08-31T00:00:00.000Z"
                                          minimum: 1
                                      required:
                                        - year
                                        - month
                                        - quarter
                                        - day
                                        - date
                                    value:
                                      type: number
                                      minimum: 0
                                      example: 1000
                                  required:
                                    - period
                                    - value
                            required:
                              - currentValue
                              - percentageChange
                              - timePeriodData
                          inventoryTurnoverRatio:
                            type: object
                            readOnly: true
                            properties:
                              currentValue:
                                type: number
                                description: Return on Assets - EBITDA calculation (a decimal value)
                                example: 10
                                format: double
                              percentageChange:
                                type: number
                                description: EBITDA (a dollar value)
                                example: 10
                                format: double
                              timePeriodData:
                                type: array
                                readOnly: true
                                maxItems: 12
                                items:
                                  type: object
                                  readOnly: true
                                  properties:
                                    period:
                                      type: object
                                      readOnly: true
                                      properties:
                                        year:
                                          type: number
                                          example: 2020
                                        month:
                                          type: number
                                          example: 8
                                          minimum: 1
                                        quarter:
                                          type: number
                                          example: 3
                                          minimum: 1
                                        day:
                                          type: number
                                          example: 31
                                          minimum: 1
                                        date:
                                          type: string
                                          example: "2020-08-31T00:00:00.000Z"
                                          minimum: 1
                                      required:
                                        - year
                                        - month
                                        - quarter
                                        - day
                                        - date
                                    value:
                                      type: number
                                      minimum: 0
                                      example: 1000
                                  required:
                                    - period
                                    - value
                            required:
                              - currentValue
                              - percentageChange
                              - timePeriodData
                          assetTurnoverRatio:
                            type: object
                            readOnly: true
                            properties:
                              currentValue:
                                type: number
                                description: Return on Assets - EBITDA calculation (a decimal value)
                                example: 10
                                format: double
                              percentageChange:
                                type: number
                                description: EBITDA (a dollar value)
                                example: 10
                                format: double
                              timePeriodData:
                                type: array
                                readOnly: true
                                maxItems: 12
                                items:
                                  type: object
                                  readOnly: true
                                  properties:
                                    period:
                                      type: object
                                      readOnly: true
                                      properties:
                                        year:
                                          type: number
                                          example: 2020
                                        month:
                                          type: number
                                          example: 8
                                          minimum: 1
                                        quarter:
                                          type: number
                                          example: 3
                                          minimum: 1
                                        day:
                                          type: number
                                          example: 31
                                          minimum: 1
                                        date:
                                          type: string
                                          example: "2020-08-31T00:00:00.000Z"
                                          minimum: 1
                                      required:
                                        - year
                                        - month
                                        - quarter
                                        - day
                                        - date
                                    value:
                                      type: number
                                      minimum: 0
                                      example: 1000
                                  required:
                                    - period
                                    - value
                            required:
                              - currentValue
                              - percentageChange
                              - timePeriodData
                      leverage:
                        type: object
                        readOnly: true
                        properties:
                          equityToLTAssets:
                            type: object
                            readOnly: true
                            properties:
                              currentValue:
                                type: number
                                description: Return on Assets - EBITDA calculation (a decimal value)
                                example: 10
                                format: double
                              percentageChange:
                                type: number
                                description: EBITDA (a dollar value)
                                example: 10
                                format: double
                              timePeriodData:
                                type: array
                                readOnly: true
                                maxItems: 12
                                items:
                                  type: object
                                  readOnly: true
                                  properties:
                                    period:
                                      type: object
                                      readOnly: true
                                      properties:
                                        year:
                                          type: number
                                          example: 2020
                                        month:
                                          type: number
                                          example: 8
                                          minimum: 1
                                        quarter:
                                          type: number
                                          example: 3
                                          minimum: 1
                                        day:
                                          type: number
                                          example: 31
                                          minimum: 1
                                        date:
                                          type: string
                                          example: "2020-08-31T00:00:00.000Z"
                                          minimum: 1
                                      required:
                                        - year
                                        - month
                                        - quarter
                                        - day
                                        - date
                                    value:
                                      type: number
                                      minimum: 0
                                      example: 1000
                                  required:
                                    - period
                                    - value
                            required:
                              - currentValue
                              - percentageChange
                              - timePeriodData
                          shortDebtToEquityRatio:
                            type: object
                            readOnly: true
                            properties:
                              currentValue:
                                type: number
                                description: Return on Assets - EBITDA calculation (a decimal value)
                                example: 10
                                format: double
                              percentageChange:
                                type: number
                                description: EBITDA (a dollar value)
                                example: 10
                                format: double
                              timePeriodData:
                                type: array
                                readOnly: true
                                maxItems: 12
                                items:
                                  type: object
                                  readOnly: true
                                  properties:
                                    period:
                                      type: object
                                      readOnly: true
                                      properties:
                                        year:
                                          type: number
                                          example: 2020
                                        month:
                                          type: number
                                          example: 8
                                          minimum: 1
                                        quarter:
                                          type: number
                                          example: 3
                                          minimum: 1
                                        day:
                                          type: number
                                          example: 31
                                          minimum: 1
                                        date:
                                          type: string
                                          example: "2020-08-31T00:00:00.000Z"
                                          minimum: 1
                                      required:
                                        - year
                                        - month
                                        - quarter
                                        - day
                                        - date
                                    value:
                                      type: number
                                      minimum: 0
                                      example: 1000
                                  required:
                                    - period
                                    - value
                            required:
                              - currentValue
                              - percentageChange
                              - timePeriodData
                          debtToEquityRatio:
                            type: object
                            readOnly: true
                            properties:
                              currentValue:
                                type: number
                                description: Return on Assets - EBITDA calculation (a decimal value)
                                example: 10
                                format: double
                              percentageChange:
                                type: number
                                description: EBITDA (a dollar value)
                                example: 10
                                format: double
                              timePeriodData:
                                type: array
                                readOnly: true
                                maxItems: 12
                                items:
                                  type: object
                                  readOnly: true
                                  properties:
                                    period:
                                      type: object
                                      readOnly: true
                                      properties:
                                        year:
                                          type: number
                                          example: 2020
                                        month:
                                          type: number
                                          example: 8
                                          minimum: 1
                                        quarter:
                                          type: number
                                          example: 3
                                          minimum: 1
                                        day:
                                          type: number
                                          example: 31
                                          minimum: 1
                                        date:
                                          type: string
                                          example: "2020-08-31T00:00:00.000Z"
                                          minimum: 1
                                      required:
                                        - year
                                        - month
                                        - quarter
                                        - day
                                        - date
                                    value:
                                      type: number
                                      minimum: 0
                                      example: 1000
                                  required:
                                    - period
                                    - value
                            required:
                              - currentValue
                              - percentageChange
                              - timePeriodData
                          interestBankLoan:
                            type: object
                            readOnly: true
                            properties:
                              currentValue:
                                type: number
                                description: Return on Assets - EBITDA calculation (a decimal value)
                                example: 10
                                format: double
                              percentageChange:
                                type: number
                                description: EBITDA (a dollar value)
                                example: 10
                                format: double
                              timePeriodData:
                                type: array
                                readOnly: true
                                maxItems: 12
                                items:
                                  type: object
                                  readOnly: true
                                  properties:
                                    period:
                                      type: object
                                      readOnly: true
                                      properties:
                                        year:
                                          type: number
                                          example: 2020
                                        month:
                                          type: number
                                          example: 8
                                          minimum: 1
                                        quarter:
                                          type: number
                                          example: 3
                                          minimum: 1
                                        day:
                                          type: number
                                          example: 31
                                          minimum: 1
                                        date:
                                          type: string
                                          example: "2020-08-31T00:00:00.000Z"
                                          minimum: 1
                                      required:
                                        - year
                                        - month
                                        - quarter
                                        - day
                                        - date
                                    value:
                                      type: number
                                      minimum: 0
                                      example: 1000
                                  required:
                                    - period
                                    - value
                            required:
                              - currentValue
                              - percentageChange
                              - timePeriodData
                          interestCoverageRatio:
                            type: object
                            readOnly: true
                            properties:
                              currentValue:
                                type: number
                                description: Return on Assets - EBITDA calculation (a decimal value)
                                example: 10
                                format: double
                              percentageChange:
                                type: number
                                description: EBITDA (a dollar value)
                                example: 10
                                format: double
                              timePeriodData:
                                type: array
                                readOnly: true
                                maxItems: 12
                                items:
                                  type: object
                                  readOnly: true
                                  properties:
                                    period:
                                      type: object
                                      readOnly: true
                                      properties:
                                        year:
                                          type: number
                                          example: 2020
                                        month:
                                          type: number
                                          example: 8
                                          minimum: 1
                                        quarter:
                                          type: number
                                          example: 3
                                          minimum: 1
                                        day:
                                          type: number
                                          example: 31
                                          minimum: 1
                                        date:
                                          type: string
                                          example: "2020-08-31T00:00:00.000Z"
                                          minimum: 1
                                      required:
                                        - year
                                        - month
                                        - quarter
                                        - day
                                        - date
                                    value:
                                      type: number
                                      minimum: 0
                                      example: 1000
                                  required:
                                    - period
                                    - value
                            required:
                              - currentValue
                              - percentageChange
                              - timePeriodData
                          debtToAssetsRatio:
                            type: object
                            readOnly: true
                            properties:
                              currentValue:
                                type: number
                                description: Return on Assets - EBITDA calculation (a decimal value)
                                example: 10
                                format: double
                              percentageChange:
                                type: number
                                description: EBITDA (a dollar value)
                                example: 10
                                format: double
                              timePeriodData:
                                type: array
                                readOnly: true
                                maxItems: 12
                                items:
                                  type: object
                                  readOnly: true
                                  properties:
                                    period:
                                      type: object
                                      readOnly: true
                                      properties:
                                        year:
                                          type: number
                                          example: 2020
                                        month:
                                          type: number
                                          example: 8
                                          minimum: 1
                                        quarter:
                                          type: number
                                          example: 3
                                          minimum: 1
                                        day:
                                          type: number
                                          example: 31
                                          minimum: 1
                                        date:
                                          type: string
                                          example: "2020-08-31T00:00:00.000Z"
                                          minimum: 1
                                      required:
                                        - year
                                        - month
                                        - quarter
                                        - day
                                        - date
                                    value:
                                      type: number
                                      minimum: 0
                                      example: 1000
                                  required:
                                    - period
                                    - value
                            required:
                              - currentValue
                              - percentageChange
                              - timePeriodData
                          debtServiceCoverageRatio:
                            type: object
                            readOnly: true
                            properties:
                              currentValue:
                                type: number
                                description: Return on Assets - EBITDA calculation (a decimal value)
                                example: 10
                                format: double
                              percentageChange:
                                type: number
                                description: EBITDA (a dollar value)
                                example: 10
                                format: double
                              timePeriodData:
                                type: array
                                readOnly: true
                                maxItems: 12
                                items:
                                  type: object
                                  readOnly: true
                                  properties:
                                    period:
                                      type: object
                                      readOnly: true
                                      properties:
                                        year:
                                          type: number
                                          example: 2020
                                        month:
                                          type: number
                                          example: 8
                                          minimum: 1
                                        quarter:
                                          type: number
                                          example: 3
                                          minimum: 1
                                        day:
                                          type: number
                                          example: 31
                                          minimum: 1
                                        date:
                                          type: string
                                          example: "2020-08-31T00:00:00.000Z"
                                          minimum: 1
                                      required:
                                        - year
                                        - month
                                        - quarter
                                        - day
                                        - date
                                    value:
                                      type: number
                                      minimum: 0
                                      example: 1000
                                  required:
                                    - period
                                    - value
                            required:
                              - currentValue
                              - percentageChange
                              - timePeriodData
                      liquidity:
                        type: object
                        readOnly: true
                        properties:
                          quickRatio:
                            type: object
                            readOnly: true
                            properties:
                              currentValue:
                                type: number
                                description: Return on Assets - EBITDA calculation (a decimal value)
                                example: 10
                                format: double
                              percentageChange:
                                type: number
                                description: EBITDA (a dollar value)
                                example: 10
                                format: double
                              timePeriodData:
                                type: array
                                readOnly: true
                                maxItems: 12
                                items:
                                  type: object
                                  readOnly: true
                                  properties:
                                    period:
                                      type: object
                                      readOnly: true
                                      properties:
                                        year:
                                          type: number
                                          example: 2020
                                        month:
                                          type: number
                                          example: 8
                                          minimum: 1
                                        quarter:
                                          type: number
                                          example: 3
                                          minimum: 1
                                        day:
                                          type: number
                                          example: 31
                                          minimum: 1
                                        date:
                                          type: string
                                          example: "2020-08-31T00:00:00.000Z"
                                          minimum: 1
                                      required:
                                        - year
                                        - month
                                        - quarter
                                        - day
                                        - date
                                    value:
                                      type: number
                                      minimum: 0
                                      example: 1000
                                  required:
                                    - period
                                    - value
                            required:
                              - currentValue
                              - percentageChange
                              - timePeriodData
                          absoluteLiquidity:
                            type: object
                            readOnly: true
                            properties:
                              currentValue:
                                type: number
                                description: Return on Assets - EBITDA calculation (a decimal value)
                                example: 10
                                format: double
                              percentageChange:
                                type: number
                                description: EBITDA (a dollar value)
                                example: 10
                                format: double
                              timePeriodData:
                                type: array
                                readOnly: true
                                maxItems: 12
                                items:
                                  type: object
                                  readOnly: true
                                  properties:
                                    period:
                                      type: object
                                      readOnly: true
                                      properties:
                                        year:
                                          type: number
                                          example: 2020
                                        month:
                                          type: number
                                          example: 8
                                          minimum: 1
                                        quarter:
                                          type: number
                                          example: 3
                                          minimum: 1
                                        day:
                                          type: number
                                          example: 31
                                          minimum: 1
                                        date:
                                          type: string
                                          example: "2020-08-31T00:00:00.000Z"
                                          minimum: 1
                                      required:
                                        - year
                                        - month
                                        - quarter
                                        - day
                                        - date
                                    value:
                                      type: number
                                      minimum: 0
                                      example: 1000
                                  required:
                                    - period
                                    - value
                            required:
                              - currentValue
                              - percentageChange
                              - timePeriodData
                          currentRatio:
                            type: object
                            readOnly: true
                            properties:
                              currentValue:
                                type: number
                                description: Return on Assets - EBITDA calculation (a decimal value)
                                example: 10
                                format: double
                              percentageChange:
                                type: number
                                description: EBITDA (a dollar value)
                                example: 10
                                format: double
                              timePeriodData:
                                type: array
                                readOnly: true
                                maxItems: 12
                                items:
                                  type: object
                                  readOnly: true
                                  properties:
                                    period:
                                      type: object
                                      readOnly: true
                                      properties:
                                        year:
                                          type: number
                                          example: 2020
                                        month:
                                          type: number
                                          example: 8
                                          minimum: 1
                                        quarter:
                                          type: number
                                          example: 3
                                          minimum: 1
                                        day:
                                          type: number
                                          example: 31
                                          minimum: 1
                                        date:
                                          type: string
                                          example: "2020-08-31T00:00:00.000Z"
                                          minimum: 1
                                      required:
                                        - year
                                        - month
                                        - quarter
                                        - day
                                        - date
                                    value:
                                      type: number
                                      minimum: 0
                                      example: 1000
                                  required:
                                    - period
                                    - value
                            required:
                              - currentValue
                              - percentageChange
                              - timePeriodData
                          grossBurn:
                            type: object
                            readOnly: true
                            properties:
                              currentValue:
                                type: number
                                description: Return on Assets - EBITDA calculation (a decimal value)
                                example: 10
                                format: double
                              percentageChange:
                                type: number
                                description: EBITDA (a dollar value)
                                example: 10
                                format: double
                              timePeriodData:
                                type: array
                                readOnly: true
                                maxItems: 12
                                items:
                                  type: object
                                  readOnly: true
                                  properties:
                                    period:
                                      type: object
                                      readOnly: true
                                      properties:
                                        year:
                                          type: number
                                          example: 2020
                                        month:
                                          type: number
                                          example: 8
                                          minimum: 1
                                        quarter:
                                          type: number
                                          example: 3
                                          minimum: 1
                                        day:
                                          type: number
                                          example: 31
                                          minimum: 1
                                        date:
                                          type: string
                                          example: "2020-08-31T00:00:00.000Z"
                                          minimum: 1
                                      required:
                                        - year
                                        - month
                                        - quarter
                                        - day
                                        - date
                                    value:
                                      type: number
                                      minimum: 0
                                      example: 1000
                                  required:
                                    - period
                                    - value
                            required:
                              - currentValue
                              - percentageChange
                              - timePeriodData
                          runway:
                            type: object
                            readOnly: true
                            properties:
                              currentValue:
                                type: number
                                description: Return on Assets - EBITDA calculation (a decimal value)
                                example: 10
                                format: double
                              percentageChange:
                                type: number
                                description: EBITDA (a dollar value)
                                example: 10
                                format: double
                              timePeriodData:
                                type: array
                                readOnly: true
                                maxItems: 12
                                items:
                                  type: object
                                  readOnly: true
                                  properties:
                                    period:
                                      type: object
                                      readOnly: true
                                      properties:
                                        year:
                                          type: number
                                          example: 2020
                                        month:
                                          type: number
                                          example: 8
                                          minimum: 1
                                        quarter:
                                          type: number
                                          example: 3
                                          minimum: 1
                                        day:
                                          type: number
                                          example: 31
                                          minimum: 1
                                        date:
                                          type: string
                                          example: "2020-08-31T00:00:00.000Z"
                                          minimum: 1
                                      required:
                                        - year
                                        - month
                                        - quarter
                                        - day
                                        - date
                                    value:
                                      type: number
                                      minimum: 0
                                      example: 1000
                                  required:
                                    - period
                                    - value
                            required:
                              - currentValue
                              - percentageChange
                              - timePeriodData
                          cashRatio:
                            type: object
                            readOnly: true
                            properties:
                              currentValue:
                                type: number
                                description: Return on Assets - EBITDA calculation (a decimal value)
                                example: 10
                                format: double
                              percentageChange:
                                type: number
                                description: EBITDA (a dollar value)
                                example: 10
                                format: double
                              timePeriodData:
                                type: array
                                readOnly: true
                                maxItems: 12
                                items:
                                  type: object
                                  readOnly: true
                                  properties:
                                    period:
                                      type: object
                                      readOnly: true
                                      properties:
                                        year:
                                          type: number
                                          example: 2020
                                        month:
                                          type: number
                                          example: 8
                                          minimum: 1
                                        quarter:
                                          type: number
                                          example: 3
                                          minimum: 1
                                        day:
                                          type: number
                                          example: 31
                                          minimum: 1
                                        date:
                                          type: string
                                          example: "2020-08-31T00:00:00.000Z"
                                          minimum: 1
                                      required:
                                        - year
                                        - month
                                        - quarter
                                        - day
                                        - date
                                    value:
                                      type: number
                                      minimum: 0
                                      example: 1000
                                  required:
                                    - period
                                    - value
                            required:
                              - currentValue
                              - percentageChange
                              - timePeriodData
                          freeCashflowRatio:
                            type: object
                            readOnly: true
                            properties:
                              currentValue:
                                type: number
                                description: Return on Assets - EBITDA calculation (a decimal value)
                                example: 10
                                format: double
                              percentageChange:
                                type: number
                                description: EBITDA (a dollar value)
                                example: 10
                                format: double
                              timePeriodData:
                                type: array
                                readOnly: true
                                maxItems: 12
                                items:
                                  type: object
                                  readOnly: true
                                  properties:
                                    period:
                                      type: object
                                      readOnly: true
                                      properties:
                                        year:
                                          type: number
                                          example: 2020
                                        month:
                                          type: number
                                          example: 8
                                          minimum: 1
                                        quarter:
                                          type: number
                                          example: 3
                                          minimum: 1
                                        day:
                                          type: number
                                          example: 31
                                          minimum: 1
                                        date:
                                          type: string
                                          example: "2020-08-31T00:00:00.000Z"
                                          minimum: 1
                                      required:
                                        - year
                                        - month
                                        - quarter
                                        - day
                                        - date
                                    value:
                                      type: number
                                      minimum: 0
                                      example: 1000
                                  required:
                                    - period
                                    - value
                            required:
                              - currentValue
                              - percentageChange
                              - timePeriodData
                      profitability:
                        type: object
                        readOnly: true
                        properties:
                          returnOnAssets:
                            type: object
                            readOnly: true
                            properties:
                              currentValue:
                                type: number
                                description: Return on Assets - EBITDA calculation (a decimal value)
                                example: 10
                                format: double
                              percentageChange:
                                type: number
                                description: EBITDA (a dollar value)
                                example: 10
                                format: double
                              timePeriodData:
                                type: array
                                readOnly: true
                                maxItems: 12
                                items:
                                  type: object
                                  readOnly: true
                                  properties:
                                    period:
                                      type: object
                                      readOnly: true
                                      properties:
                                        year:
                                          type: number
                                          example: 2020
                                        month:
                                          type: number
                                          example: 8
                                          minimum: 1
                                        quarter:
                                          type: number
                                          example: 3
                                          minimum: 1
                                        day:
                                          type: number
                                          example: 31
                                          minimum: 1
                                        date:
                                          type: string
                                          example: "2020-08-31T00:00:00.000Z"
                                          minimum: 1
                                      required:
                                        - year
                                        - month
                                        - quarter
                                        - day
                                        - date
                                    value:
                                      type: number
                                      minimum: 0
                                      example: 1000
                                  required:
                                    - period
                                    - value
                            required:
                              - currentValue
                              - percentageChange
                              - timePeriodData
                          ebitda:
                            type: object
                            readOnly: true
                            properties:
                              currentValue:
                                type: number
                                description: Return on Assets - EBITDA calculation (a decimal value)
                                example: 10
                                format: double
                              percentageChange:
                                type: number
                                description: EBITDA (a dollar value)
                                example: 10
                                format: double
                              timePeriodData:
                                type: array
                                readOnly: true
                                maxItems: 12
                                items:
                                  type: object
                                  readOnly: true
                                  properties:
                                    period:
                                      type: object
                                      readOnly: true
                                      properties:
                                        year:
                                          type: number
                                          example: 2020
                                        month:
                                          type: number
                                          example: 8
                                          minimum: 1
                                        quarter:
                                          type: number
                                          example: 3
                                          minimum: 1
                                        day:
                                          type: number
                                          example: 31
                                          minimum: 1
                                        date:
                                          type: string
                                          example: "2020-08-31T00:00:00.000Z"
                                          minimum: 1
                                      required:
                                        - year
                                        - month
                                        - quarter
                                        - day
                                        - date
                                    value:
                                      type: number
                                      minimum: 0
                                      example: 1000
                                  required:
                                    - period
                                    - value
                            required:
                              - currentValue
                              - percentageChange
                              - timePeriodData
                          ebitdaMargin:
                            type: object
                            readOnly: true
                            properties:
                              currentValue:
                                type: number
                                description: Return on Assets - EBITDA calculation (a decimal value)
                                example: 10
                                format: double
                              percentageChange:
                                type: number
                                description: EBITDA (a dollar value)
                                example: 10
                                format: double
                              timePeriodData:
                                type: array
                                readOnly: true
                                maxItems: 12
                                items:
                                  type: object
                                  readOnly: true
                                  properties:
                                    period:
                                      type: object
                                      readOnly: true
                                      properties:
                                        year:
                                          type: number
                                          example: 2020
                                        month:
                                          type: number
                                          example: 8
                                          minimum: 1
                                        quarter:
                                          type: number
                                          example: 3
                                          minimum: 1
                                        day:
                                          type: number
                                          example: 31
                                          minimum: 1
                                        date:
                                          type: string
                                          example: "2020-08-31T00:00:00.000Z"
                                          minimum: 1
                                      required:
                                        - year
                                        - month
                                        - quarter
                                        - day
                                        - date
                                    value:
                                      type: number
                                      minimum: 0
                                      example: 1000
                                  required:
                                    - period
                                    - value
                            required:
                              - currentValue
                              - percentageChange
                              - timePeriodData
                          workingCapital:
                            type: object
                            readOnly: true
                            properties:
                              currentValue:
                                type: number
                                description: Return on Assets - EBITDA calculation (a decimal value)
                                example: 10
                                format: double
                              percentageChange:
                                type: number
                                description: EBITDA (a dollar value)
                                example: 10
                                format: double
                              timePeriodData:
                                type: array
                                readOnly: true
                                maxItems: 12
                                items:
                                  type: object
                                  readOnly: true
                                  properties:
                                    period:
                                      type: object
                                      readOnly: true
                                      properties:
                                        year:
                                          type: number
                                          example: 2020
                                        month:
                                          type: number
                                          example: 8
                                          minimum: 1
                                        quarter:
                                          type: number
                                          example: 3
                                          minimum: 1
                                        day:
                                          type: number
                                          example: 31
                                          minimum: 1
                                        date:
                                          type: string
                                          example: "2020-08-31T00:00:00.000Z"
                                          minimum: 1
                                      required:
                                        - year
                                        - month
                                        - quarter
                                        - day
                                        - date
                                    value:
                                      type: number
                                      minimum: 0
                                      example: 1000
                                  required:
                                    - period
                                    - value
                            required:
                              - currentValue
                              - percentageChange
                              - timePeriodData
                          freeCashFlow:
                            type: object
                            readOnly: true
                            properties:
                              currentValue:
                                type: number
                                description: Return on Assets - EBITDA calculation (a decimal value)
                                example: 10
                                format: double
                              percentageChange:
                                type: number
                                description: EBITDA (a dollar value)
                                example: 10
                                format: double
                              timePeriodData:
                                type: array
                                readOnly: true
                                maxItems: 12
                                items:
                                  type: object
                                  readOnly: true
                                  properties:
                                    period:
                                      type: object
                                      readOnly: true
                                      properties:
                                        year:
                                          type: number
                                          example: 2020
                                        month:
                                          type: number
                                          example: 8
                                          minimum: 1
                                        quarter:
                                          type: number
                                          example: 3
                                          minimum: 1
                                        day:
                                          type: number
                                          example: 31
                                          minimum: 1
                                        date:
                                          type: string
                                          example: "2020-08-31T00:00:00.000Z"
                                          minimum: 1
                                      required:
                                        - year
                                        - month
                                        - quarter
                                        - day
                                        - date
                                    value:
                                      type: number
                                      minimum: 0
                                      example: 1000
                                  required:
                                    - period
                                    - value
                            required:
                              - currentValue
                              - percentageChange
                              - timePeriodData
                          grossMargin:
                            type: object
                            readOnly: true
                            properties:
                              currentValue:
                                type: number
                                description: Return on Assets - EBITDA calculation (a decimal value)
                                example: 10
                                format: double
                              percentageChange:
                                type: number
                                description: EBITDA (a dollar value)
                                example: 10
                                format: double
                              timePeriodData:
                                type: array
                                readOnly: true
                                maxItems: 12
                                items:
                                  type: object
                                  readOnly: true
                                  properties:
                                    period:
                                      type: object
                                      readOnly: true
                                      properties:
                                        year:
                                          type: number
                                          example: 2020
                                        month:
                                          type: number
                                          example: 8
                                          minimum: 1
                                        quarter:
                                          type: number
                                          example: 3
                                          minimum: 1
                                        day:
                                          type: number
                                          example: 31
                                          minimum: 1
                                        date:
                                          type: string
                                          example: "2020-08-31T00:00:00.000Z"
                                          minimum: 1
                                      required:
                                        - year
                                        - month
                                        - quarter
                                        - day
                                        - date
                                    value:
                                      type: number
                                      minimum: 0
                                      example: 1000
                                  required:
                                    - period
                                    - value
                            required:
                              - currentValue
                              - percentageChange
                              - timePeriodData
                          netProfitMargin:
                            type: object
                            readOnly: true
                            properties:
                              currentValue:
                                type: number
                                description: Return on Assets - EBITDA calculation (a decimal value)
                                example: 10
                                format: double
                              percentageChange:
                                type: number
                                description: EBITDA (a dollar value)
                                example: 10
                                format: double
                              timePeriodData:
                                type: array
                                readOnly: true
                                maxItems: 12
                                items:
                                  type: object
                                  readOnly: true
                                  properties:
                                    period:
                                      type: object
                                      readOnly: true
                                      properties:
                                        year:
                                          type: number
                                          example: 2020
                                        month:
                                          type: number
                                          example: 8
                                          minimum: 1
                                        quarter:
                                          type: number
                                          example: 3
                                          minimum: 1
                                        day:
                                          type: number
                                          example: 31
                                          minimum: 1
                                        date:
                                          type: string
                                          example: "2020-08-31T00:00:00.000Z"
                                          minimum: 1
                                      required:
                                        - year
                                        - month
                                        - quarter
                                        - day
                                        - date
                                    value:
                                      type: number
                                      minimum: 0
                                      example: 1000
                                  required:
                                    - period
                                    - value
                            required:
                              - currentValue
                              - percentageChange
                              - timePeriodData
                          operatingMargin:
                            type: object
                            readOnly: true
                            properties:
                              currentValue:
                                type: number
                                description: Return on Assets - EBITDA calculation (a decimal value)
                                example: 10
                                format: double
                              percentageChange:
                                type: number
                                description: EBITDA (a dollar value)
                                example: 10
                                format: double
                              timePeriodData:
                                type: array
                                readOnly: true
                                maxItems: 12
                                items:
                                  type: object
                                  readOnly: true
                                  properties:
                                    period:
                                      type: object
                                      readOnly: true
                                      properties:
                                        year:
                                          type: number
                                          example: 2020
                                        month:
                                          type: number
                                          example: 8
                                          minimum: 1
                                        quarter:
                                          type: number
                                          example: 3
                                          minimum: 1
                                        day:
                                          type: number
                                          example: 31
                                          minimum: 1
                                        date:
                                          type: string
                                          example: "2020-08-31T00:00:00.000Z"
                                          minimum: 1
                                      required:
                                        - year
                                        - month
                                        - quarter
                                        - day
                                        - date
                                    value:
                                      type: number
                                      minimum: 0
                                      example: 1000
                                  required:
                                    - period
                                    - value
                            required:
                              - currentValue
                              - percentageChange
                              - timePeriodData
                          returnOnEquity:
                            type: object
                            readOnly: true
                            properties:
                              currentValue:
                                type: number
                                description: Return on Assets - EBITDA calculation (a decimal value)
                                example: 10
                                format: double
                              percentageChange:
                                type: number
                                description: EBITDA (a dollar value)
                                example: 10
                                format: double
                              timePeriodData:
                                type: array
                                readOnly: true
                                maxItems: 12
                                items:
                                  type: object
                                  readOnly: true
                                  properties:
                                    period:
                                      type: object
                                      readOnly: true
                                      properties:
                                        year:
                                          type: number
                                          example: 2020
                                        month:
                                          type: number
                                          example: 8
                                          minimum: 1
                                        quarter:
                                          type: number
                                          example: 3
                                          minimum: 1
                                        day:
                                          type: number
                                          example: 31
                                          minimum: 1
                                        date:
                                          type: string
                                          example: "2020-08-31T00:00:00.000Z"
                                          minimum: 1
                                      required:
                                        - year
                                        - month
                                        - quarter
                                        - day
                                        - date
                                    value:
                                      type: number
                                      minimum: 0
                                      example: 1000
                                  required:
                                    - period
                                    - value
                            required:
                              - currentValue
                              - percentageChange
                              - timePeriodData
                          revenueConcentrationIndex:
                            type: object
                            readOnly: true
                            properties:
                              currentValue:
                                type: number
                                description: Return on Assets - EBITDA calculation (a decimal value)
                                example: 10
                                format: double
                              percentageChange:
                                type: number
                                description: EBITDA (a dollar value)
                                example: 10
                                format: double
                              timePeriodData:
                                type: array
                                readOnly: true
                                maxItems: 12
                                items:
                                  type: object
                                  readOnly: true
                                  properties:
                                    period:
                                      type: object
                                      readOnly: true
                                      properties:
                                        year:
                                          type: number
                                          example: 2020
                                        month:
                                          type: number
                                          example: 8
                                          minimum: 1
                                        quarter:
                                          type: number
                                          example: 3
                                          minimum: 1
                                        day:
                                          type: number
                                          example: 31
                                          minimum: 1
                                        date:
                                          type: string
                                          example: "2020-08-31T00:00:00.000Z"
                                          minimum: 1
                                      required:
                                        - year
                                        - month
                                        - quarter
                                        - day
                                        - date
                                    value:
                                      type: number
                                      minimum: 0
                                      example: 1000
                                  required:
                                    - period
                                    - value
                            required:
                              - currentValue
                              - percentageChange
                              - timePeriodData
                readOnly: true
                required:
                  - meta
                  - data
        "202":
          description: Data in pending state
        "204":
          description: No data available
        "400":
          description: Bad Request Error - Thrown if fields sent via query does not follow specifications
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400ResponseDto'
        "401":
          description: Unauthorized - Not logged in or log in expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401ResponseDto'
        "403":
          description: Forbidden - Not enough permission
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error403ResponseDto'
        "500":
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500ResponseDto'
      tags:
        - Visualizations
      security:
        - bearer: []
  /v2/visualizations/railzScore:
    get:
      operationId: reportRailzScore
      summary: List Credit Score report
      description: |-
        **Supported for:**

        `quickbooks` `xero` `freshbooks` `quickbooksDesktop` `dynamicsBusinessCentral` `zohoBooks`
      parameters:
        - name: connectionUuid
          required: true
          in: query
          example: CON-9a6d0e4c-0420-4ecf-9c73-d7e1c2f5843e
          description: Unique connection identifier.
          schema:
            type: string
        - name: endDate
          required: false
          in: query
          example: "2021-07-31"
          description: 'The end date of the report frequency in the format: yyyy-MM-dd.'
          schema:
            type: string
      responses:
        "200":
          description: Successfully returned credit score
          content:
            application/json:
              schema:
                type: object
                properties:
                  meta:
                    type: object
                    readOnly: true
                    properties:
                      reportId:
                        type: array
                        readOnly: true
                        example:
                          - 5fad8a342a88364234392fb5
                        items:
                          type: string
                      serviceName:
                        type: string
                        enum:
                          - freshbooks
                          - quickbooks
                          - quickbooksDesktop
                          - xero
                          - oracleNetsuite
                          - sageBusinessCloud
                          - sageIntacct
                          - dynamicsBusinessCentral
                          - wave
                          - zohoBooks
                        readOnly: true
                        example: xero
                      businessName:
                        type: string
                        readOnly: true
                        example: Railz
                      endDate:
                        type: string
                        readOnly: true
                        example: "2020-12-25T01:02:03Z"
                        description: if report frequency is monthly, end date is maximum of 12 months from start date, if quaterly, its a maximum of 3 years from start date, if yearly, its maximum of 12 years from start date
                      startDate:
                        type: string
                        readOnly: true
                        example: "2020-11-25T01:02:03Z"
                    required:
                      - reportId
                      - serviceName
                      - businessName
                      - startDate
                      - endDate
                      - reportFrequency
                      - currency
                  data:
                    type: object
                    readOnly: true
                    properties:
                      score:
                        type: integer
                        description: A standard point in time credit score based on a 1-year probability of default in the range of 300-850.
                        example: 800
                        minimum: 300
                        maximum: 850
                      rating:
                        type: string
                        description: Railz credit rating
                        example: Excellent
                      lastUpdated:
                        type: string
                        description: Last synchronization date
                        example: "2020-12-31"
                required:
                  - meta
                  - data
        "202":
          description: Data in pending state
        "204":
          description: No data available
        "400":
          description: Bad Request Error - Thrown if fields sent via query does not follow specifications
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400ResponseDto'
        "401":
          description: Unauthorized - Not logged in or log in expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401ResponseDto'
        "403":
          description: Forbidden - Not enough permission
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error403ResponseDto'
        "500":
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500ResponseDto'
      tags:
        - Visualizations
      security:
        - bearer: []
  /v2/visualizations/credits:
    get:
      operationId: credits
      summary: List Credit report
      description: |-
        **Supported for:**

        `quickbooks` `xero` `freshbooks` `quickbooksDesktop` `dynamicsBusinessCentral` `zohoBooks`
      parameters:
        - name: connectionUuid
          required: true
          in: query
          schema:
            type: string
        - name: offset
          required: false
          in: query
          description: The offset is the position in the dataset of a particular record.
          schema:
            format: integer
            type: number
        - name: limit
          required: false
          in: query
          description: 'This is the size of the results set you would like (default: 100).'
          example: 100
          schema:
            format: integer
            type: number
        - name: orderBy
          required: false
          in: query
          schema:
            type: string
        - name: startDate
          required: false
          in: query
          schema:
            type: string
        - name: endDate
          required: false
          in: query
          schema:
            type: string
        - name: reconstruct
          required: false
          in: query
          description: Railz reconstructed Credit Score.
          schema:
            default: "false"
            enum:
              - "true"
              - "false"
            type: string
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreditsResponseDto'
        "202":
          description: Data in pending state
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreditsResponseDto'
        "204":
          description: No data available
        "400":
          description: Bad Request Error - Thrown if fields sent via query does not follow specifications
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400ResponseDto'
        "401":
          description: Unauthorized - Not logged in or log in expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401ResponseDto'
        "403":
          description: Forbidden - Not enough permission
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error403ResponseDto'
        "500":
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500ResponseDto'
      tags:
        - Visualizations
      security:
        - bearer: []
  /v2/visualizations/bankAccounts:
    get:
      operationId: bankAccountsVisualizations
      summary: List Bank Account
      description: |-
        **Supported for:**

        `plaid`
      parameters:
        - name: connectionUuid
          required: true
          in: query
          description: Unique connection identifier.
          example: CON-396d5daa-26b2-4979-89b6-cafb2c298155
          schema:
            type: string
        - name: offset
          required: false
          in: query
          schema:
            format: integer
            type: number
        - name: limit
          required: false
          in: query
          example: 100
          schema:
            format: integer
            type: number
        - name: orderBy
          required: false
          in: query
          schema:
            type: string
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetBankAccountResponseV2Dto'
        "202":
          description: Data in pending state
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetBankAccountResponseV2Dto'
        "204":
          description: No data available
        "400":
          description: Bad Request Error - Thrown if fields sent via query does not follow specifications
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400ResponseDto'
        "401":
          description: Unauthorized - Not logged in or log in expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401ResponseDto'
        "403":
          description: Forbidden - Not enough permission
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error403ResponseDto'
        "500":
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500ResponseDto'
      tags:
        - Visualizations
      security:
        - bearer: []
  /v2/visualizations/bankReconciliation:
    get:
      operationId: bankReconciliationVisualizations
      summary: List Banking Reconciliations
      description: |-
        **Supported for:**

        `quickbooks` `xero` `freshbooks` `quickbooksDesktop` `sageIntacct` `sageBusinessCloud` `oracleNetsuite` `dynamicsBusinessCentral`
      parameters:
        - name: connectionUuid
          required: true
          in: query
          description: Unique connection identifier.
          example: CON-396d5daa-26b2-4979-89b6-cafb2c298155
          schema:
            type: string
        - name: startDate
          required: false
          in: query
          description: 'The start date of the Transaction report frequency in the format: YYYY-MM-DD.'
          schema:
            type: string
        - name: endDate
          required: false
          in: query
          description: 'The end date of the Transaction report frequency in the format: YYYY-MM-DD.'
          schema:
            type: string
        - name: offset
          required: false
          in: query
          description: The offset is the position in the dataset of a particular record.
          schema:
            format: integer
            type: number
        - name: limit
          required: false
          in: query
          description: 'This is the size of the results set you would like (default: 100).'
          example: 100
          schema:
            format: integer
            type: number
        - name: orderBy
          required: false
          in: query
          schema:
            type: string
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BankReconciliationResponseV2Dto'
        "202":
          description: Data in pending state
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BankReconciliationResponseV2Dto'
        "204":
          description: No data available
        "400":
          description: Bad Request Error - Thrown if fields sent via query does not follow specifications
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400ResponseDto'
        "401":
          description: Unauthorized - Not logged in or log in expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401ResponseDto'
        "403":
          description: Forbidden - Not enough permission
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error403ResponseDto'
        "500":
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500ResponseDto'
      tags:
        - Visualizations
      security:
        - bearer: []
  /v2/visualizations/businessValuations:
    get:
      operationId: businessValuationVisualizations
      summary: List Business Valuations
      description: |-
        **Supported for:**

        `quickbooks` `xero` `freshbooks` `quickbooksDesktop` `dynamicsBusinessCentral` `zohoBooks`
      parameters:
        - name: connectionUuid
          required: true
          in: query
          description: Unique connection identifier.
          example: CON-396d5daa-26b2-4979-89b6-cafb2c298155
          schema:
            type: string
        - name: startDate
          required: false
          in: query
          schema:
            type: string
        - name: endDate
          required: false
          in: query
          schema:
            type: string
        - name: reconstruct
          required: false
          in: query
          description: Railz reconstructed Business Valuation
          schema:
            default: "false"
            enum:
              - "true"
              - "false"
            type: string
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BusinessValuationResponseV2Dto'
        "202":
          description: Data in pending state
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BusinessValuationResponseV2Dto'
        "204":
          description: No data available
        "400":
          description: Bad Request Error - Thrown if fields sent via query does not follow specifications
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400ResponseDto'
        "401":
          description: Unauthorized - Not logged in or log in expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401ResponseDto'
        "403":
          description: Forbidden - Not enough permission
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error403ResponseDto'
        "500":
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500ResponseDto'
      tags:
        - Visualizations
      security:
        - bearer: []
info:
  title: FIS® Accounting Data as a Service™ API
  description: '[What''s changed in our API](https://docs.railz.ai/changelog)'
  version: v2
  contact: {}
tags: []
servers:
  - url: https://api.railz.ai
    description: Main (production) API server
components:
  securitySchemes:
    bearer:
      scheme: bearer
      bearerFormat: JWT
      type: http
  schemas:
    Error400Dto:
      type: object
      properties:
        statusCode:
          type: number
          readOnly: true
          example: 400
        message:
          readOnly: true
          example:
            - businessName cannot be null
          type: array
          items:
            type: string
        error:
          type: string
          readOnly: true
          example: Bad Request
      required:
        - statusCode
        - message
        - error
    Error400ResponseDto:
      type: object
      properties:
        error:
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/Error400Dto'
        payload:
          type: object
          readOnly: true
      required:
        - error
        - payload
    Error401Dto:
      type: object
      properties:
        statusCode:
          type: number
          readOnly: true
          example: 401
        message:
          readOnly: true
          example:
            - Unauthorized
          type: array
          items:
            type: string
        error:
          type: string
          readOnly: true
          example: Unauthorized
      required:
        - statusCode
        - message
        - error
    Error401ResponseDto:
      type: object
      properties:
        error:
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/Error401Dto'
        payload:
          type: object
          readOnly: true
          example: {}
      required:
        - error
        - payload
    Error403Dto:
      type: object
      properties:
        statusCode:
          type: number
          readOnly: true
          example: 403
        message:
          readOnly: true
          example:
            - Forbidden resource
          type: array
          items:
            type: string
        error:
          type: string
          readOnly: true
          example: Forbidden
      required:
        - statusCode
        - message
        - error
    Error403ResponseDto:
      type: object
      properties:
        error:
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/Error403Dto'
        payload:
          type: object
          readOnly: true
          example: {}
      required:
        - error
        - payload
    Error500Dto:
      type: object
      properties:
        error:
          type: string
          readOnly: true
          example: Internal Server Error
        message:
          readOnly: true
          example:
            - INTERNAL_ERROR
          type: array
          items:
            type: string
        statusCode:
          type: number
          readOnly: true
          example: 500
      required:
        - error
        - message
        - statusCode
    Error500ResponseDto:
      type: object
      properties:
        error:
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/Error500Dto'
        payload:
          type: object
          readOnly: true
      required:
        - error
        - payload
    MetaDataCount:
      type: object
      properties:
        count:
          type: number
          readOnly: true
          example: 1
          format: integer
      required:
        - count
    ConnectionsInstitutionData:
      type: object
      properties:
        name:
          type: string
          readOnly: true
          example: Citizens bank
        logo:
          type: string
          readOnly: true
          example: https://serverlogo.url
      required:
        - name
        - logo
    serviceAccountRefType:
      type: object
      properties:
        id:
          type: string
          example: "12345"
        entityRef:
          type: object
          example:
            id: "100"
          properties:
            id:
              type: string
              example: "100"
          nullable: true
    ConnectionsResponseData:
      type: object
      properties:
        connectionUuid:
          type: string
          readOnly: true
          example: CON-e66400c1-4d2f-4683-9bea-275799943695
        firstRecordDate:
          type: string
          example: "2020-12-25T01:02:03Z"
          format: date-time
          deprecated: true
        serviceName:
          type: string
          readOnly: true
          example: xero
          enum:
            - quickbooks
            - xero
            - freshbooks
            - quickbooksDesktop
            - sageIntacct
            - sageBusinessCloud
            - oracleNetsuite
            - dynamicsBusinessCentral
            - wave
            - zohoBooks
        description:
          type: string
          example: TD Bank
        status:
          type: string
          readOnly: true
          example: active
        createdAt:
          type: string
          readOnly: true
          example: "2020-12-25T01:02:03Z"
          format: date-time
        updatedAt:
          type: string
          readOnly: true
          example: "2020-12-25T01:02:03Z"
          format: date-time
        disconnectReason:
          type: string
          example: disconnectedByCustomer
        syncTime:
          type: number
          example: "1.3092"
        institution:
          example:
            name: Citizens bank
            logo: https://serverlogo.url
          allOf:
            - $ref: '#/components/schemas/ConnectionsInstitutionData'
        isMockData:
          type: boolean
          example: true
        serviceAccountRef:
          example:
            id: "12345"
            entityRef:
              id: "100"
          allOf:
            - $ref: '#/components/schemas/serviceAccountRefType'
        businessUuid:
          type: string
          readOnly: true
          example: BIZ-26bc4510-8c6f-4688-996d-e87acf3e0b3f
        businessName:
          type: string
          readOnly: true
          example: Railz
        connectionId:
          type: string
          readOnly: true
          example: CON-e66400c1-4d2f-4683-9bea-275799943695
      required:
        - connectionUuid
        - serviceName
        - status
        - createdAt
        - updatedAt
        - businessUuid
        - businessName
        - connectionId
    ConnectionsResponseDto:
      type: object
      properties:
        meta:
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/MetaDataCount'
        data:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/ConnectionsResponseData'
      required:
        - meta
        - data
    DisableConnectionDto:
      type: object
      properties:
        connectionId:
          type: string
          example: CON-e66400c1-4d2f-4683-9bea-275799943695
      required:
        - connectionId
    DisconnectResponseDto:
      type: object
      properties:
        connectionId:
          type: string
          readOnly: true
          example: CON-e66400c1-4d2f-4683-9bea-275799943695
        businessName:
          type: string
          readOnly: true
          example: Railz
        serviceName:
          type: string
          readOnly: true
          example: xero
          enum:
            - quickbooks
            - xero
            - freshbooks
            - quickbooksDesktop
            - sageIntacct
            - sageBusinessCloud
            - oracleNetsuite
            - dynamicsBusinessCentral
            - wave
            - zohoBooks
        status:
          type: string
          readOnly: true
          example: disconnected
        createdAt:
          format: date-time
          type: string
          readOnly: true
          example: "2020-12-25T01:02:03Z"
        updatedAt:
          format: date-time
          type: string
          readOnly: true
          example: "2020-12-25T01:02:03Z"
      required:
        - connectionId
        - businessName
        - serviceName
        - status
        - createdAt
        - updatedAt
    ConnectionsResponseDataV2:
      type: object
      properties:
        connectionUuid:
          type: string
          readOnly: true
          example: CON-e66400c1-4d2f-4683-9bea-275799943695
        firstRecordDate:
          type: string
          example: "2020-12-25T01:02:03Z"
          format: date-time
          deprecated: true
        serviceName:
          type: string
          readOnly: true
          example: xero
          enum:
            - quickbooks
            - xero
            - freshbooks
            - quickbooksDesktop
            - sageIntacct
            - sageBusinessCloud
            - oracleNetsuite
            - dynamicsBusinessCentral
            - wave
            - zohoBooks
        description:
          type: string
          example: TD Bank
        status:
          type: string
          readOnly: true
          example: active
        createdAt:
          type: string
          readOnly: true
          example: "2020-12-25T01:02:03Z"
          format: date-time
        updatedAt:
          type: string
          readOnly: true
          example: "2020-12-25T01:02:03Z"
          format: date-time
        disconnectReason:
          type: string
          example: disconnectedByCustomer
        syncTime:
          type: number
          example: "1.3092"
        institution:
          example:
            name: Citizens bank
            logo: https://serverlogo.url
          allOf:
            - $ref: '#/components/schemas/ConnectionsInstitutionData'
        isMockData:
          type: boolean
          example: true
        serviceAccountRef:
          example:
            id: "12345"
            entityRef:
              id: "100"
          allOf:
            - $ref: '#/components/schemas/serviceAccountRefType'
        businessUuid:
          type: string
          readOnly: true
          example: BIZ-26bc4510-8c6f-4688-996d-e87acf3e0b3f
        businessName:
          type: string
          readOnly: true
          example: Railz
      required:
        - connectionUuid
        - serviceName
        - status
        - createdAt
        - updatedAt
        - businessUuid
        - businessName
    ConnectionsResponseDtoV2:
      type: object
      properties:
        meta:
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/MetaDataCount'
        data:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/ConnectionsResponseDataV2'
      required:
        - meta
        - data
    PushStatusMetaData:
      type: object
      properties:
        count:
          type: number
          readOnly: true
          example: 1
          format: integer
        businessName:
          type: string
          readOnly: true
          example: Railz
      required:
        - count
        - businessName
    Error:
      type: object
      properties:
        field:
          type: string
          example: customerName
        message:
          type: string
          example: Must have a length between 1 and 500 characters.
    Validation:
      type: object
      properties:
        errors:
          type: array
          items:
            $ref: '#/components/schemas/Error'
    ObjectId:
      type: object
      properties: {}
    PushStatusDataV1:
      type: object
      properties:
        serviceName:
          type: string
          readOnly: true
          example: quickbooks
          enum:
            - quickbooks
            - xero
            - freshbooks
            - quickbooksDesktop
            - sageIntacct
            - sageBusinessCloud
            - oracleNetsuite
            - dynamicsBusinessCentral
            - wave
            - zohoBooks
        dataType:
          type: string
          readOnly: true
          example: balanceSheet
        requestedOn:
          format: date-time
          type: string
          readOnly: true
          example: "2021-03-17T07:58:39.781Z"
        completedOn:
          format: date-time
          type: string
          readOnly: true
          example: "2021-03-17T07:58:39.781Z"
        status:
          type: string
          readOnly: true
          example: success
          enum:
            - success
            - failed
            - pending
        responseCode:
          type: number
          readOnly: true
          example: 200
          format: integer
        validation:
          $ref: '#/components/schemas/Validation'
        pushCommunicationId:
          type: string
          readOnly: true
          example: 60473b57f0cdd1683ca71f60
        batchId:
          example: 63bf973a0f08e292519d4f5d
          allOf:
            - $ref: '#/components/schemas/ObjectId'
        sourceObjectId:
          type: string
          example: "144"
        sourceObjectIds:
          example:
            - "144"
            - "154"
          type: array
          items:
            type: string
      required:
        - serviceName
        - dataType
        - requestedOn
        - completedOn
        - status
        - responseCode
        - pushCommunicationId
    PushStatusResponseDto:
      type: object
      properties:
        meta:
          $ref: '#/components/schemas/PushStatusMetaData'
        data:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/PushStatusDataV1'
      required:
        - meta
        - data
    DataSyncMeta:
      type: object
      properties:
        serviceName:
          type: string
          readOnly: true
          example: xero
          enum:
            - quickbooks
            - xero
            - freshbooks
            - quickbooksDesktop
            - sageIntacct
            - sageBusinessCloud
            - oracleNetsuite
            - dynamicsBusinessCentral
            - wave
            - zohoBooks
        businessName:
          type: string
          readOnly: true
          example: Demo Business
      required:
        - serviceName
        - businessName
    Report:
      type: object
      properties:
        startDate:
          type: string
          example: "2021-03-01T00:00:00Z"
        endDate:
          type: string
          example: "2021-03-31T00:00:00Z"
        lastSuccessfulSync:
          type: string
          example: "2021-04-01T00:31:00Z"
        reportFrequency:
          type: string
          example: month
        currentStatus:
          type: string
          example: success
          enum:
            - success
            - failed
            - pending
            - empty
        latestReportId:
          type: string
          example: 6070149d1d685e6cf0583e36
        latestSuccessfulReportId:
          type: string
          example: 601077f5914dac670966f660
        accountingMethod:
          type: string
          example: accrual
        reconstructed:
          type: boolean
          example: true
    DataType:
      type: object
      properties:
        dataType:
          type: string
          readOnly: true
          example: BalanceSheet
        lastSyncDate:
          type: string
          example: "2021-04-01T00:31:00Z"
        lastUpdatedDate:
          type: string
          example: "2021-04-01T00:31:00Z"
        reports:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/Report'
      required:
        - dataType
        - reports
    DataSyncData:
      type: object
      properties:
        connectionId:
          type: string
          readOnly: true
          example: CON-94652dff-06ab-4b97-bd1b-f91adf7048c3
        dataTypes:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/DataType'
        syncTime:
          type: number
          example: "1.234"
        percentageCompleted:
          type: number
          example: "75.89"
      required:
        - connectionId
        - dataTypes
    DataStatusResponseDto:
      type: object
      properties:
        meta:
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/DataSyncMeta'
        data:
          type: array
          items:
            $ref: '#/components/schemas/DataSyncData'
      required:
        - meta
    DataSyncDto:
      type: object
      properties:
        businessName:
          type: string
          example: Railz
        serviceName:
          type: string
          enum:
            - freshbooks
            - quickbooks
            - quickbooksDesktop
            - xero
            - oracleNetsuite
            - sageBusinessCloud
            - sageIntacct
            - dynamicsBusinessCentral
            - wave
            - shopify
            - square
            - plaid
            - zohoBooks
        dataType:
          type: string
          enum:
            - accountingTransactions
            - accounts
            - agedPayable
            - agedReceivable
            - attachments
            - balanceSheets
            - bankingReconciliation
            - bankTransactions
            - bankAccounts
            - bankTransfers
            - billCreditNotes
            - billPayments
            - bills
            - businessInfo
            - businessValuations
            - cashflowStatements
            - creditScore
            - customers
            - deposits
            - estimates
            - financialBenchmarking
            - financialForecasts
            - financialRatios
            - fraudRiskMetrics
            - incomeStatements
            - inventory
            - invoiceCreditNotes
            - invoicePayments
            - invoices
            - journalEntries
            - journals
            - probabilityOfDefault
            - purchaseOrders
            - refunds
            - taxBenchmarking
            - taxRates
            - taxAuthority
            - trackingCategories
            - trialBalances
            - vendors
            - paymentMethods
            - portfolioMetrics
            - expenses
            - contacts
            - vendorBankAccounts
            - customerBankAccounts
            - billPaymentRequests
            - transactions
            - products
            - orders
            - disputes
            - bankAccounts
            - bankTransactions
            - bankAssets
        fullSync:
          type: boolean
          default: false
      required:
        - businessName
        - serviceName
        - dataType
    DataSyncResponseDto:
      type: object
      properties:
        connectionId:
          type: string
          readOnly: true
          example: CON-94652dff-06ab-4b97-bd1b-f91adf7048c3
        businessName:
          type: string
          readOnly: true
          example: Railz
        serviceName:
          type: string
          readOnly: true
          example: quickbooks
          enum:
            - quickbooks
            - xero
            - freshbooks
            - quickbooksDesktop
            - sageIntacct
            - sageBusinessCloud
            - oracleNetsuite
            - dynamicsBusinessCentral
            - wave
            - zohoBooks
        dataType:
          type: string
          readOnly: true
          example: balanceSheet
        requestedOn:
          format: date-time
          type: string
          readOnly: true
          example: "2021-03-18T08:16:51.233Z"
      required:
        - connectionId
        - businessName
        - serviceName
        - dataType
        - requestedOn
    Error400DtoV2:
      type: object
      properties:
        statusCode:
          type: number
          readOnly: true
          example: 400
        message:
          readOnly: true
          example:
            - connectionUuid should not be empty
          type: array
          items:
            type: string
        error:
          type: string
          readOnly: true
          example: Bad Request
      required:
        - statusCode
        - message
        - error
    Error400ResponseDtoV2:
      type: object
      properties:
        error:
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/Error400DtoV2'
        payload:
          type: object
          readOnly: true
      required:
        - error
        - payload
    PushStatusMetaDataV2:
      type: object
      properties:
        connectionUuid:
          type: string
          readOnly: true
          example: CON-396d5daa-26b2-4979-89b6-cafb2c298155
        businessName:
          type: string
          readOnly: true
          example: Railz
        serviceName:
          type: string
          readOnly: true
          example: xero
          enum:
            - freshbooks
            - quickbooks
            - quickbooksDesktop
            - xero
            - oracleNetsuite
            - sageBusinessCloud
            - sageIntacct
            - dynamicsBusinessCentral
            - wave
            - zohoBooks
        count:
          type: number
          readOnly: true
          example: 1
          format: integer
      required:
        - connectionUuid
        - businessName
        - serviceName
        - count
    PushStatusDataV2:
      type: object
      properties:
        serviceName:
          type: string
          readOnly: true
          example: quickbooks
          enum:
            - quickbooks
            - xero
            - freshbooks
            - quickbooksDesktop
            - sageIntacct
            - sageBusinessCloud
            - oracleNetsuite
            - dynamicsBusinessCentral
            - wave
            - zohoBooks
        dataType:
          type: string
          readOnly: true
          example: balanceSheet
        requestedOn:
          format: date-time
          type: string
          readOnly: true
          example: "2021-03-17T07:58:39.781Z"
        completedOn:
          format: date-time
          type: string
          readOnly: true
          example: "2021-03-17T07:58:39.781Z"
        status:
          type: string
          readOnly: true
          example: success
          enum:
            - success
            - failed
            - pending
        responseCode:
          type: number
          readOnly: true
          example: 200
          format: integer
        validation:
          $ref: '#/components/schemas/Validation'
        pushCommunicationId:
          type: string
          readOnly: true
          example: 60473b57f0cdd1683ca71f60
        batchId:
          example: 63bf973a0f08e292519d4f5d
          allOf:
            - $ref: '#/components/schemas/ObjectId'
        sourceObjectIds:
          example:
            - "144"
            - "154"
          type: array
          items:
            type: string
      required:
        - serviceName
        - dataType
        - requestedOn
        - completedOn
        - status
        - responseCode
        - pushCommunicationId
    PushStatusResponseV2Dto:
      type: object
      properties:
        meta:
          $ref: '#/components/schemas/PushStatusMetaDataV2'
        data:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/PushStatusDataV2'
      required:
        - meta
        - data
    DeleteStatusMetaDataV2:
      type: object
      properties:
        connectionUuid:
          type: string
          readOnly: true
          example: CON-396d5daa-26b2-4979-89b6-cafb2c298155
        businessName:
          type: string
          readOnly: true
          example: Railz
        serviceName:
          type: string
          readOnly: true
          example: xero
          enum:
            - freshbooks
            - quickbooks
            - quickbooksDesktop
            - xero
            - oracleNetsuite
            - sageBusinessCloud
            - sageIntacct
            - dynamicsBusinessCentral
            - wave
            - zohoBooks
        count:
          type: number
          readOnly: true
          example: 1
          format: integer
      required:
        - connectionUuid
        - businessName
        - serviceName
        - count
    DeleteStatusDataV2:
      type: object
      properties:
        serviceName:
          type: string
          readOnly: true
          example: quickbooks
          enum:
            - quickbooks
            - xero
            - freshbooks
            - quickbooksDesktop
            - sageIntacct
            - sageBusinessCloud
            - oracleNetsuite
            - dynamicsBusinessCentral
            - wave
            - zohoBooks
        dataType:
          type: string
          readOnly: true
          example: balanceSheet
        requestedOn:
          format: date-time
          type: string
          readOnly: true
          example: "2021-03-17T07:58:39.781Z"
        completedOn:
          format: date-time
          type: string
          readOnly: true
          example: "2021-03-17T07:58:39.781Z"
        status:
          type: string
          readOnly: true
          example: success
          enum:
            - success
            - failed
            - pending
        responseCode:
          type: number
          readOnly: true
          example: 200
          format: integer
        validation:
          $ref: '#/components/schemas/Validation'
        deleteCommunicationId:
          type: string
      required:
        - serviceName
        - dataType
        - requestedOn
        - completedOn
        - status
        - responseCode
    DeleteStatusResponseV2Dto:
      type: object
      properties:
        meta:
          $ref: '#/components/schemas/DeleteStatusMetaDataV2'
        data:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/DeleteStatusDataV2'
      required:
        - meta
        - data
    PaginationMetaData:
      type: object
      properties:
        offset:
          type: number
          readOnly: true
        limit:
          type: number
          readOnly: true
        count:
          type: number
          readOnly: true
      required:
        - offset
        - limit
        - count
    DataSyncMetaV2:
      type: object
      properties:
        connectionUuid:
          type: string
          readOnly: true
          example: CON-396d5daa-26b2-4979-89b6-cafb2c298155
        businessName:
          type: string
          readOnly: true
          example: Railz
        serviceName:
          type: string
          readOnly: true
          example: xero
          enum:
            - freshbooks
            - quickbooks
            - quickbooksDesktop
            - xero
            - oracleNetsuite
            - sageBusinessCloud
            - sageIntacct
            - dynamicsBusinessCentral
            - wave
            - zohoBooks
        syncTime:
          type: number
          example: "1.234"
        percentageCompleted:
          type: number
          example: "75.89"
      required:
        - connectionUuid
    DataStatusResponseV2Dto:
      type: object
      properties:
        pagination:
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/PaginationMetaData'
        meta:
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/DataSyncMetaV2'
        data:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/DataType'
      required:
        - pagination
        - meta
        - data
    ConnectionMetadata:
      type: object
      properties:
        connectionUuid:
          type: string
          readOnly: true
          example: CON-396d5daa-26b2-4979-89b6-cafb2c298155
        businessName:
          type: string
          readOnly: true
          example: Railz
        serviceName:
          type: string
          readOnly: true
          example: xero
          enum:
            - freshbooks
            - quickbooks
            - quickbooksDesktop
            - xero
            - oracleNetsuite
            - sageBusinessCloud
            - sageIntacct
            - dynamicsBusinessCentral
            - wave
            - zohoBooks
      required:
        - connectionUuid
        - businessName
        - serviceName
    SyncInfo:
      type: object
      properties:
        queueTime:
          type: number
        syncTime:
          type: number
        syncType:
          type: string
        percentageCompleted:
          type: number
        status:
          type: string
          readOnly: true
          enum:
            - inProgress
            - completed
            - error
        createdAt:
          format: date-time
          type: string
          readOnly: true
          example: "2021-03-09T08:49:36.035Z"
        firstSyncDate:
          format: date-time
          type: string
          readOnly: true
          example: "2021-04-11T08:49:36.035Z"
      required:
        - status
        - createdAt
        - firstSyncDate
    SyncInfoResponseV2Dto:
      type: object
      properties:
        meta:
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/ConnectionMetadata'
        data:
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/SyncInfo'
      required:
        - meta
        - data
    DataSyncV2Dto:
      type: object
      properties:
        connectionUuid:
          type: string
          description: Unique connection identifier.
          example: CON-396d5daa-26b2-4979-89b6-cafb2c298155
        dataType:
          type: string
          enum:
            - accountingTransactions
            - accounts
            - agedPayable
            - agedReceivable
            - attachments
            - balanceSheets
            - bankingReconciliation
            - bankTransactions
            - bankAccounts
            - bankTransfers
            - billCreditNotes
            - billPayments
            - bills
            - businessInfo
            - businessValuations
            - cashflowStatements
            - creditScore
            - customers
            - deposits
            - estimates
            - financialBenchmarking
            - financialForecasts
            - financialRatios
            - fraudRiskMetrics
            - incomeStatements
            - inventory
            - invoiceCreditNotes
            - invoicePayments
            - invoices
            - journalEntries
            - journals
            - probabilityOfDefault
            - purchaseOrders
            - refunds
            - taxBenchmarking
            - taxRates
            - taxAuthority
            - trackingCategories
            - trialBalances
            - vendors
            - paymentMethods
            - portfolioMetrics
            - expenses
            - contacts
            - vendorBankAccounts
            - customerBankAccounts
            - billPaymentRequests
            - transactions
            - products
            - orders
            - disputes
            - bankAssets
        dataTypes:
          type: array
          minItems: 1
          items:
            type: string
            enum:
              - accountingTransactions
              - accounts
              - agedPayable
              - agedReceivable
              - attachments
              - balanceSheets
              - bankingReconciliation
              - bankTransactions
              - bankAccounts
              - bankTransfers
              - billCreditNotes
              - billPayments
              - bills
              - businessInfo
              - businessValuations
              - cashflowStatements
              - creditScore
              - customers
              - deposits
              - estimates
              - financialBenchmarking
              - financialForecasts
              - financialRatios
              - fraudRiskMetrics
              - incomeStatements
              - inventory
              - invoiceCreditNotes
              - invoicePayments
              - invoices
              - journalEntries
              - journals
              - probabilityOfDefault
              - purchaseOrders
              - refunds
              - taxBenchmarking
              - taxRates
              - taxAuthority
              - trackingCategories
              - trialBalances
              - vendors
              - paymentMethods
              - portfolioMetrics
              - expenses
              - contacts
              - vendorBankAccounts
              - customerBankAccounts
              - billPaymentRequests
              - transactions
              - products
              - orders
              - disputes
              - bankAssets
        fullSync:
          type: boolean
          default: false
      required:
        - connectionUuid
    DataSyncResponseV2Dto:
      type: object
      properties:
        connectionUuid:
          type: string
          readOnly: true
          example: CON-396d5daa-26b2-4979-89b6-cafb2c298155
        businessName:
          type: string
          readOnly: true
          example: Railz
        serviceName:
          type: string
          readOnly: true
          example: xero
          enum:
            - freshbooks
            - quickbooks
            - quickbooksDesktop
            - xero
            - oracleNetsuite
            - sageBusinessCloud
            - sageIntacct
            - dynamicsBusinessCentral
            - wave
            - zohoBooks
        dataType:
          type: string
          example: balanceSheet
        dataTypes:
          example:
            - balanceSheet
          type: array
          items:
            type: string
        requestedOn:
          format: date-time
          type: string
          readOnly: true
          example: "2021-03-18T08:16:51.233Z"
        requestId:
          type: string
          readOnly: true
          example: 94652dff-06ab-4b97-bd1b-f91adf7048c3
      required:
        - connectionUuid
        - businessName
        - serviceName
        - requestedOn
        - requestId
    Property:
      type: object
      properties:
        type:
          type: string
          readOnly: true
        description:
          type: string
          readOnly: true
        required:
          type: boolean
          readOnly: true
        enumValues:
          readOnly: true
          type: array
          items:
            type: string
      required:
        - type
        - description
        - required
        - enumValues
    PushOptionsData:
      type: object
      properties:
        title:
          type: string
          readOnly: true
        requestType:
          type: string
          readOnly: true
          example: accounts
          enum:
            - attachments
            - accountingTransactions
            - agedReceivable
            - agedPayable
            - billPaymentRequests
            - bankTransactions
            - bankAccounts
            - bankTransfers
            - bankingReconciliation
            - balanceSheets
            - bills
            - billCreditNotes
            - billPayments
            - businessInfo
            - businessValuations
            - cashflowStatements
            - accounts
            - creditScore
            - customers
            - deposits
            - estimates
            - fraudRiskMetrics
            - financialBenchmarking
            - portfolioMetrics
            - financialRatios
            - financialForecasts
            - incomeStatements
            - inventory
            - invoices
            - invoiceCreditNotes
            - invoicePayments
            - journalEntries
            - journals
            - purchaseOrders
            - probabilityOfDefault
            - refunds
            - taxBenchmarking
            - taxRates
            - taxAuthority
            - trackingCategories
            - trialBalances
            - vendors
            - paymentMethods
            - expenses
            - contacts
            - vendorBankAccounts
            - customerBankAccounts
        serviceName:
          type: string
          readOnly: true
          example: quickbooks
          enum:
            - freshbooks
            - oracleNetsuite
            - quickbooks
            - quickbooksDesktop
            - sageBusinessCloud
            - sageIntacct
            - xero
            - dynamicsBusinessCentral
            - wave
            - myob
            - shopify
            - square
            - plaid
            - zohoBooks
        method:
          type: string
          readOnly: true
        properties:
          $ref: '#/components/schemas/Property'
      required:
        - title
        - requestType
        - serviceName
        - method
        - properties
    PushOptionsResponseDto:
      type: object
      properties:
        data:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/PushOptionsData'
      required:
        - data
    ListReportMetaData:
      type: object
      properties:
        reportId:
          readOnly: true
          example:
            - 5fad8a342a88364234392fb5
            - 5fad8a342a88364234392fb6
          type: array
          items:
            type: string
        serviceName:
          type: string
          readOnly: true
          example: xero
          enum:
            - freshbooks
            - quickbooks
            - quickbooksDesktop
            - xero
            - oracleNetsuite
            - sageBusinessCloud
            - sageIntacct
            - dynamicsBusinessCentral
            - wave
            - zohoBooks
        businessName:
          type: string
          readOnly: true
          example: Railz
        createdAt:
          type: string
          readOnly: true
          example: "2020-11-25T01:02:03Z"
          format: date-time
        updatedAt:
          type: string
          example: "2020-11-30T01:02:03Z"
          format: date-time
          readOnly: false
      required:
        - reportId
        - serviceName
        - businessName
        - createdAt
        - updatedAt
    SubsidiaryRef:
      type: object
      properties:
        id:
          type: string
          example: "1"
        name:
          type: string
          example: Railz Financial
    AccountParentRef:
      type: object
      properties:
        id:
          type: string
          example: "4"
        name:
          type: string
          example: assets
    CurrencyRef:
      type: object
      properties:
        id:
          type: string
          example: CAD
        name:
          type: string
          example: Canadian Dollar
        symbol:
          type: string
          example: USD,CAD
      required:
        - id
    GetChartOfAccountsDataV1:
      type: object
      properties:
        id:
          type: string
          example: "1"
        nominalCode:
          type: string
          example: "200"
        name:
          type: string
          example: Bank Account
        description:
          type: string
          example: Account description.
        group:
          type: string
          example: Cash And Cash Equivalents
        subGroup:
          type: string
          example: Checking
        classification:
          type: string
          example: Asset
        fullyQualifiedName:
          type: string
          example: 'Expenses : Transportation : Car Mileage'
        depth:
          type: number
          example: 3
        currentBalance:
          type: number
          example: 0
          format: float
        subType:
          type: string
          example: Accounts Receivable
        isBankAccount:
          type: boolean
          example: true
        isSubAccount:
          type: boolean
          example: true
        isActive:
          type: boolean
          example: true
        subsidiaryRefs:
          type: array
          items:
            $ref: '#/components/schemas/SubsidiaryRef'
        parentRef:
          $ref: '#/components/schemas/AccountParentRef'
        sourceModifiedDate:
          format: date-time
          type: string
          example: "2021-03-09T10:18:29.985Z"
        type:
          type: string
          example: Accounts Receivable
        section:
          type: string
          enum:
            - Assets
            - Expenses
            - Income
            - Liabilities
            - Equity
            - Non-Posting
        subSection:
          type: string
          enum:
            - Current Assets
            - Non-Current Assets
            - Current Liabilities
            - Non-Current Liabilities
            - Equity
            - Income
            - Other Income
            - Operating Expenses
            - Other Expenses
            - Cost of Goods Sold
            - Other Assets
            - Other Liabilities
            - Expenses
            - Uncategorized Expenses
            - Uncategorized Income
            - Non-Posting
        currencyRef:
          $ref: '#/components/schemas/CurrencyRef'
      required:
        - id
        - isActive
        - type
        - section
        - subSection
    GetChartOfAccountsResponseV1Dto:
      type: object
      properties:
        pagination:
          $ref: '#/components/schemas/PaginationMetaData'
        count:
          type: number
          readOnly: true
          example: 1
          format: integer
        meta:
          $ref: '#/components/schemas/ListReportMetaData'
        data:
          type: array
          items:
            $ref: '#/components/schemas/GetChartOfAccountsDataV1'
      required:
        - pagination
        - count
        - meta
        - data
    PushConnection:
      type: object
      properties:
        businessName:
          type: string
          example: Railz
          description: Unique business name identifier.
        serviceName:
          type: string
          example: quickbooks
          description: Name of accounting platform service.
          enum:
            - freshbooks
            - quickbooks
            - quickbooksDesktop
            - xero
            - oracleNetsuite
            - sageBusinessCloud
            - sageIntacct
            - dynamicsBusinessCentral
            - wave
            - shopify
            - square
            - plaid
            - zohoBooks
      required:
        - businessName
        - serviceName
    PushChartOfAccountV1:
      type: object
      properties:
        nominalCode:
          type: string
          example: SALES001
          maxLength: 10
          minLength: 6
        name:
          type: string
          example: Consulting Income
          maxLength: 100
        description:
          type: string
          example: Sales account.
          maxLength: 100
        type:
          type: string
          enum:
            - bank
            - currentAsset
            - fixedAsset
            - inventory
            - nonCurrentAsset
            - accountReceivable
            - equity
            - expense
            - otherExpense
            - cogs
            - accountPayable
            - creditCard
            - nonCurrentLiability
            - currentLiability
            - income
            - incomeGeneral
            - otherIncome
            - unbilledReceivable
            - deferredExpense
            - deferredIncome
          example: currentAsset
        currency:
          type: string
          example: CAD
        taxRef:
          type: string
          example: "12"
        classification:
          type: string
          enum:
            - asset
            - equity
            - expense
            - liability
            - revenue
            - nonPosting
          example: asset
        subsidiaryRefs:
          example:
            - "1"
            - "2"
          type: array
          items:
            type: string
      required:
        - name
        - type
    PushChartOfAccountV1Dto:
      type: object
      properties:
        connection:
          $ref: '#/components/schemas/PushConnection'
        data:
          $ref: '#/components/schemas/PushChartOfAccountV1'
      required:
        - connection
        - data
    PushChartOfAccountV1ResponseDto:
      type: object
      properties:
        pushCommunicationId:
          type: string
          readOnly: true
          example: 60473b57f0cdd1683ca71f60
        requestedOn:
          type: string
          readOnly: true
          example: "2021-03-09T08:15:22.035Z"
          format: date-time
        status:
          type: string
          readOnly: true
          example: pending
          enum:
            - success
            - failed
            - pending
        businessName:
          type: string
          readOnly: true
          example: Railz
        serviceName:
          type: string
          readOnly: true
          example: quickbooks
          enum:
            - freshbooks
            - quickbooks
            - quickbooksDesktop
            - xero
            - oracleNetsuite
            - sageBusinessCloud
            - sageIntacct
            - dynamicsBusinessCentral
            - wave
            - zohoBooks
        data:
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/PushChartOfAccountV1'
      required:
        - pushCommunicationId
        - requestedOn
        - status
        - businessName
        - serviceName
        - data
    ListReportMetaDataV2:
      type: object
      properties:
        connectionUuid:
          type: string
          readOnly: true
          example: CON-396d5daa-26b2-4979-89b6-cafb2c298155
        businessName:
          type: string
          readOnly: true
          example: Railz
        serviceName:
          type: string
          readOnly: true
          example: xero
          enum:
            - freshbooks
            - quickbooks
            - quickbooksDesktop
            - xero
            - oracleNetsuite
            - sageBusinessCloud
            - sageIntacct
            - dynamicsBusinessCentral
            - wave
            - zohoBooks
        reportId:
          readOnly: true
          example:
            - 5fad8a342a88364234392fb5
            - 5fad8a342a88364234392fb6
          type: array
          items:
            type: string
        createdAt:
          type: string
          readOnly: true
          example: "2020-11-25T01:02:03Z"
          format: date-time
        updatedAt:
          type: string
          example: "2020-11-30T01:02:03Z"
          format: date-time
          readOnly: false
      required:
        - connectionUuid
        - businessName
        - serviceName
        - reportId
        - createdAt
        - updatedAt
    TaxRateObjectRefResponse:
      type: object
      properties:
        id:
          type: string
          example: "124"
        name:
          type: string
          example: Railz
      required:
        - id
    GetChartOfAccountsDataV2:
      type: object
      properties:
        id:
          type: string
          example: "1"
        nominalCode:
          type: string
          example: "200"
        name:
          type: string
          example: Bank Account
        description:
          type: string
          example: Account description.
        group:
          type: string
          example: Cash And Cash Equivalents
        subGroup:
          type: string
          example: Checking
        classification:
          type: string
          example: Asset
        fullyQualifiedName:
          type: string
          example: 'Expenses : Transportation : Car Mileage'
        depth:
          type: number
          example: 3
        currentBalance:
          type: number
          example: 0
          format: float
        subType:
          type: string
          example: cash&Bank
        isBankAccount:
          type: boolean
          example: true
        isSubAccount:
          type: boolean
          example: true
        isActive:
          type: boolean
          example: true
        subsidiaryRefs:
          type: array
          items:
            $ref: '#/components/schemas/SubsidiaryRef'
        parentRef:
          $ref: '#/components/schemas/AccountParentRef'
        sourceModifiedDate:
          format: date-time
          type: string
          example: "2021-03-09T10:18:29.985Z"
        accountUuid:
          type: string
          example: 6f436c63-308f-4ccd-8c56-a445c2948640
        type:
          type: string
          example: Accounts Receivable
        section:
          type: string
          example: Assets
        subSection:
          type: string
          example: Current Assets
        currency:
          type: string
          example: USD
        isPosting:
          type: boolean
          example: true
        taxRateRef:
          $ref: '#/components/schemas/TaxRateObjectRefResponse'
        bankAccountNumber:
          type: string
          example: "11200"
      required:
        - id
        - isActive
        - section
        - subSection
    GetChartOfAccountsV2ResponseDto:
      type: object
      properties:
        pagination:
          $ref: '#/components/schemas/PaginationMetaData'
        meta:
          $ref: '#/components/schemas/ListReportMetaDataV2'
        data:
          type: array
          items:
            $ref: '#/components/schemas/GetChartOfAccountsDataV2'
      required:
        - pagination
        - meta
        - data
    TaxRateRefDto:
      type: object
      properties:
        id:
          type: string
          example: "12"
      required:
        - id
    SubsidiaryRefDto:
      type: object
      properties:
        id:
          type: string
          example: "4"
      required:
        - id
    ParentRefDtoV2:
      type: object
      properties:
        id:
          type: string
          example: "32"
        name:
          type: string
          example: Parent Name
      required:
        - id
    PushChartOfAccountV2:
      type: object
      properties:
        nominalCode:
          type: string
          example: SALES001
          maxLength: 10
          minLength: 5
        name:
          type: string
          example: Consulting Income
          maxLength: 100
        description:
          type: string
          example: Sales account.
          maxLength: 100
        type:
          type: string
          enum:
            - bank
            - currentAsset
            - fixedAsset
            - inventory
            - nonCurrentAsset
            - accountReceivable
            - equity
            - expense
            - otherExpense
            - cogs
            - accountPayable
            - creditCard
            - nonCurrentLiability
            - currentLiability
            - income
            - incomeGeneral
            - otherIncome
            - unbilledReceivable
            - deferredExpense
            - deferredIncome
          example: currentAsset
        currency:
          type: string
          example: CAD
        taxRateRef:
          $ref: '#/components/schemas/TaxRateRefDto'
        bankAccountNumber:
          type: string
          example: "11200"
        subType:
          type: string
          enum:
            - cash&Bank
            - currentAsset
            - propertyPlantAndEquipment
            - longTermAsset
            - currentLiability
            - longTermLiability
            - equity
            - income
            - costOfGoodsSold
            - operatingExpense
          example: cash&Bank
        classification:
          type: string
          enum:
            - asset
            - equity
            - expense
            - liability
            - revenue
            - nonPosting
          example: asset
        subsidiaryRefs:
          type: array
          items:
            $ref: '#/components/schemas/SubsidiaryRefDto'
        parentRef:
          $ref: '#/components/schemas/ParentRefDtoV2'
        passThrough:
          type: object
          example:
            CustomField:
              - DefinitionId: "1"
                StringValue: my custom value
                Name: Field One
      required:
        - name
    PushChartOfAccountV2Dto:
      type: object
      properties:
        connectionUuid:
          type: string
          description: Unique connection identifier.
          example: CON-396d5daa-26b2-4979-89b6-cafb2c298155
        data:
          $ref: '#/components/schemas/PushChartOfAccountV2'
      required:
        - connectionUuid
        - data
    PushChartOfAccountV2ResponseDto:
      type: object
      properties:
        connectionUuid:
          type: string
          readOnly: true
          example: CON-396d5daa-26b2-4979-89b6-cafb2c298155
        businessName:
          type: string
          readOnly: true
          example: Railz
        serviceName:
          type: string
          readOnly: true
          example: xero
          enum:
            - freshbooks
            - quickbooks
            - quickbooksDesktop
            - xero
            - oracleNetsuite
            - sageBusinessCloud
            - sageIntacct
            - dynamicsBusinessCentral
            - wave
            - zohoBooks
        pushCommunicationId:
          type: string
          readOnly: true
          example: 60473b57f0cdd1683ca71f60
        requestedOn:
          type: string
          readOnly: true
          example: "2021-03-09T08:15:22.035Z"
          format: date-time
        status:
          type: string
          readOnly: true
          example: pending
          enum:
            - success
            - failed
            - pending
        data:
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/PushChartOfAccountV2'
      required:
        - connectionUuid
        - businessName
        - serviceName
        - pushCommunicationId
        - requestedOn
        - status
        - data
    BatchPushChartOfAccountV2Dto:
      type: object
      properties:
        connectionUuid:
          type: string
          description: Unique connection identifier.
          example: CON-396d5daa-26b2-4979-89b6-cafb2c298155
        batch:
          type: array
          items:
            $ref: '#/components/schemas/PushChartOfAccountV2'
      required:
        - connectionUuid
        - batch
    PushChartOfAccountIndividualResponseV2Dto:
      type: object
      properties:
        pushCommunicationId:
          type: string
          readOnly: true
          example: 60473b57f0cdd1683ca71f60
        requestedOn:
          type: string
          readOnly: true
          example: "2021-03-09T08:15:22.035Z"
          format: date-time
        status:
          type: string
          readOnly: true
          example: pending
          enum:
            - success
            - failed
            - pending
        data:
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/PushChartOfAccountV2'
      required:
        - pushCommunicationId
        - requestedOn
        - status
        - data
    BatchPushChartOfAccountV2ResponseDto:
      type: object
      properties:
        connectionUuid:
          type: string
          readOnly: true
          example: CON-396d5daa-26b2-4979-89b6-cafb2c298155
        businessName:
          type: string
          readOnly: true
          example: Railz
        serviceName:
          type: string
          readOnly: true
          example: xero
          enum:
            - freshbooks
            - quickbooks
            - quickbooksDesktop
            - xero
            - oracleNetsuite
            - sageBusinessCloud
            - sageIntacct
            - dynamicsBusinessCentral
            - wave
            - zohoBooks
        batchId:
          type: string
          readOnly: true
          example: 60473b57f0cdd1683ca71f60
        batch:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/PushChartOfAccountIndividualResponseV2Dto'
      required:
        - connectionUuid
        - businessName
        - serviceName
        - batchId
        - batch
    BatchUpdateChartOfAccount:
      type: object
      properties:
        nominalCode:
          type: string
          example: SALES001
          maxLength: 10
          minLength: 5
        name:
          type: string
          example: Consulting Income
          maxLength: 100
        description:
          type: string
          example: Sales account.
          maxLength: 100
        classification:
          type: string
          enum:
            - asset
            - equity
            - expense
            - liability
            - revenue
            - nonPosting
          example: asset
        currency:
          type: string
          example: CAD
        type:
          type: string
          enum:
            - bank
            - currentAsset
            - fixedAsset
            - inventory
            - nonCurrentAsset
            - accountReceivable
            - equity
            - expense
            - otherExpense
            - cogs
            - accountPayable
            - creditCard
            - nonCurrentLiability
            - currentLiability
            - income
            - incomeGeneral
            - otherIncome
            - unbilledReceivable
            - deferredExpense
            - deferredIncome
          example: currentAsset
        bankAccountNumber:
          type: string
          example: "11200"
        taxRateRef:
          $ref: '#/components/schemas/TaxRateRefDto'
        parentRef:
          $ref: '#/components/schemas/ParentRefDtoV2'
        subsidiaryRefs:
          type: array
          items:
            $ref: '#/components/schemas/SubsidiaryRefDto'
        passThrough:
          type: object
          example:
            CustomField:
              - DefinitionId: "1"
                StringValue: my custom value
                Name: Field One
        accountRef:
          type: string
          description: id of account to be updated
      required:
        - accountRef
    BatchUpdateChartOfAccountV2Dto:
      type: object
      properties:
        connectionUuid:
          type: string
          description: Unique connection identifier.
          example: CON-396d5daa-26b2-4979-89b6-cafb2c298155
        batch:
          type: array
          items:
            $ref: '#/components/schemas/BatchUpdateChartOfAccount'
      required:
        - connectionUuid
        - batch
    UpdateChartOfAccountIndividualResponseV2Dto:
      type: object
      properties:
        pushCommunicationId:
          type: string
          readOnly: true
          example: 60473b57f0cdd1683ca71f60
        requestedOn:
          type: string
          readOnly: true
          example: "2021-03-09T08:15:22.035Z"
          format: date-time
        status:
          type: string
          readOnly: true
          example: pending
          enum:
            - success
            - failed
            - pending
        data:
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/BatchUpdateChartOfAccount'
      required:
        - pushCommunicationId
        - requestedOn
        - status
        - data
    BatchUpdateChartOfAccountV2ResponseDto:
      type: object
      properties:
        connectionUuid:
          type: string
          readOnly: true
          example: CON-396d5daa-26b2-4979-89b6-cafb2c298155
        businessName:
          type: string
          readOnly: true
          example: Railz
        serviceName:
          type: string
          readOnly: true
          example: xero
          enum:
            - freshbooks
            - quickbooks
            - quickbooksDesktop
            - xero
            - oracleNetsuite
            - sageBusinessCloud
            - sageIntacct
            - dynamicsBusinessCentral
            - wave
            - zohoBooks
        batchId:
          type: string
          readOnly: true
          example: 60473b57f0cdd1683ca71f60
        batch:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/UpdateChartOfAccountIndividualResponseV2Dto'
      required:
        - connectionUuid
        - businessName
        - serviceName
        - batchId
        - batch
    UpdateChartOfAccountV2:
      type: object
      properties:
        nominalCode:
          type: string
          example: SALES001
          maxLength: 10
          minLength: 5
        name:
          type: string
          example: Consulting Income
          maxLength: 100
        description:
          type: string
          example: Sales account.
          maxLength: 100
        classification:
          type: string
          enum:
            - asset
            - equity
            - expense
            - liability
            - revenue
            - nonPosting
          example: asset
        currency:
          type: string
          example: CAD
        type:
          type: string
          enum:
            - bank
            - currentAsset
            - fixedAsset
            - inventory
            - nonCurrentAsset
            - accountReceivable
            - equity
            - expense
            - otherExpense
            - cogs
            - accountPayable
            - creditCard
            - nonCurrentLiability
            - currentLiability
            - income
            - incomeGeneral
            - otherIncome
            - unbilledReceivable
            - deferredExpense
            - deferredIncome
          example: currentAsset
        bankAccountNumber:
          type: string
          example: "11200"
        taxRateRef:
          $ref: '#/components/schemas/TaxRateRefDto'
        parentRef:
          $ref: '#/components/schemas/ParentRefDtoV2'
        subsidiaryRefs:
          type: array
          items:
            $ref: '#/components/schemas/SubsidiaryRefDto'
        passThrough:
          type: object
          example:
            CustomField:
              - DefinitionId: "1"
                StringValue: my custom value
                Name: Field One
    UpdateChartOfAccountV2Dto:
      type: object
      properties:
        connectionUuid:
          type: string
          description: Unique connection identifier.
          example: CON-396d5daa-26b2-4979-89b6-cafb2c298155
        data:
          $ref: '#/components/schemas/UpdateChartOfAccountV2'
      required:
        - connectionUuid
        - data
    UpdateChartOfAccountV2ResponseDto:
      type: object
      properties:
        connectionUuid:
          type: string
          readOnly: true
          example: CON-396d5daa-26b2-4979-89b6-cafb2c298155
        businessName:
          type: string
          readOnly: true
          example: Railz
        serviceName:
          type: string
          readOnly: true
          example: xero
          enum:
            - freshbooks
            - quickbooks
            - quickbooksDesktop
            - xero
            - oracleNetsuite
            - sageBusinessCloud
            - sageIntacct
            - dynamicsBusinessCentral
            - wave
            - zohoBooks
        pushCommunicationId:
          type: string
          readOnly: true
          example: 60473b57f0cdd1683ca71f60
        requestedOn:
          type: string
          readOnly: true
          example: "2021-03-09T08:15:22.035Z"
          format: date-time
        status:
          type: string
          readOnly: true
          example: pending
          enum:
            - success
            - failed
            - pending
        data:
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/UpdateChartOfAccountV2'
      required:
        - connectionUuid
        - businessName
        - serviceName
        - pushCommunicationId
        - requestedOn
        - status
        - data
    AccountingTransactionsReportMetaData:
      type: object
      properties:
        reportId:
          readOnly: true
          example:
            - 5fad8a342a88364234392fb5
            - 5fad8a342a88364234392fb6
          type: array
          items:
            type: string
        serviceName:
          type: string
          readOnly: true
          example: xero
          enum:
            - quickbooks
            - xero
            - freshbooks
            - quickbooksDesktop
            - sageIntacct
            - sageBusinessCloud
            - oracleNetsuite
            - dynamicsBusinessCentral
            - wave
            - zohoBooks
        businessName:
          type: string
          readOnly: true
          example: Railz
        startDate:
          type: string
          example: "2020-11-25T01:02:03Z"
          format: date-time
        endDate:
          type: string
          example: "2020-11-30T01:02:03Z"
          format: date-time
        createdAt:
          type: string
          example: "2020-11-25T01:02:03Z"
          format: date-time
        updatedAt:
          type: string
          example: "2020-11-30T01:02:03Z"
          format: date-time
          readOnly: false
      required:
        - reportId
        - serviceName
        - businessName
        - createdAt
        - updatedAt
    AccountingTransactionEntityRef:
      type: object
      properties:
        id:
          type: string
          example: "233"
          readOnly: false
        name:
          type: string
          example: Railz Inc.
          readOnly: false
    TrackingCategoryRef:
      type: object
      properties:
        id:
          type: string
          example: "4040"
          readOnly: false
        name:
          type: string
          readOnly: false
          example: Region
        option:
          type: string
          readOnly: false
          example: East
        optionId:
          type: string
          readOnly: false
          example: "40401"
      required:
        - id
    AccountingTransactionAccountRef:
      type: object
      properties:
        id:
          type: string
          example: "1334"
          readOnly: false
        name:
          type: string
          example: Account Receivable
          readOnly: false
        section:
          type: string
          example: Assets
          readOnly: false
          enum:
            - Assets
            - Expenses
            - Income
            - Liabilities
            - Equity
        subSection:
          type: string
          example: Current Assets
          readOnly: false
          enum:
            - Current Assets
            - Non-Current Assets
            - Current Liabilities
            - Non-Current Liabilities
            - Equity
            - Income
            - Other Income
            - Operating Expenses
            - Other Expenses
            - Cost of Goods Sold
        group:
          type: string
          example: Cash And Cash Equivalents
          readOnly: false
        subGroup:
          type: string
          example: Cash And Cash Equivalents
          readOnly: false
      required:
        - id
    AccountingTransactionCurrency:
      type: object
      properties:
        id:
          type: string
          example: CAD
          description: A three letter string representing the ISO-4217 code for the currency. For example, USD.
          readOnly: false
        name:
          type: string
          example: Canadian Dollar
          readOnly: false
        symbol:
          type: string
          example: "\tUSD,CAD"
    AccountingTransactionDataV1:
      type: object
      properties:
        postedDate:
          format: date
          type: string
          example: "2020-11-25"
          readOnly: false
        type:
          type: string
          example: invoice
          enum:
            - expense
            - invoice
            - payment
            - payroll
            - journalEntry
            - bill
            - vendorCreditNote
            - creditNote
            - billPayment
            - bankTransaction
            - transfer
            - deposit
            - refund
            - estimate
            - inventoryAdjustment
            - purchaseOrder
            - taxPayment
            - taxAdjustment
            - taxRefund
            - taxReversal
            - other
            - unknown
          readOnly: false
        isReconciled:
          type: boolean
          example: true
          readOnly: false
        currencyRate:
          type: number
          example: 1.13
          format: float
          readOnly: false
        isSplitTransaction:
          type: boolean
          example: true
          readOnly: false
        parentTransactionId:
          type: string
          example: 1043
          readOnly: false
        subTotal:
          type: number
          example: 300.5
          format: float
          readOnly: false
        taxAmount:
          type: number
          example: 10.5
          format: float
          readOnly: false
        totalAmount:
          type: number
          example: 311
          format: float
          readOnly: false
        memo:
          type: string
          example: Transaction reference
          readOnly: false
        sourceModifiedDate:
          type: string
          example: "2021-03-09T10:18:29.985Z"
          format: date
          readOnly: false
        id:
          type: string
          example: "1045"
          readOnly: false
        isPosting:
          type: boolean
          example: true
          readOnly: false
        transactionNumber:
          type: string
          example: INV-001
          readOnly: false
        entityRef:
          $ref: '#/components/schemas/AccountingTransactionEntityRef'
        trackingCategoryRef:
          deprecated: true
          allOf:
            - $ref: '#/components/schemas/TrackingCategoryRef'
        accountRef:
          $ref: '#/components/schemas/AccountingTransactionAccountRef'
        currencyRef:
          $ref: '#/components/schemas/AccountingTransactionCurrency'
      required:
        - postedDate
        - type
        - isPosting
    AccountingTransactionsResponseDto:
      type: object
      properties:
        pagination:
          $ref: '#/components/schemas/PaginationMetaData'
        meta:
          $ref: '#/components/schemas/AccountingTransactionsReportMetaData'
        data:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/AccountingTransactionDataV1'
        count:
          type: number
          readOnly: true
          example: 1
          format: integer
      required:
        - pagination
        - meta
        - data
        - count
    AccountingTransactionsReportMetaDataV2:
      type: object
      properties:
        connectionUuid:
          type: string
          readOnly: true
          example: CON-396d5daa-26b2-4979-89b6-cafb2c298155
        businessName:
          type: string
          readOnly: true
          example: Railz
        serviceName:
          type: string
          readOnly: true
          example: xero
          enum:
            - freshbooks
            - quickbooks
            - quickbooksDesktop
            - xero
            - oracleNetsuite
            - sageBusinessCloud
            - sageIntacct
            - dynamicsBusinessCentral
            - wave
            - zohoBooks
        reportId:
          readOnly: true
          example:
            - 5fad8a342a88364234392fb5
            - 5fad8a342a88364234392fb6
          type: array
          items:
            type: string
        startDate:
          type: string
          example: "2020-11-25T01:02:03Z"
          format: date-time
        endDate:
          type: string
          example: "2020-11-30T01:02:03Z"
          format: date-time
        createdAt:
          type: string
          example: "2020-11-25T01:02:03Z"
          format: date-time
        updatedAt:
          type: string
          example: "2020-11-30T01:02:03Z"
          format: date-time
          readOnly: false
      required:
        - connectionUuid
        - businessName
        - serviceName
        - reportId
        - createdAt
        - updatedAt
    AccountingTransactionEntityRefV2:
      type: object
      properties:
        id:
          type: string
          example: "233"
          readOnly: false
        name:
          type: string
          example: Railz Inc.
          readOnly: false
        type:
          type: string
          example: vendor
          enum:
            - vendor
            - customer
            - unknown
    AccountingTransactionTrackingCategoryRefV2:
      type: object
      properties:
        id:
          type: string
          example: "4040"
          readOnly: false
        name:
          type: string
          readOnly: false
          example: Region
        option:
          type: string
          readOnly: false
          example: East
        optionId:
          type: string
          readOnly: false
          example: "40401"
        type:
          type: string
          example: class
          enum:
            - class
            - department
            - location
            - unknown
    AccountingTransactionAccountRefV2:
      type: object
      properties:
        id:
          type: string
          example: "1334"
          readOnly: false
        name:
          type: string
          example: Account Receivable
          readOnly: false
      required:
        - id
    AccountingTransactionDataV2:
      type: object
      properties:
        postedDate:
          format: date
          type: string
          example: "2020-11-25"
          readOnly: false
        type:
          type: string
          example: invoice
          enum:
            - expense
            - invoice
            - payment
            - payroll
            - journalEntry
            - bill
            - vendorCreditNote
            - creditNote
            - billPayment
            - bankTransaction
            - transfer
            - deposit
            - refund
            - estimate
            - inventoryAdjustment
            - purchaseOrder
            - taxPayment
            - taxAdjustment
            - taxRefund
            - taxReversal
            - other
            - unknown
          readOnly: false
        isReconciled:
          type: boolean
          example: true
          readOnly: false
        currencyRate:
          type: number
          example: 1.13
          format: float
          readOnly: false
        isSplitTransaction:
          type: boolean
          example: true
          readOnly: false
        parentTransactionId:
          type: string
          example: 1043
          readOnly: false
        subTotal:
          type: number
          example: 300.5
          format: float
          readOnly: false
        taxAmount:
          type: number
          example: 10.5
          format: float
          readOnly: false
        totalAmount:
          type: number
          example: 311
          format: float
          readOnly: false
        memo:
          type: string
          example: Transaction reference
          readOnly: false
        sourceModifiedDate:
          type: string
          example: "2021-03-09T10:18:29.985Z"
          format: date
          readOnly: false
        id:
          type: string
          example: "1045"
          readOnly: false
        isPosting:
          type: boolean
          example: true
          readOnly: false
        sourceId:
          type: string
          example: INV-001
          readOnly: false
        entityRef:
          $ref: '#/components/schemas/AccountingTransactionEntityRefV2'
        section:
          type: string
          example: Assets
          readOnly: false
          enum:
            - Assets
            - Expenses
            - Income
            - Liabilities
            - Equity
        subSection:
          type: string
          example: Current Assets
          readOnly: false
          enum:
            - Current Assets
            - Non-Current Assets
            - Current Liabilities
            - Non-Current Liabilities
            - Equity
            - Income
            - Other Income
            - Operating Expenses
            - Other Expenses
            - Cost of Goods Sold
        group:
          type: string
          example: Cash And Cash Equivalents
          readOnly: false
        subGroup:
          type: string
          example: Cash And Cash Equivalents
          readOnly: false
        trackingCategoryRefs:
          type: array
          items:
            $ref: '#/components/schemas/AccountingTransactionTrackingCategoryRefV2'
        accountRef:
          $ref: '#/components/schemas/AccountingTransactionAccountRefV2'
        currency:
          type: string
          example: USD
      required:
        - postedDate
        - type
        - section
        - subSection
    AccountingTransactionsResponseV2Dto:
      type: object
      properties:
        pagination:
          $ref: '#/components/schemas/PaginationMetaData'
        meta:
          $ref: '#/components/schemas/AccountingTransactionsReportMetaDataV2'
        data:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/AccountingTransactionDataV2'
      required:
        - pagination
        - meta
        - data
    ApAgingMetaData:
      type: object
      properties:
        reportId:
          readOnly: true
          example:
            - 5fad8a342a88364234392fb5
          type: array
          items:
            type: string
        serviceName:
          type: string
          readOnly: true
          example: xero
          enum:
            - quickbooks
            - xero
            - freshbooks
            - quickbooksDesktop
            - sageIntacct
            - sageBusinessCloud
            - oracleNetsuite
            - dynamicsBusinessCentral
            - wave
            - zohoBooks
        businessName:
          type: string
          readOnly: true
          example: Railz
        startDate:
          type: string
          readOnly: true
          example: "2020-11-25T01:02:03Z"
          format: date-time
        endDate:
          type: string
          readOnly: true
          example: "2020-11-30T01:02:03Z"
          format: date-time
        createdAt:
          type: string
          readOnly: true
          example: "2020-11-25T01:02:03Z"
          format: date-time
        updatedAt:
          type: string
          example: "2020-11-30T01:02:03Z"
          format: date-time
          readOnly: false
        reportFrequency:
          type: string
          example: month
          readOnly: true
      required:
        - reportId
        - serviceName
        - businessName
        - startDate
        - endDate
        - createdAt
        - updatedAt
        - reportFrequency
    ApAgingVendorRef:
      type: object
      properties:
        id:
          type: string
          example: "240"
        name:
          type: string
          example: Railz
    ApArAgingCurrencyRef:
      type: object
      properties:
        id:
          type: string
          example: CAD
        name:
          type: string
          example: Canadian Dollar
        symbol:
          type: string
          example: USD,CAD
      required:
        - id
    ApAgingDataV1:
      type: object
      properties:
        vendorRef:
          $ref: '#/components/schemas/ApAgingVendorRef'
        current:
          type: number
          example: 50000
          format: float
          readOnly: false
        dpd30:
          type: number
          example: 25000
          format: float
          readOnly: false
        dpd60:
          type: number
          example: 25000
          format: float
          readOnly: false
        dpd90:
          type: number
          example: 60000
          format: float
          readOnly: false
        dpd90+:
          type: number
          example: 90000
          format: float
          readOnly: false
        total:
          type: number
          example: 200000
          format: float
          readOnly: false
        currencyRef:
          $ref: '#/components/schemas/ApArAgingCurrencyRef'
      required:
        - dpd30
        - dpd60
        - dpd90
        - total
    ApAgingReport:
      type: object
      properties:
        meta:
          $ref: '#/components/schemas/ApAgingMetaData'
        data:
          type: array
          items:
            $ref: '#/components/schemas/ApAgingDataV1'
      required:
        - meta
        - data
    ApAgingResponseDto:
      type: object
      properties:
        pagination:
          $ref: '#/components/schemas/PaginationMetaData'
        count:
          type: integer
          readOnly: true
          example: 1
        reports:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/ApAgingReport'
      required:
        - pagination
        - count
        - reports
    ArAgingMetaData:
      type: object
      properties:
        reportId:
          readOnly: true
          example:
            - 5fad8a342a88364234392fb5
          type: array
          items:
            type: string
        serviceName:
          type: string
          readOnly: true
          example: xero
          enum:
            - quickbooks
            - xero
            - freshbooks
            - quickbooksDesktop
            - sageIntacct
            - sageBusinessCloud
            - oracleNetsuite
            - dynamicsBusinessCentral
            - wave
            - zohoBooks
        businessName:
          type: string
          readOnly: true
          example: Railz
        startDate:
          type: string
          readOnly: true
          example: "2020-11-25T01:02:03Z"
          format: date-time
        endDate:
          type: string
          readOnly: true
          example: "2020-11-30T01:02:03Z"
          format: date-time
        createdAt:
          type: string
          readOnly: true
          example: "2020-11-25T01:02:03Z"
          format: date-time
        updatedAt:
          type: string
          example: "2020-11-30T01:02:03Z"
          format: date-time
          readOnly: false
        reportFrequency:
          type: string
          example: month
          readOnly: true
      required:
        - reportId
        - serviceName
        - businessName
        - startDate
        - endDate
        - createdAt
        - updatedAt
        - reportFrequency
    ArAgingCustomerRef:
      type: object
      properties:
        id:
          type: string
          example: "240"
        name:
          type: string
          example: Railz
    ArAgingDataV1:
      type: object
      properties:
        customerRef:
          $ref: '#/components/schemas/ArAgingCustomerRef'
        current:
          type: number
          example: 50000
          format: float
          readOnly: false
        dpd30:
          type: number
          example: 25000
          format: float
          readOnly: false
        dpd60:
          type: number
          example: 25000
          format: float
          readOnly: false
        dpd90:
          type: number
          example: 60000
          format: float
          readOnly: false
        dpd90+:
          type: number
          example: 90000
          format: float
          readOnly: false
        total:
          type: number
          example: 200000
          format: float
          readOnly: false
        currencyRef:
          $ref: '#/components/schemas/ApArAgingCurrencyRef'
      required:
        - customerRef
        - dpd30
        - dpd60
        - dpd90
        - total
    ArAgingReport:
      type: object
      properties:
        meta:
          $ref: '#/components/schemas/ArAgingMetaData'
        data:
          type: array
          items:
            $ref: '#/components/schemas/ArAgingDataV1'
      required:
        - meta
        - data
    ArAgingResponseDto:
      type: object
      properties:
        pagination:
          $ref: '#/components/schemas/PaginationMetaData'
        count:
          type: integer
          readOnly: true
          example: 1
        reports:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/ArAgingReport'
      required:
        - pagination
        - count
        - reports
    ApAgingMetaDataV2:
      type: object
      properties:
        connectionUuid:
          type: string
          readOnly: true
          example: CON-396d5daa-26b2-4979-89b6-cafb2c298155
        businessName:
          type: string
          readOnly: true
          example: Railz
        serviceName:
          type: string
          readOnly: true
          example: xero
          enum:
            - freshbooks
            - quickbooks
            - quickbooksDesktop
            - xero
            - oracleNetsuite
            - sageBusinessCloud
            - sageIntacct
            - dynamicsBusinessCentral
            - wave
            - zohoBooks
        reportId:
          readOnly: true
          example:
            - 5fad8a342a88364234392fb5
          type: array
          items:
            type: string
        startDate:
          type: string
          readOnly: true
          example: "2020-11-25T01:02:03Z"
          format: date-time
        endDate:
          type: string
          readOnly: true
          example: "2020-11-30T01:02:03Z"
          format: date-time
        createdAt:
          type: string
          readOnly: true
          example: "2020-11-25T01:02:03Z"
          format: date-time
        updatedAt:
          type: string
          example: "2020-11-30T01:02:03Z"
          format: date-time
          readOnly: false
        reportFrequency:
          type: string
          example: month
          readOnly: true
      required:
        - connectionUuid
        - businessName
        - serviceName
        - reportId
        - startDate
        - endDate
        - createdAt
        - updatedAt
        - reportFrequency
    ApAgingVendorRefV2:
      type: object
      properties:
        id:
          type: string
          example: "240"
        name:
          type: string
          example: Railz
      required:
        - id
        - name
    ApAgingDataV2:
      type: object
      properties:
        vendorRef:
          $ref: '#/components/schemas/ApAgingVendorRefV2'
        current:
          type: number
          example: 50000
          format: float
          readOnly: false
        dpd30:
          type: number
          example: 25000
          format: float
          readOnly: false
        dpd60:
          type: number
          example: 25000
          format: float
          readOnly: false
        dpd90:
          type: number
          example: 60000
          format: float
          readOnly: false
        dpd90+:
          type: number
          example: 90000
          format: float
          readOnly: false
        total:
          type: number
          example: 200000
          format: float
          readOnly: false
        currency:
          type: string
          example: USD
      required:
        - current
        - dpd30
        - dpd60
        - dpd90
        - dpd90+
        - total
    ApAgingReportV2:
      type: object
      properties:
        meta:
          $ref: '#/components/schemas/ApAgingMetaDataV2'
        data:
          type: array
          items:
            $ref: '#/components/schemas/ApAgingDataV2'
      required:
        - meta
        - data
    ApAgingResponseV2Dto:
      type: object
      properties:
        pagination:
          $ref: '#/components/schemas/PaginationMetaData'
        reports:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/ApAgingReportV2'
      required:
        - pagination
        - reports
    ArAgingMetaDataV2:
      type: object
      properties:
        connectionUuid:
          type: string
          readOnly: true
          example: CON-396d5daa-26b2-4979-89b6-cafb2c298155
        businessName:
          type: string
          readOnly: true
          example: Railz
        serviceName:
          type: string
          readOnly: true
          example: xero
          enum:
            - freshbooks
            - quickbooks
            - quickbooksDesktop
            - xero
            - oracleNetsuite
            - sageBusinessCloud
            - sageIntacct
            - dynamicsBusinessCentral
            - wave
            - zohoBooks
        reportId:
          readOnly: true
          example:
            - 5fad8a342a88364234392fb5
          type: array
          items:
            type: string
        startDate:
          type: string
          readOnly: true
          example: "2020-11-25T01:02:03Z"
          format: date-time
        endDate:
          type: string
          readOnly: true
          example: "2020-11-30T01:02:03Z"
          format: date-time
        createdAt:
          type: string
          readOnly: true
          example: "2020-11-25T01:02:03Z"
          format: date-time
        updatedAt:
          type: string
          example: "2020-11-30T01:02:03Z"
          format: date-time
          readOnly: false
        reportFrequency:
          type: string
          example: month
          readOnly: true
      required:
        - connectionUuid
        - businessName
        - serviceName
        - reportId
        - startDate
        - endDate
        - createdAt
        - updatedAt
        - reportFrequency
    ArAgingCustomerV2Ref:
      type: object
      properties:
        id:
          type: string
          example: "240"
        name:
          type: string
          example: Railz
      required:
        - id
        - name
    ArAgingDataV2:
      type: object
      properties:
        customerRef:
          $ref: '#/components/schemas/ArAgingCustomerV2Ref'
        current:
          type: number
          example: 50000
          format: float
          readOnly: false
        dpd30:
          type: number
          example: 25000
          format: float
          readOnly: false
        dpd60:
          type: number
          example: 25000
          format: float
          readOnly: false
        dpd90:
          type: number
          example: 60000
          format: float
          readOnly: false
        dpd90+:
          type: number
          example: 90000
          format: float
          readOnly: false
        total:
          type: number
          example: 200000
          format: float
          readOnly: false
        currency:
          type: string
          example: USD
      required:
        - current
        - dpd30
        - dpd60
        - dpd90
        - dpd90+
        - total
    ArAgingReportV2:
      type: object
      properties:
        meta:
          $ref: '#/components/schemas/ArAgingMetaDataV2'
        data:
          type: array
          items:
            $ref: '#/components/schemas/ArAgingDataV2'
      required:
        - meta
        - data
    ArAgingResponseV2Dto:
      type: object
      properties:
        pagination:
          $ref: '#/components/schemas/PaginationMetaData'
        reports:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/ArAgingReportV2'
      required:
        - pagination
        - reports
    AttachmentLink:
      type: object
      properties:
        type:
          type: string
          example: bill
          enum:
            - bill
            - invoice
            - customer
            - vendor
            - deposit
            - journalEntry
            - billPayment
            - invoicePayment
            - expense
            - inventory
            - purchaseOrder
            - invoiceCreditNote
            - billCreditNote
            - bankTransaction
            - bankTransfer
            - account
        id:
          type: string
          example: "234"
    GetAttachmentData:
      type: object
      properties:
        id:
          type: string
          example: "1"
        url:
          type: string
          example: https://api.railz.ai/Attachments/Image00394.png
          format: uri
        fileName:
          type: string
          example: image00394.png
        contentType:
          type: string
          example: image/jpeg
        uploadDate:
          type: string
          example: "2020-11-25T01:02:03Z"
        fileSize:
          type: number
          example: 10495
          format: float
        sourceModifiedDate:
          type: string
          example: "2021-03-09T08:49:36.035Z"
        link:
          $ref: '#/components/schemas/AttachmentLink'
      required:
        - id
        - url
    GetAttachmentResponseV1Dto:
      type: object
      properties:
        count:
          type: number
          readOnly: true
          example: 1
          format: integer
        data:
          type: array
          items:
            $ref: '#/components/schemas/GetAttachmentData'
      required:
        - count
        - data
    PushAttachmentConnection:
      type: object
      properties:
        businessName:
          type: string
          example: Railz
        serviceName:
          type: string
          example: quickbooks
          description: Name of accounting platform service.
          enum:
            - quickbooks
            - xero
            - freshbooks
            - sageIntacct
            - sageBusinessCloud
            - oracleNetsuite
            - dynamicsBusinessCentral
            - zohoBooks
      required:
        - businessName
        - serviceName
    PushAttachmentLink:
      type: object
      properties:
        type:
          type: string
          example: bill
          enum:
            - bill
            - invoice
            - customer
            - vendor
            - deposit
            - journalEntry
            - billPayment
            - invoicePayment
            - expense
            - inventory
            - purchaseOrder
            - invoiceCreditNote
            - billCreditNote
            - bankTransaction
            - bankTransfer
            - account
        id:
          type: string
          example: "133"
      required:
        - type
        - id
    PushAttachmentV1:
      type: object
      properties:
        link:
          $ref: '#/components/schemas/PushAttachmentLink'
      required:
        - link
    PushAttachmentV1Dto:
      type: object
      properties:
        connection:
          $ref: '#/components/schemas/PushAttachmentConnection'
        file:
          type: string
          format: binary
        data:
          $ref: '#/components/schemas/PushAttachmentV1'
      required:
        - connection
        - file
        - data
    PushAttachmentResponseV1Dto:
      type: object
      properties:
        pushCommunicationId:
          type: string
          readOnly: true
          example: 60473b57f0cdd1683ca71f60
        requestedOn:
          type: string
          readOnly: true
          example: "2021-03-09T08:15:22.035Z"
          format: date-time
        status:
          type: string
          readOnly: true
          example: pending
          enum:
            - success
            - failed
            - pending
        businessName:
          type: string
          readOnly: true
          example: Railz
        serviceName:
          type: string
          readOnly: true
          example: quickbooks
          enum:
            - freshbooks
            - quickbooks
            - quickbooksDesktop
            - xero
            - oracleNetsuite
            - sageBusinessCloud
            - sageIntacct
            - dynamicsBusinessCentral
            - wave
            - zohoBooks
        data:
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/PushAttachmentV1'
      required:
        - pushCommunicationId
        - requestedOn
        - status
        - businessName
        - serviceName
        - data
    AttachmentLinkV2:
      type: object
      properties:
        type:
          type: string
          example: bill
          enum:
            - bill
            - invoice
            - customer
            - vendor
            - deposit
            - journalEntry
            - billPayment
            - invoicePayment
            - expense
            - inventory
            - purchaseOrder
            - invoiceCreditNote
            - billCreditNote
            - bankTransaction
            - bankTransfer
            - account
        id:
          type: string
          example: "234"
      required:
        - type
        - id
    GetAttachmentV2Data:
      type: object
      properties:
        id:
          type: string
          example: "1"
        url:
          type: string
          example: https://api.railz.ai/Attachments/Image00394.png
          format: uri
        fileName:
          type: string
          example: image00394.png
        contentType:
          type: string
          example: image/jpeg
        uploadDate:
          type: string
          example: "2020-11-25T01:02:03Z"
        fileSize:
          type: number
          example: 10495
          format: float
        sourceModifiedDate:
          type: string
          example: "2021-03-09T08:49:36.035Z"
        links:
          type: array
          items:
            $ref: '#/components/schemas/AttachmentLinkV2'
      required:
        - id
        - url
    GetAttachmentV2ResponseDto:
      type: object
      properties:
        meta:
          $ref: '#/components/schemas/ListReportMetaDataV2'
        pagination:
          $ref: '#/components/schemas/PaginationMetaData'
        data:
          type: array
          items:
            $ref: '#/components/schemas/GetAttachmentV2Data'
      required:
        - meta
        - pagination
        - data
    PushAttachmentV2:
      type: object
      properties:
        passThrough:
          type: object
          example:
            CustomField:
              - DefinitionId: "1"
                StringValue: my custom value
                Name: Field One
        links:
          type: array
          items:
            $ref: '#/components/schemas/PushAttachmentLink'
    PushAttachmentV2Dto:
      type: object
      properties:
        connectionUuid:
          type: string
          description: Unique connection identifier.
          example: CON-396d5daa-26b2-4979-89b6-cafb2c298155
        file:
          type: string
          format: binary
        data:
          $ref: '#/components/schemas/PushAttachmentV2'
      required:
        - connectionUuid
        - file
    PushAttachmentV2ResponseDto:
      type: object
      properties:
        connectionUuid:
          type: string
          readOnly: true
          example: CON-396d5daa-26b2-4979-89b6-cafb2c298155
        businessName:
          type: string
          readOnly: true
          example: Railz
        serviceName:
          type: string
          readOnly: true
          example: xero
          enum:
            - freshbooks
            - quickbooks
            - quickbooksDesktop
            - xero
            - oracleNetsuite
            - sageBusinessCloud
            - sageIntacct
            - dynamicsBusinessCentral
            - wave
            - zohoBooks
        pushCommunicationId:
          type: string
          readOnly: true
          example: 60473b57f0cdd1683ca71f60
        requestedOn:
          type: string
          readOnly: true
          example: "2021-03-09T08:15:22.035Z"
          format: date-time
        status:
          type: string
          readOnly: true
          example: pending
          enum:
            - success
            - failed
            - pending
        data:
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/PushAttachmentV2'
      required:
        - connectionUuid
        - businessName
        - serviceName
        - pushCommunicationId
        - requestedOn
        - status
        - data
    BankTransfersReportMetaData:
      type: object
      properties:
        reportId:
          readOnly: true
          example:
            - 5fad8a342a88364234392fb5
            - 5fad8a342a88364234392fb6
          type: array
          items:
            type: string
        serviceName:
          type: string
          readOnly: true
          example: xero
          enum:
            - freshbooks
            - quickbooks
            - quickbooksDesktop
            - xero
            - oracleNetsuite
            - sageBusinessCloud
            - sageIntacct
            - dynamicsBusinessCentral
            - wave
            - zohoBooks
        businessName:
          type: string
          readOnly: true
          example: Railz
        startDate:
          type: string
          readOnly: true
          example: "2020-11-25T01:02:03Z"
          format: date-time
        endDate:
          type: string
          readOnly: true
          example: "2020-11-30T01:02:03Z"
          format: date-time
        createdAt:
          type: string
          readOnly: true
          example: "2020-11-25T01:02:03Z"
          format: date-time
        updatedAt:
          type: string
          example: "2020-11-30T01:02:03Z"
          format: date-time
          readOnly: false
      required:
        - reportId
        - serviceName
        - businessName
        - startDate
        - endDate
        - createdAt
        - updatedAt
    BankTransferFromAccountRef:
      type: object
      properties:
        id:
          type: string
          example: "1233455"
        name:
          type: string
          example: Business Savings Account
      required:
        - id
    BankTransferToAccountRef:
      type: object
      properties:
        id:
          type: string
          example: "327623"
        name:
          type: string
          example: Business Bank Account
      required:
        - id
    GetBankTransferDataV1:
      type: object
      properties:
        id:
          type: string
          example: "123"
        date:
          type: string
          format: date-time
          example: "2021-03-09T10:18:29.985Z"
        currencyRate:
          type: number
          example: 1.13
          format: float
        totalAmount:
          type: number
          example: 1000.5
          format: float
        fromAccountRef:
          $ref: '#/components/schemas/BankTransferFromAccountRef'
        toAccountRef:
          $ref: '#/components/schemas/BankTransferToAccountRef'
        fromBankTransactionId:
          type: string
          example: b11794bc
        toBankTransactionId:
          type: string
          example: b11794cd
        memo:
          type: string
          example: Reference to bank transfer.
        sourceModifiedDate:
          type: string
          example: "2021-03-09T10:18:29.985Z"
          format: date-time
        currencyRef:
          $ref: '#/components/schemas/CurrencyRef'
      required:
        - id
        - date
        - totalAmount
        - fromAccountRef
        - toAccountRef
        - fromBankTransactionId
        - toBankTransactionId
    GetBankTransfersResponseDto:
      type: object
      properties:
        meta:
          $ref: '#/components/schemas/BankTransfersReportMetaData'
        count:
          type: integer
          example: 1
          deprecated: true
        pagination:
          $ref: '#/components/schemas/PaginationMetaData'
        data:
          type: array
          items:
            $ref: '#/components/schemas/GetBankTransferDataV1'
      required:
        - meta
        - count
        - pagination
        - data
    PushBankTransfersConnection:
      type: object
      properties:
        businessName:
          type: string
          example: Railz
        serviceName:
          type: string
          example: xero
          enum:
            - xero
      required:
        - businessName
        - serviceName
    PushBankTransfers:
      type: object
      properties:
        currencyRate:
          type: number
          example: "1.13"
        totalAmount:
          type: number
          format: float
          example: "150.50"
        date:
          type: string
          format: date
          example: "2021-03-09"
        memo:
          type: string
          maxLength: 4000
          example: Services rendered.
        fromAccountRef:
          type: string
          example: 562555f2-8cde-4ce9-8203-0363922537a4
        toAccountRef:
          type: string
          example: 72f1dcfe-5d7d-4239-bf9d-e12469309716
        currency:
          type: string
          example: CAD
      required:
        - totalAmount
        - fromAccountRef
        - toAccountRef
    PushBankTransfersDto:
      type: object
      properties:
        connection:
          $ref: '#/components/schemas/PushBankTransfersConnection'
        data:
          $ref: '#/components/schemas/PushBankTransfers'
      required:
        - connection
        - data
    PushBankTransfersResponseDto:
      type: object
      properties:
        pushCommunicationId:
          type: string
          readOnly: true
          example: 60473b57f0cdd1683ca71f60
        requestedOn:
          type: string
          readOnly: true
          example: "2021-03-09T08:15:22.035Z"
          format: date-time
        status:
          type: string
          readOnly: true
          example: pending
          enum:
            - success
            - failed
            - pending
        businessName:
          type: string
          readOnly: true
          example: Railz
        serviceName:
          type: string
          readOnly: true
          example: xero
          enum:
            - quickbooks
            - xero
            - freshbooks
            - quickbooksDesktop
            - sageIntacct
            - sageBusinessCloud
            - oracleNetsuite
            - dynamicsBusinessCentral
            - wave
            - zohoBooks
        data:
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/PushBankTransfers'
      required:
        - pushCommunicationId
        - requestedOn
        - status
        - businessName
        - serviceName
        - data
    GetBankAccountData:
      type: object
      properties:
        institutionName:
          type: string
          example: TD Bank
        accountId:
          type: string
          example: blgvvBlXw3cq5GMPwqB6s6q4dLKB9WcVqGDGo
        currentBalance:
          type: number
          format: float
          example: 110
        availableBalance:
          type: number
          format: float
          example: 100
        limit:
          type: number
          format: float
          example: 200
        currency:
          type: string
          example: CAD
        maskedAccountNumber:
          type: string
          example: "4445"
        accountName:
          type: string
          example: Railz Checking
        officialAccountName:
          type: string
          example: Railz Gold Standard 0% Interest Checking
        accountType:
          type: string
          enum:
            - investment
            - credit
            - depository
            - loan
            - brokerage
            - other
          example: depository
        accountSubType:
          type: string
          example: checking
        sourceModifiedDate:
          type: string
          format: date-time
          example: "2021-03-09T10:18:29.985Z"
      required:
        - institutionName
        - accountId
        - currency
        - accountName
        - accountType
    BankAccountMetaData:
      type: object
      properties:
        reportId:
          readOnly: true
          example:
            - 5fad8a342a88364234392fb5
          type: array
          items:
            type: string
        serviceName:
          type: string
          readOnly: true
          example: xero
          enum:
            - quickbooks
            - xero
            - freshbooks
            - quickbooksDesktop
            - sageIntacct
            - sageBusinessCloud
            - oracleNetsuite
            - dynamicsBusinessCentral
            - wave
            - zohoBooks
        businessName:
          type: string
          readOnly: true
          example: Railz
        createdAt:
          type: string
          readOnly: true
          format: date-time
          example: "2020-12-25T01:02:03Z"
        updatedAt:
          type: string
          format: date-time
          example: "2020-12-25T01:02:03Z"
      required:
        - reportId
        - serviceName
        - businessName
        - createdAt
        - updatedAt
    GetBankAccountResponseDto:
      type: object
      properties:
        pagination:
          $ref: '#/components/schemas/PaginationMetaData'
        data:
          type: array
          items:
            $ref: '#/components/schemas/GetBankAccountData'
        meta:
          $ref: '#/components/schemas/BankAccountMetaData'
        count:
          type: integer
          readOnly: true
          example: 1
      required:
        - pagination
        - data
        - meta
        - count
    BankTransactionsReportMetaData:
      type: object
      properties:
        reportId:
          type: string
          readOnly: true
          example: 5fad8a342a88364234392fb6
        serviceName:
          type: string
          readOnly: true
          example: xero
          enum:
            - quickbooks
            - xero
            - freshbooks
            - quickbooksDesktop
            - sageIntacct
            - sageBusinessCloud
            - oracleNetsuite
            - dynamicsBusinessCentral
            - wave
            - zohoBooks
        businessName:
          type: string
          readOnly: true
          example: Railz
        startDate:
          type: string
          readOnly: true
          example: "2020-11-25T01:02:03Z"
        endDate:
          type: string
          readOnly: true
          example: "2020-11-30T01:02:03Z"
        createdAt:
          type: string
          readOnly: true
          example: "2020-11-25T01:02:03Z"
          format: date-time
        updatedAt:
          type: string
          example: "2020-11-30T01:02:03Z"
          format: date-time
      required:
        - reportId
        - serviceName
        - businessName
        - startDate
        - endDate
        - createdAt
        - updatedAt
    BankLocationData:
      type: object
      properties:
        line1:
          type: string
          example: 300 Post St
        line2:
          type: string
        city:
          type: string
          example: San Francisco
        region:
          type: string
          example: CA
        country:
          type: string
          example: USA
        postalCode:
          type: string
          example: "94108"
    GetBankTransactionsData:
      type: object
      properties:
        id:
          type: string
          example: lPNjeW1nR6CDn5okmGQ6hEpMo4lLNoSrzqDje
        accountId:
          type: string
          example: blgvvBlXw3cq5GMPwqB6s6q4dLKB9WcVqGDGo
        date:
          type: string
          format: date-time
          example: "2017-01-29"
        authorizedOnDate:
          type: string
          format: date-time
          example: "2017-01-29"
        isPending:
          type: boolean
          example: false
        amount:
          type: number
          format: float
          example: 100
        currency:
          type: string
          example: CAD
        transactionType:
          type: string
          enum:
            - adjustment
            - atm
            - bankCharge
            - billPayment
            - cash
            - cashback
            - cheque
            - directDebit
            - interest
            - purchase
            - standingOrder
            - transfer
          example: directDebit
        paymentChannel:
          type: string
          enum:
            - online
            - inStore
            - other
          example: online
        categories:
          type: array
          items:
            type: string
          example:
            - Shops
            - Computers and Electronics
        merchantName:
          type: string
          example: Apple
        merchantStoreNumber:
          type: string
          example: "1235"
        description:
          type: string
          example: Apple Store
        location:
          $ref: '#/components/schemas/BankLocationData'
        section:
          type: string
          example: Assets
          enum:
            - Assets
            - Expenses
            - Income
            - Liabilities
            - Equity
        subSection:
          type: string
          example: Current Assets
          enum:
            - Current Assets
            - Non-Current Assets
            - Current Liabilities
            - Non-Current Liabilities
            - Equity
            - Income
            - Other Income
            - Operating Expenses
            - Other Expenses
            - Cost of Goods Sold
        group:
          type: string
          example: Office General Administrative Expenses
        subGroup:
          type: string
          example: Office Supplies & Software
      required:
        - id
        - accountId
        - date
        - isPending
        - amount
        - currency
        - paymentChannel
        - description
    BankTransactionsReport:
      type: object
      properties:
        meta:
          $ref: '#/components/schemas/BankTransactionsReportMetaData'
        data:
          type: array
          items:
            $ref: '#/components/schemas/GetBankTransactionsData'
      required:
        - meta
        - data
    GetBankTransactionsResponseDto:
      type: object
      properties:
        pagination:
          $ref: '#/components/schemas/PaginationMetaData'
        count:
          type: integer
          readOnly: true
          example: 1
        reports:
          type: array
          items:
            $ref: '#/components/schemas/BankTransactionsReport'
      required:
        - pagination
        - count
        - reports
    PushBankTransactionConnection:
      type: object
      properties:
        businessName:
          type: string
          example: Railz
          description: Unique business name identifier.
        serviceName:
          type: string
          example: xero
          description: Name of accounting platform service.
          enum:
            - xero
      required:
        - businessName
        - serviceName
    PushBankTransactionLine:
      type: object
      properties:
        quantity:
          type: number
          format: float
          example: "4"
        unitAmount:
          type: number
          format: float
          example: "50.5"
        description:
          type: string
          maxLength: 4000
          example: Services rendered.
        accountRef:
          type: string
          example: "200"
        subTotal:
          type: number
          deprecated: true
          format: float
          example: "202.0"
        totalAmount:
          type: number
          deprecated: true
          format: float
          example: "217.25"
        taxRef:
          type: string
          example: "45"
        memo:
          type: string
          deprecated: true
          maxLength: 4000
          example: Example memo.
        taxAmount:
          type: number
          format: float
          example: "15.25"
      required:
        - quantity
        - unitAmount
        - description
        - accountRef
    PushBankTransaction:
      type: object
      properties:
        currencyRate:
          type: number
          example: "1.13"
        currency:
          type: string
          example: CAD
        transactionType:
          type: string
          example: payment
          enum:
            - payment
            - overpayment
            - deposit
            - expense
        customerRef:
          type: string
          deprecated: true
          example: 6d42f03b-181f-43e3-93fb-2025c012de92
        vendorRef:
          type: string
          deprecated: true
          example: 6d42f03b-181f-43e3-93fb-2025c012de92
        bankAccountRef:
          type: string
          example: "090"
        lines:
          type: array
          items:
            $ref: '#/components/schemas/PushBankTransactionLine'
        date:
          type: string
          format: date
          example: "2021-03-29"
      required:
        - transactionType
        - bankAccountRef
        - lines
    PushBankTransactionDto:
      type: object
      properties:
        connection:
          $ref: '#/components/schemas/PushBankTransactionConnection'
        data:
          $ref: '#/components/schemas/PushBankTransaction'
      required:
        - connection
        - data
    PushBankTransactionResponseDto:
      type: object
      properties:
        businessName:
          type: string
          readOnly: true
          example: Railz
        serviceName:
          type: string
          readOnly: true
          example: xero
          enum:
            - quickbooks
            - xero
            - freshbooks
            - quickbooksDesktop
            - sageIntacct
            - sageBusinessCloud
            - oracleNetsuite
            - dynamicsBusinessCentral
            - wave
            - zohoBooks
        data:
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/PushBankTransaction'
      required:
        - businessName
        - serviceName
        - data
    BankReconciliationReportMetaData:
      type: object
      properties:
        reportId:
          type: string
          example: 5fad8a342a88364234392fb6
          readOnly: true
        serviceName:
          type: string
          example: xero
          readOnly: true
          enum:
            - freshbooks
            - quickbooks
            - quickbooksDesktop
            - xero
            - oracleNetsuite
            - sageBusinessCloud
            - sageIntacct
            - dynamicsBusinessCentral
            - wave
            - zohoBooks
        businessName:
          type: string
          example: Railz
          readOnly: true
        startDate:
          type: string
          example: "2020-11-25T01:02:03Z"
          readOnly: true
          format: date-time
        endDate:
          type: string
          example: "2020-11-30T01:02:03Z"
          readOnly: true
          format: date-time
        createdAt:
          type: string
          example: "2020-11-25T01:02:03Z"
          readOnly: true
          format: date-time
        updatedAt:
          type: string
          example: "2020-11-30T01:02:03Z"
          readOnly: false
          format: date-time
      required:
        - reportId
        - serviceName
        - businessName
        - startDate
        - endDate
        - createdAt
        - updatedAt
    BankTransactions:
      type: object
      properties:
        id:
          type: string
          example: lPNjeW1nR6CDn5okmGQ6hEpMo4lLNoSrzqDje
          readOnly: false
        date:
          type: string
          example: "2017-01-29"
          readOnly: false
          format: date-time
        amount:
          type: number
          readOnly: false
          example: 1000
        accountType:
          type: string
          example: investment, credit, depository, loan, brokerage, other
        accountId:
          type: string
          example: onD7kPQJ98cDejlnXpZeHeqp1qBlX5TogLqxW
        description:
          type: string
          example: BMO Bank of Montreal
      required:
        - id
        - date
        - amount
        - accountId
    ReconcilationAccountRef:
      type: object
      properties:
        id:
          type: string
          example: "1334"
          readOnly: false
        name:
          type: string
          example: Account Receivable
          readOnly: false
        section:
          type: string
          example: Assets
          readOnly: false
          enum:
            - Assets
            - Expenses
            - Income
            - Liabilities
            - Equity
        subSection:
          type: string
          example: Current Assets
          readOnly: false
          enum:
            - Current Assets
            - Non-Current Assets
            - Current Liabilities
            - Non-Current Liabilities
            - Equity
            - Income
            - Other Income
            - Operating Expenses
            - Other Expenses
            - Cost of Goods Sold
        group:
          type: string
          example: Cash And Cash Equivalents
          readOnly: false
        subGroup:
          type: string
          example: Cash And Cash Equivalents
          readOnly: false
      required:
        - id
        - name
    EntityRef:
      type: object
      properties:
        id:
          type: string
          example: "233"
        name:
          type: string
          example: Railz Inc.
      required:
        - id
    ReconciledBankTransactions:
      type: object
      properties:
        id:
          type: string
          example: lPNjeW1nR6CDn5okmGQ6hEpMo4lLNoSrzqDje
          readOnly: false
        date:
          type: string
          example: "2017-01-29"
          readOnly: false
          format: date-time
        amount:
          type: number
          readOnly: false
          example: 1000
        accountType:
          type: string
          example: investment, credit, depository, loan, brokerage, other
        accountId:
          type: string
          example: onD7kPQJ98cDejlnXpZeHeqp1qBlX5TogLqxW
        description:
          type: string
          example: BMO Bank of Montreal
        accountingTransactionId:
          type: string
          example: 13
        accountingTransactionType:
          type: string
          enum:
            - expense
            - invoice
            - payment
            - payroll
            - journalEntry
            - bill
            - vendorCreditNote
            - creditNote
            - billPayment
            - bankTransaction
            - transfer
            - deposit
            - refund
            - estimate
            - inventoryAdjustment
            - purchaseOrder
            - taxPayment
            - taxAdjustment
            - taxRefund
            - taxReversal
            - other
            - unknown
        isPosting:
          type: boolean
          example: "true"
        isSplitTransaction:
          type: boolean
          example: "true"
        subTotal:
          type: number
          example: 300.5
          format: float
        transactionNumber:
          type: string
          example: INV-001
        transactionReportId:
          type: string
          example: 5fad8a342a88364234392fb6
        accountRef:
          $ref: '#/components/schemas/ReconcilationAccountRef'
        entityRef:
          $ref: '#/components/schemas/EntityRef'
      required:
        - id
        - date
        - amount
        - accountId
        - accountingTransactionId
        - accountRef
    BankReconciliationData:
      type: object
      properties:
        bankTransactionsCount:
          type: number
          example: 35
        accountingTransactionsCount:
          type: number
          example: 50
        bankTransactionsAmount:
          type: number
          example: 105.5
          format: float
        accountingTransactionsAmount:
          type: number
          example: 750.5
          format: float
        bankTransactionsTotalValue:
          type: number
          example: 109.95
          format: float
        accountingTransactionsTotalValue:
          type: number
          example: 500.5
          format: float
        weightedPercentageError:
          type: number
          example: 1
          format: float
        accuracyScore:
          type: number
          example: 50.5
          format: float
        bankTransactionsUnreconciledCount:
          type: number
          example: 25
        bankTransactionsUnreconciledAmount:
          type: number
          example: 109.95
          format: float
        dailyAccuracyScore:
          type: number
          example: 0.24
          format: float
        unreconciledBankTransactions:
          type: array
          items:
            oneOf:
              - $ref: '#/components/schemas/BankTransactions'
        reconciledBankTransactions:
          type: array
          items:
            oneOf:
              - $ref: '#/components/schemas/ReconciledBankTransactions'
      required:
        - bankTransactionsCount
        - accountingTransactionsCount
        - bankTransactionsAmount
        - accountingTransactionsAmount
        - bankTransactionsTotalValue
        - accountingTransactionsTotalValue
        - weightedPercentageError
        - accuracyScore
        - bankTransactionsUnreconciledCount
        - bankTransactionsUnreconciledAmount
        - dailyAccuracyScore
    BankReconciliationReport:
      type: object
      properties:
        meta:
          $ref: '#/components/schemas/BankReconciliationReportMetaData'
        data:
          readOnly: false
          type: array
          items:
            $ref: '#/components/schemas/BankReconciliationData'
      required:
        - meta
        - data
    BankReconciliationResponseDto:
      type: object
      properties:
        pagination:
          $ref: '#/components/schemas/PaginationMetaData'
        count:
          type: number
          readOnly: true
          example: 1
          format: integer
        reports:
          readOnly: false
          type: array
          items:
            $ref: '#/components/schemas/BankReconciliationReport'
      required:
        - pagination
        - count
        - reports
    BankTransfersReportMetaDataV2:
      type: object
      properties:
        connectionUuid:
          type: string
          readOnly: true
          example: CON-396d5daa-26b2-4979-89b6-cafb2c298155
        businessName:
          type: string
          readOnly: true
          example: Railz
        serviceName:
          type: string
          readOnly: true
          example: xero
          enum:
            - freshbooks
            - quickbooks
            - quickbooksDesktop
            - xero
            - oracleNetsuite
            - sageBusinessCloud
            - sageIntacct
            - dynamicsBusinessCentral
            - wave
            - zohoBooks
        reportId:
          readOnly: true
          example:
            - 5fad8a342a88364234392fb5
            - 5fad8a342a88364234392fb6
          type: array
          items:
            type: string
        startDate:
          type: string
          readOnly: true
          example: "2020-11-25T01:02:03Z"
          format: date-time
        endDate:
          type: string
          readOnly: true
          example: "2020-11-30T01:02:03Z"
          format: date-time
        createdAt:
          type: string
          readOnly: true
          example: "2020-11-25T01:02:03Z"
          format: date-time
        updatedAt:
          type: string
          example: "2020-11-30T01:02:03Z"
          format: date-time
          readOnly: false
      required:
        - connectionUuid
        - businessName
        - serviceName
        - reportId
        - startDate
        - endDate
        - createdAt
        - updatedAt
    GetBankTransferDataV2:
      type: object
      properties:
        id:
          type: string
          example: "123"
        date:
          type: string
          format: date-time
          example: "2021-03-09T10:18:29.985Z"
        currencyRate:
          type: number
          example: 1.13
          format: float
        totalAmount:
          type: number
          example: 1000.5
          format: float
        fromAccountRef:
          $ref: '#/components/schemas/BankTransferFromAccountRef'
        toAccountRef:
          $ref: '#/components/schemas/BankTransferToAccountRef'
        fromBankTransactionId:
          type: string
          example: b11794bc
        toBankTransactionId:
          type: string
          example: b11794cd
        memo:
          type: string
          example: Reference to bank transfer.
        sourceModifiedDate:
          type: string
          example: "2021-03-09T10:18:29.985Z"
          format: date-time
        currency:
          type: string
          example: USD
      required:
        - id
        - date
        - totalAmount
        - fromAccountRef
        - toAccountRef
    GetBankTransfersResponseV2Dto:
      type: object
      properties:
        meta:
          $ref: '#/components/schemas/BankTransfersReportMetaDataV2'
        pagination:
          $ref: '#/components/schemas/PaginationMetaData'
        data:
          type: array
          items:
            $ref: '#/components/schemas/GetBankTransferDataV2'
      required:
        - meta
        - pagination
        - data
    AccountRefDto:
      type: object
      properties:
        id:
          type: string
          example: "200"
      required:
        - id
    PushBankTransfersV2:
      type: object
      properties:
        currencyRate:
          type: number
          example: "1.13"
        totalAmount:
          type: number
          format: float
          example: "150.50"
        date:
          type: string
          format: date
          example: "2021-03-09"
        memo:
          type: string
          maxLength: 4000
          example: Services rendered.
        fromAccountRef:
          $ref: '#/components/schemas/AccountRefDto'
        toAccountRef:
          $ref: '#/components/schemas/AccountRefDto'
        currency:
          type: string
          example: CAD
        passThrough:
          type: object
          example:
            CustomField:
              - DefinitionId: "1"
                StringValue: my custom value
                Name: Field One
      required:
        - totalAmount
        - fromAccountRef
        - toAccountRef
    PushBankTransfersV2Dto:
      type: object
      properties:
        connectionUuid:
          type: string
          description: Unique connection identifier.
          example: CON-396d5daa-26b2-4979-89b6-cafb2c298155
        data:
          $ref: '#/components/schemas/PushBankTransfersV2'
      required:
        - connectionUuid
        - data
    PushBankTransfersResponseV2Dto:
      type: object
      properties:
        connectionUuid:
          type: string
          readOnly: true
          example: CON-396d5daa-26b2-4979-89b6-cafb2c298155
        businessName:
          type: string
          readOnly: true
          example: Railz
        serviceName:
          type: string
          readOnly: true
          example: xero
          enum:
            - freshbooks
            - quickbooks
            - quickbooksDesktop
            - xero
            - oracleNetsuite
            - sageBusinessCloud
            - sageIntacct
            - dynamicsBusinessCentral
            - wave
            - zohoBooks
        pushCommunicationId:
          type: string
          readOnly: true
          example: 60473b57f0cdd1683ca71f60
        requestedOn:
          type: string
          readOnly: true
          example: "2021-03-09T08:15:22.035Z"
          format: date-time
        status:
          type: string
          readOnly: true
          example: pending
          enum:
            - success
            - failed
            - pending
        data:
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/PushBankTransfersV2'
      required:
        - connectionUuid
        - businessName
        - serviceName
        - pushCommunicationId
        - requestedOn
        - status
        - data
    BankAccountMetaDataV2:
      type: object
      properties:
        connectionUuid:
          type: string
          readOnly: true
          example: CON-396d5daa-26b2-4979-89b6-cafb2c298155
        businessName:
          type: string
          readOnly: true
          example: Railz
        serviceName:
          type: string
          readOnly: true
          example: xero
          enum:
            - freshbooks
            - quickbooks
            - quickbooksDesktop
            - xero
            - oracleNetsuite
            - sageBusinessCloud
            - sageIntacct
            - dynamicsBusinessCentral
            - wave
            - zohoBooks
        reportId:
          readOnly: true
          example:
            - 5fad8a342a88364234392fb5
          type: array
          items:
            type: string
        createdAt:
          type: string
          readOnly: true
          format: date-time
          example: "2020-12-25T01:02:03Z"
        updatedAt:
          type: string
          format: date-time
          example: "2020-12-25T01:02:03Z"
      required:
        - connectionUuid
        - businessName
        - serviceName
        - reportId
        - createdAt
        - updatedAt
    GetBankAccountResponseV2Dto:
      type: object
      properties:
        pagination:
          $ref: '#/components/schemas/PaginationMetaData'
        data:
          type: array
          items:
            $ref: '#/components/schemas/GetBankAccountData'
        meta:
          $ref: '#/components/schemas/BankAccountMetaDataV2'
        count:
          type: integer
          readOnly: true
          example: 1
          deprecated: true
      required:
        - pagination
        - data
        - meta
        - count
    GetBankAccountAccountingDataV2:
      type: object
      properties:
        id:
          type: string
          example: lPNjeW1nR6CDn5okmGQ6hEpMo4lLNoSrzqDje
        nominalCode:
          type: string
          example: "200"
        name:
          type: string
          example: Business Bank Account
        accountType:
          type: string
          enum:
            - checking
            - saving
            - creditCard
            - loan
            - investment
            - unknown
          example: checking
        accountNumber:
          type: string
          example: "11200"
        routingNumber:
          type: string
          example: "123456789"
        achId:
          type: string
          example: "123456789"
        bankCode:
          type: string
          example: TD
        iBan:
          type: string
          example: CA123456789012345678901234
        institutionName:
          type: string
          example: TD Bank
        currency:
          type: string
          example: CAD
        currentBalance:
          type: number
          example: 24.55
        overdraftLimit:
          type: number
          example: 8.75
        availableBalance:
          type: number
          example: 5.55
        isActive:
          type: boolean
          example: true
        sourceModifiedDate:
          format: date-time
          type: string
          example: 2022-03-11T11:29:03-05:00"
      required:
        - id
        - accountType
    GetBankAccountAccountingResponseV2Dto:
      type: object
      properties:
        meta:
          $ref: '#/components/schemas/BankAccountMetaDataV2'
        pagination:
          $ref: '#/components/schemas/PaginationMetaData'
        data:
          type: array
          items:
            $ref: '#/components/schemas/GetBankAccountAccountingDataV2'
      required:
        - meta
        - pagination
        - data
    PushBankAccountV2:
      type: object
      properties:
        id:
          type: string
          example: lPNjeW1nR6CDn5okmGQ6hEpMo4lLNoSrzqDje
        nominalCode:
          type: string
          example: "200"
        name:
          type: string
          example: Business Bank Account
        accountType:
          type: string
          enum:
            - checking
            - saving
            - creditCard
            - loan
            - investment
            - unknown
          example: checking
        accountNumber:
          type: string
          example: "11200"
        routingNumber:
          type: string
          example: "123456789"
        bankCode:
          type: string
          example: TD
        iBan:
          type: string
          example: CA123456789012345678901234
        locationId:
          type: string
          example: "100"
        institutionName:
          type: string
          example: TD Bank
        currency:
          type: string
          example: CAD
        currentBalance:
          type: number
          example: 24.55
        overdraftLimit:
          type: number
          example: 8.75
        availableBalance:
          type: number
          example: 5.55
        isActive:
          type: boolean
          example: true
    PushBankAccountV2Dto:
      type: object
      properties:
        connectionUuid:
          type: string
          description: Unique connection identifier.
          example: CON-396d5daa-26b2-4979-89b6-cafb2c298155
        data:
          $ref: '#/components/schemas/PushBankAccountV2'
      required:
        - connectionUuid
        - data
    PushBankAccountResponseV2Dto:
      type: object
      properties:
        connectionUuid:
          type: string
          readOnly: true
          example: CON-396d5daa-26b2-4979-89b6-cafb2c298155
        businessName:
          type: string
          readOnly: true
          example: Railz
        serviceName:
          type: string
          readOnly: true
          example: xero
          enum:
            - freshbooks
            - quickbooks
            - quickbooksDesktop
            - xero
            - oracleNetsuite
            - sageBusinessCloud
            - sageIntacct
            - dynamicsBusinessCentral
            - wave
            - zohoBooks
        pushCommunicationId:
          type: string
          readOnly: true
          example: 60473b57f0cdd1683ca71f60
        requestedOn:
          type: string
          readOnly: true
          example: "2021-03-09T08:15:22.035Z"
          format: date-time
        status:
          type: string
          readOnly: true
          example: pending
          enum:
            - success
            - failed
            - pending
        data:
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/PushBankAccountV2'
      required:
        - connectionUuid
        - businessName
        - serviceName
        - pushCommunicationId
        - requestedOn
        - status
        - data
    TransactionalReportMetaDataV2:
      type: object
      properties:
        connectionUuid:
          type: string
          readOnly: true
          example: CON-396d5daa-26b2-4979-89b6-cafb2c298155
        businessName:
          type: string
          readOnly: true
          example: Railz
        serviceName:
          type: string
          readOnly: true
          example: xero
          enum:
            - freshbooks
            - quickbooks
            - quickbooksDesktop
            - xero
            - oracleNetsuite
            - sageBusinessCloud
            - sageIntacct
            - dynamicsBusinessCentral
            - wave
            - zohoBooks
        reportId:
          readOnly: true
          example:
            - 5fad8a342a88364234392fb5
            - 5fad8a342a88364234392fb6
          type: array
          items:
            type: string
        startDate:
          type: string
          readOnly: true
          example: "2020-11-25T01:02:03Z"
          format: date-time
        endDate:
          type: string
          readOnly: true
          example: "2020-11-30T01:02:03Z"
          format: date-time
        createdAt:
          type: string
          readOnly: true
          example: "2020-11-25T01:02:03Z"
          format: date-time
        updatedAt:
          type: string
          example: "2020-11-30T01:02:03Z"
          format: date-time
          readOnly: false
      required:
        - connectionUuid
        - businessName
        - serviceName
        - reportId
        - startDate
        - endDate
        - createdAt
        - updatedAt
    GetBankTransactionsV2Data:
      type: object
      properties:
        id:
          type: string
          example: lPNjeW1nR6CDn5okmGQ6hEpMo4lLNoSrzqDje
        accountId:
          type: string
          example: blgvvBlXw3cq5GMPwqB6s6q4dLKB9WcVqGDGo
        date:
          type: string
          format: date-time
          example: "2017-01-29"
        authorizedOnDate:
          type: string
          format: date-time
          example: "2017-01-29"
        isPending:
          type: boolean
          example: false
        amount:
          type: number
          format: float
          example: 100
        currency:
          type: string
          example: CAD
        transactionType:
          type: string
          enum:
            - adjustment
            - atm
            - bankCharge
            - billPayment
            - cash
            - cashback
            - cheque
            - directDebit
            - interest
            - purchase
            - standingOrder
            - transfer
          example: directDebit
        paymentChannel:
          type: string
          enum:
            - online
            - inStore
            - other
          example: online
        categories:
          type: array
          items:
            type: string
          example:
            - Shops
            - Computers and Electronics
        merchantName:
          type: string
          example: Apple
        merchantStoreNumber:
          type: string
          example: "1235"
        description:
          type: string
          example: Apple Store
        location:
          $ref: '#/components/schemas/BankLocationData'
        section:
          type: string
          example: Assets
          enum:
            - Assets
            - Expenses
            - Income
            - Liabilities
            - Equity
        subSection:
          type: string
          example: Current Assets
          enum:
            - Current Assets
            - Non-Current Assets
            - Current Liabilities
            - Non-Current Liabilities
            - Equity
            - Income
            - Other Income
            - Operating Expenses
            - Other Expenses
            - Cost of Goods Sold
        group:
          type: string
          example: Office General Administrative Expenses
        subGroup:
          type: string
          example: Office Supplies & Software
        accountType:
          type: string
        accountSubType:
          type: string
      required:
        - id
        - accountId
        - date
        - isPending
        - amount
        - currency
        - paymentChannel
        - description
    GetBankTransactionsV2ResponseDto:
      type: object
      properties:
        pagination:
          $ref: '#/components/schemas/PaginationMetaData'
        meta:
          $ref: '#/components/schemas/TransactionalReportMetaDataV2'
        data:
          type: array
          items:
            $ref: '#/components/schemas/GetBankTransactionsV2Data'
      required:
        - pagination
        - meta
        - data
    BankTransactionsAccountingReportMetaData:
      type: object
      properties:
        connectionUuid:
          type: string
          readOnly: true
          example: CON-396d5daa-26b2-4979-89b6-cafb2c298155
        businessName:
          type: string
          readOnly: true
          example: Railz
        serviceName:
          type: string
          readOnly: true
          example: xero
          enum:
            - freshbooks
            - quickbooks
            - quickbooksDesktop
            - xero
            - oracleNetsuite
            - sageBusinessCloud
            - sageIntacct
            - dynamicsBusinessCentral
            - wave
            - zohoBooks
        reportId:
          readOnly: true
          example:
            - 5fad8a342a88364234392fb5
            - 5fad8a342a88364234392fb6
          type: array
          items:
            type: string
        startDate:
          type: string
          readOnly: true
          example: "2020-11-25T01:02:03Z"
          format: date-time
        endDate:
          type: string
          readOnly: true
          example: "2020-11-30T01:02:03Z"
          format: date-time
        createdAt:
          type: string
          readOnly: true
          example: "2020-11-25T01:02:03Z"
          format: date-time
        updatedAt:
          type: string
          example: "2020-11-30T01:02:03Z"
          format: date-time
          readOnly: false
      required:
        - connectionUuid
        - businessName
        - serviceName
        - reportId
        - startDate
        - endDate
        - createdAt
        - updatedAt
    AccountRef:
      type: object
      properties:
        id:
          type: string
          example: "145"
        name:
          type: string
          example: Example account
      required:
        - id
    BankTaxRateRef:
      type: object
      properties:
        id:
          type: string
          example: "12"
        name:
          type: string
      required:
        - id
    TrackingCategoryRefAccounting:
      type: object
      properties:
        id:
          type: string
          example: "4040"
          readOnly: false
        name:
          type: string
          readOnly: false
          example: Region
        type:
          type: string
          example: class
          enum:
            - class
            - department
            - location
            - unknown
      required:
        - id
    BankTransactionsAccountingLineItem:
      type: object
      properties:
        id:
          type: string
          example: 8a3fdcc9-83eb-4fdd-83e0-52ec1b40b072
        description:
          type: string
          example: Railz store
        taxRateRef:
          $ref: '#/components/schemas/BankTaxRateRef'
        taxAmount:
          type: number
          example: 20.5
          format: float
        amount:
          type: number
          example: 322
          format: float
        accountRef:
          $ref: '#/components/schemas/AccountRef'
        unitAmount:
          type: number
          format: float
          example: "50.5"
        quantity:
          type: number
          format: float
          example: "4"
        trackingCategoryRefs:
          type: array
          items:
            $ref: '#/components/schemas/TrackingCategoryRefAccounting'
      required:
        - amount
        - accountRef
        - unitAmount
        - quantity
    EntityRefV2:
      type: object
      properties:
        type:
          type: string
          example: customer
          enum:
            - customer
            - vendor
        id:
          type: string
          example: "130"
        name:
          type: string
          example: ABC Inc
      required:
        - id
    GetBankTransactionsAccountingData:
      type: object
      properties:
        id:
          type: string
          example: "25"
        postedDate:
          format: date-time
          type: string
          example: "2020-11-30T01:02:03Z"
        transactionType:
          type: string
          example: payment
          enum:
            - payment
            - refund
            - deposit
            - expense
            - transfer
            - overPayment
            - unknown
            - salesReturn
            - ownerDrawings
            - salesWithoutInvoices
            - interestIncome
            - otherIncome
            - expenseRefund
            - depositFromOtherAccounts
            - ownersContribution
        bankAccountRef:
          $ref: '#/components/schemas/AccountRef'
        currency:
          type: string
          example: CAD
        currencyRate:
          type: number
          example: 1.13
          format: float
        isReconciled:
          type: boolean
          example: false
        totalAmount:
          type: number
          example: 322
          format: float
        lines:
          $ref: '#/components/schemas/BankTransactionsAccountingLineItem'
        memo:
          type: string
          example: Example memo.
        sourceModifiedDate:
          format: date-time
          type: string
          example: "2021-03-09T10:18:29.985Z"
        entityRef:
          $ref: '#/components/schemas/EntityRefV2'
      required:
        - id
        - postedDate
        - transactionType
        - totalAmount
    GetAspBankTransactionsV2ResponseDto:
      type: object
      properties:
        meta:
          $ref: '#/components/schemas/BankTransactionsAccountingReportMetaData'
        pagination:
          $ref: '#/components/schemas/PaginationMetaData'
        data:
          type: array
          items:
            $ref: '#/components/schemas/GetBankTransactionsAccountingData'
      required:
        - meta
        - pagination
        - data
    BankAccountRefDto:
      type: object
      properties:
        id:
          type: string
          example: "200"
      required:
        - id
    EntityRefDto:
      type: object
      properties:
        type:
          type: string
          example: customer
          enum:
            - customer
            - vendor
        id:
          type: string
          example: "130"
      required:
        - id
    BaseTaxRateRef:
      type: object
      properties:
        id:
          type: string
          example: "12"
      required:
        - id
    TrackingCategoryRefV2Dto:
      type: object
      properties:
        id:
          type: string
          example: "4040"
        type:
          type: string
          example: class
          enum:
            - class
            - department
            - location
            - unknown
    PushBankTransactionLineV2:
      type: object
      properties:
        quantity:
          type: number
          format: float
          example: "4"
        unitAmount:
          type: number
          format: float
          example: "50.5"
        description:
          type: string
          maxLength: 4000
          example: Services rendered.
        accountRef:
          $ref: '#/components/schemas/AccountRefDto'
        taxRateRef:
          $ref: '#/components/schemas/BaseTaxRateRef'
        taxAmount:
          type: number
          format: float
          example: "15.25"
        trackingCategoryRefs:
          type: array
          items:
            $ref: '#/components/schemas/TrackingCategoryRefV2Dto'
      required:
        - accountRef
    PushBankTransactionV2:
      type: object
      properties:
        currencyRate:
          type: number
          example: "1.13"
        currency:
          type: string
          example: CAD
        transactionType:
          type: string
          example: payment
          enum:
            - payment
            - refund
            - deposit
            - expense
            - transfer
            - overPayment
            - unknown
            - salesReturn
            - ownerDrawings
            - salesWithoutInvoices
            - interestIncome
            - otherIncome
            - expenseRefund
            - depositFromOtherAccounts
            - ownersContribution
        bankAccountRef:
          $ref: '#/components/schemas/BankAccountRefDto'
        entityRef:
          $ref: '#/components/schemas/EntityRefDto'
        lines:
          type: array
          items:
            $ref: '#/components/schemas/PushBankTransactionLineV2'
        totalAmount:
          type: number
          format: float
          example: "150.50"
        memo:
          type: string
          maxLength: 4000
          example: Example memo.
        postedDate:
          format: date-time
          type: string
          example: "2020-11-30"
        passThrough:
          type: object
          example:
            CustomField:
              - DefinitionId: "1"
                StringValue: my custom value
                Name: Field One
      required:
        - bankAccountRef
    PushBankTransactionV2Dto:
      type: object
      properties:
        connectionUuid:
          type: string
          description: Unique connection identifier.
          example: CON-396d5daa-26b2-4979-89b6-cafb2c298155
        data:
          $ref: '#/components/schemas/PushBankTransactionV2'
      required:
        - connectionUuid
        - data
    PushBankTransactionResponseV2Dto:
      type: object
      properties:
        connectionUuid:
          type: string
          readOnly: true
          example: CON-396d5daa-26b2-4979-89b6-cafb2c298155
        businessName:
          type: string
          readOnly: true
          example: Railz
        serviceName:
          type: string
          readOnly: true
          example: xero
          enum:
            - freshbooks
            - quickbooks
            - quickbooksDesktop
            - xero
            - oracleNetsuite
            - sageBusinessCloud
            - sageIntacct
            - dynamicsBusinessCentral
            - wave
            - zohoBooks
        pushCommunicationId:
          type: string
          readOnly: true
          example: 60473b57f0cdd1683ca71f60
        requestedOn:
          type: string
          readOnly: true
          example: "2021-03-09T08:15:22.035Z"
          format: date-time
        status:
          type: string
          readOnly: true
          example: pending
          enum:
            - success
            - failed
            - pending
        data:
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/PushBankTransactionV2'
      required:
        - connectionUuid
        - businessName
        - serviceName
        - pushCommunicationId
        - requestedOn
        - status
        - data
    BatchPushBankTransactionV2Dto:
      type: object
      properties:
        connectionUuid:
          type: string
          description: Unique connection identifier.
          example: CON-396d5daa-26b2-4979-89b6-cafb2c298155
        batch:
          type: array
          items:
            $ref: '#/components/schemas/PushBankTransactionV2'
      required:
        - connectionUuid
        - batch
    PushBankTransactionIndividualResponseV2Dto:
      type: object
      properties:
        pushCommunicationId:
          type: string
          readOnly: true
          example: 60473b57f0cdd1683ca71f60
        requestedOn:
          type: string
          readOnly: true
          example: "2021-03-09T08:15:22.035Z"
          format: date-time
        status:
          type: string
          readOnly: true
          example: pending
          enum:
            - success
            - failed
            - pending
        data:
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/PushBankTransactionV2'
      required:
        - pushCommunicationId
        - requestedOn
        - status
        - data
    BatchPushBankTransactionResponseV2Dto:
      type: object
      properties:
        connectionUuid:
          type: string
          readOnly: true
          example: CON-396d5daa-26b2-4979-89b6-cafb2c298155
        businessName:
          type: string
          readOnly: true
          example: Railz
        serviceName:
          type: string
          readOnly: true
          example: xero
          enum:
            - freshbooks
            - quickbooks
            - quickbooksDesktop
            - xero
            - oracleNetsuite
            - sageBusinessCloud
            - sageIntacct
            - dynamicsBusinessCentral
            - wave
            - zohoBooks
        batchId:
          type: string
          readOnly: true
          example: 60473b57f0cdd1683ca71f60
        batch:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/PushBankTransactionIndividualResponseV2Dto'
      required:
        - connectionUuid
        - businessName
        - serviceName
        - batchId
        - batch
    UpdateBankTransactionLine:
      type: object
      properties:
        quantity:
          type: number
          format: float
          example: "4"
        unitAmount:
          type: number
          format: float
          example: "50.5"
        id:
          type: string
          example: 8a3fdcc9-83eb-4fdd-83e0-52ec1b40b072
        description:
          type: string
          maxLength: 4000
          example: Services rendered.
        accountRef:
          $ref: '#/components/schemas/AccountRefDto'
        taxRateRef:
          $ref: '#/components/schemas/BaseTaxRateRef'
        trackingCategoryRefs:
          type: array
          items:
            $ref: '#/components/schemas/TrackingCategoryRefV2Dto'
    BatchUpdateBankTransaction:
      type: object
      properties:
        passThrough:
          type: object
          example:
            CustomField:
              - DefinitionId: "1"
                StringValue: my custom value
                Name: Field One
        currencyRate:
          type: number
          example: "1.13"
        currency:
          type: string
          example: CAD
        transactionType:
          type: string
          example: payment
          enum:
            - payment
            - refund
            - deposit
            - expense
            - transfer
            - overPayment
            - unknown
            - salesReturn
            - ownerDrawings
            - salesWithoutInvoices
            - interestIncome
            - otherIncome
            - expenseRefund
            - depositFromOtherAccounts
            - ownersContribution
        bankAccountRef:
          $ref: '#/components/schemas/BankAccountRefDto'
        entityRef:
          $ref: '#/components/schemas/EntityRefDto'
        totalAmount:
          type: number
          format: float
          example: "150.50"
        lines:
          type: array
          items:
            $ref: '#/components/schemas/UpdateBankTransactionLine'
        memo:
          type: string
          maxLength: 4000
          example: Example memo.
        postedDate:
          format: date-time
          type: string
          example: "2020-11-30"
        bankTransactionRef:
          type: string
          description: reference to the bank transaction to be updated
      required:
        - transactionType
        - bankTransactionRef
    BatchUpdateBankTransactionDto:
      type: object
      properties:
        connectionUuid:
          type: string
          description: Unique connection identifier.
          example: CON-396d5daa-26b2-4979-89b6-cafb2c298155
        batch:
          type: array
          items:
            $ref: '#/components/schemas/BatchUpdateBankTransaction'
      required:
        - connectionUuid
        - batch
    UpdateBankTransactionIndividualResponseV2Dto:
      type: object
      properties:
        pushCommunicationId:
          type: string
          readOnly: true
          example: 60473b57f0cdd1683ca71f60
        requestedOn:
          type: string
          readOnly: true
          example: "2021-03-09T08:15:22.035Z"
          format: date-time
        status:
          type: string
          readOnly: true
          example: pending
          enum:
            - success
            - failed
            - pending
        data:
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/BatchUpdateBankTransaction'
      required:
        - pushCommunicationId
        - requestedOn
        - status
        - data
    BatchUpdateBankTransactionResponseV2Dto:
      type: object
      properties:
        connectionUuid:
          type: string
          readOnly: true
          example: CON-396d5daa-26b2-4979-89b6-cafb2c298155
        businessName:
          type: string
          readOnly: true
          example: Railz
        serviceName:
          type: string
          readOnly: true
          example: xero
          enum:
            - freshbooks
            - quickbooks
            - quickbooksDesktop
            - xero
            - oracleNetsuite
            - sageBusinessCloud
            - sageIntacct
            - dynamicsBusinessCentral
            - wave
            - zohoBooks
        batchId:
          type: string
          readOnly: true
          example: 60473b57f0cdd1683ca71f60
        batch:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/UpdateBankTransactionIndividualResponseV2Dto'
      required:
        - connectionUuid
        - businessName
        - serviceName
        - batchId
        - batch
    UpdateBankTransaction:
      type: object
      properties:
        passThrough:
          type: object
          example:
            CustomField:
              - DefinitionId: "1"
                StringValue: my custom value
                Name: Field One
        currencyRate:
          type: number
          example: "1.13"
        currency:
          type: string
          example: CAD
        transactionType:
          type: string
          example: payment
          enum:
            - payment
            - refund
            - deposit
            - expense
            - transfer
            - overPayment
            - unknown
            - salesReturn
            - ownerDrawings
            - salesWithoutInvoices
            - interestIncome
            - otherIncome
            - expenseRefund
            - depositFromOtherAccounts
            - ownersContribution
        bankAccountRef:
          $ref: '#/components/schemas/BankAccountRefDto'
        entityRef:
          $ref: '#/components/schemas/EntityRefDto'
        totalAmount:
          type: number
          format: float
          example: "150.50"
        lines:
          type: array
          items:
            $ref: '#/components/schemas/UpdateBankTransactionLine'
        memo:
          type: string
          maxLength: 4000
          example: Example memo.
        postedDate:
          format: date-time
          type: string
          example: "2020-11-30"
      required:
        - transactionType
    UpdateBankTransactionDto:
      type: object
      properties:
        connectionUuid:
          type: string
          description: Unique connection identifier.
          example: CON-396d5daa-26b2-4979-89b6-cafb2c298155
        data:
          $ref: '#/components/schemas/UpdateBankTransaction'
      required:
        - connectionUuid
        - data
    UpdateBankTransactionResponseDto:
      type: object
      properties:
        connectionUuid:
          type: string
          readOnly: true
          example: CON-396d5daa-26b2-4979-89b6-cafb2c298155
        businessName:
          type: string
          readOnly: true
          example: Railz
        serviceName:
          type: string
          readOnly: true
          example: xero
          enum:
            - freshbooks
            - quickbooks
            - quickbooksDesktop
            - xero
            - oracleNetsuite
            - sageBusinessCloud
            - sageIntacct
            - dynamicsBusinessCentral
            - wave
            - zohoBooks
        pushCommunicationId:
          type: string
          readOnly: true
          example: 60473b57f0cdd1683ca71f60
        requestedOn:
          type: string
          readOnly: true
          example: "2021-03-09T08:15:22.035Z"
          format: date-time
        status:
          type: string
          readOnly: true
          example: pending
          enum:
            - success
            - failed
            - pending
        data:
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/UpdateBankTransaction'
      required:
        - connectionUuid
        - businessName
        - serviceName
        - pushCommunicationId
        - requestedOn
        - status
        - data
    BankReconciliationReportMetaDataV2:
      type: object
      properties:
        connectionUuid:
          type: string
          readOnly: true
          example: CON-396d5daa-26b2-4979-89b6-cafb2c298155
        businessName:
          type: string
          readOnly: true
          example: Railz
        serviceName:
          type: string
          readOnly: true
          example: xero
          enum:
            - freshbooks
            - quickbooks
            - quickbooksDesktop
            - xero
            - oracleNetsuite
            - sageBusinessCloud
            - sageIntacct
            - dynamicsBusinessCentral
            - wave
            - zohoBooks
        reportId:
          type: string
          example: 5fad8a342a88364234392fb6
          readOnly: true
        startDate:
          type: string
          example: "2020-11-25T01:02:03Z"
          readOnly: true
          format: date-time
        endDate:
          type: string
          example: "2020-11-30T01:02:03Z"
          readOnly: true
          format: date-time
        createdAt:
          type: string
          example: "2020-11-25T01:02:03Z"
          readOnly: true
          format: date-time
        updatedAt:
          type: string
          example: "2020-11-30T01:02:03Z"
          readOnly: false
          format: date-time
      required:
        - connectionUuid
        - businessName
        - serviceName
        - reportId
        - startDate
        - endDate
        - createdAt
        - updatedAt
    ReconciledBankTransactionsV2:
      type: object
      properties:
        id:
          type: string
          example: lPNjeW1nR6CDn5okmGQ6hEpMo4lLNoSrzqDje
          readOnly: false
        date:
          type: string
          example: "2017-01-29"
          readOnly: false
          format: date-time
        amount:
          type: number
          readOnly: false
          example: 1000
        accountType:
          type: string
          example: investment, credit, depository, loan, brokerage, other
        accountId:
          type: string
          example: onD7kPQJ98cDejlnXpZeHeqp1qBlX5TogLqxW
        description:
          type: string
          example: BMO Bank of Montreal
        accountingTransactionId:
          type: string
          example: 13
        accountingTransactionType:
          type: string
          enum:
            - expense
            - invoice
            - payment
            - payroll
            - journalEntry
            - bill
            - vendorCreditNote
            - creditNote
            - billPayment
            - bankTransaction
            - transfer
            - deposit
            - refund
            - estimate
            - inventoryAdjustment
            - purchaseOrder
            - taxPayment
            - taxAdjustment
            - taxRefund
            - taxReversal
            - other
            - unknown
        isPosting:
          type: boolean
          example: "true"
        isSplitTransaction:
          type: boolean
          example: "true"
        subTotal:
          type: number
          example: 300.5
          format: float
        transactionNumber:
          type: string
          example: INV-001
        transactionReportId:
          type: string
          example: 5fad8a342a88364234392fb6
        accountRef:
          $ref: '#/components/schemas/ReconcilationAccountRef'
        entityRef:
          $ref: '#/components/schemas/EntityRef'
      required:
        - id
        - date
        - amount
        - accountId
        - accountRef
    BankReconciliationV2Data:
      type: object
      properties:
        bankTransactionsCount:
          type: number
          example: 35
        accountingTransactionsCount:
          type: number
          example: 50
        bankTransactionsAmount:
          type: number
          example: 105.5
          format: float
        accountingTransactionsAmount:
          type: number
          example: 750.5
          format: float
        bankTransactionsTotalValue:
          type: number
          example: 109.95
          format: float
        accountingTransactionsTotalValue:
          type: number
          example: 500.5
          format: float
        weightedPercentageError:
          type: number
          example: 1
          format: float
        accuracyScore:
          type: number
          example: 50.5
          format: float
        bankTransactionsUnreconciledCount:
          type: number
          example: 25
        bankTransactionsUnreconciledAmount:
          type: number
          example: 109.95
          format: float
        dailyAccuracyScore:
          type: number
          example: 0.24
          format: float
        unreconciledBankTransactions:
          type: array
          items:
            $ref: '#/components/schemas/BankTransactions'
        reconciledBankTransactions:
          type: array
          items:
            $ref: '#/components/schemas/ReconciledBankTransactionsV2'
      required:
        - bankTransactionsCount
        - accountingTransactionsCount
        - bankTransactionsAmount
        - accountingTransactionsAmount
        - bankTransactionsTotalValue
        - accountingTransactionsTotalValue
        - weightedPercentageError
        - accuracyScore
        - bankTransactionsUnreconciledCount
        - bankTransactionsUnreconciledAmount
        - dailyAccuracyScore
    BankReconciliationReportV2:
      type: object
      properties:
        meta:
          $ref: '#/components/schemas/BankReconciliationReportMetaDataV2'
        data:
          readOnly: false
          type: array
          items:
            $ref: '#/components/schemas/BankReconciliationV2Data'
      required:
        - meta
        - data
    BankReconciliationResponseV2Dto:
      type: object
      properties:
        pagination:
          $ref: '#/components/schemas/PaginationMetaData'
        count:
          type: number
          readOnly: true
          example: 1
          format: integer
          deprecated: true
        reports:
          readOnly: false
          type: array
          items:
            $ref: '#/components/schemas/BankReconciliationReportV2'
      required:
        - pagination
        - count
        - reports
    HistoricalBalances:
      type: object
      properties:
        currency:
          type: string
          example: CAD
        date:
          type: string
          format: date-time
          example: "2017-01-29"
        amount:
          type: number
          format: float
          example: 100
    GetBankAssetData:
      type: object
      properties:
        accountId:
          type: string
          example: blgvvBlXw3cq5GMPwqB6s6q4dLKB9WcVqGDGo
        currentBalance:
          type: number
          format: float
          example: 110
        availableBalance:
          type: number
          format: float
          example: 100
        limit:
          type: number
          format: float
          example: 200
        currency:
          type: string
          example: CAD
        date:
          type: string
          format: date-time
          example: "2017-01-29"
        daysAvailable:
          type: number
          format: float
        historicalBalances:
          type: array
          items:
            $ref: '#/components/schemas/HistoricalBalances'
        accountName:
          type: string
          example: Railz Checking
        accountType:
          type: string
          enum:
            - checking
            - saving
            - creditCard
            - loan
            - investment
            - unknown
          example: checking
        accountSubType:
          type: string
          example: checking
        sourceModifiedDate:
          type: string
          format: date-time
          example: "2021-03-09T10:18:29.985Z"
      required:
        - accountId
    BankAssetMetaData:
      type: object
      properties:
        connectionUuid:
          type: string
          readOnly: true
          example: CON-396d5daa-26b2-4979-89b6-cafb2c298155
        businessName:
          type: string
          readOnly: true
          example: Railz
        serviceName:
          type: string
          readOnly: true
          example: xero
          enum:
            - freshbooks
            - quickbooks
            - quickbooksDesktop
            - xero
            - oracleNetsuite
            - sageBusinessCloud
            - sageIntacct
            - dynamicsBusinessCentral
            - wave
            - zohoBooks
        reportId:
          readOnly: true
          example:
            - 5fad8a342a88364234392fb5
          type: array
          items:
            type: string
        createdAt:
          type: string
          readOnly: true
          format: date-time
          example: "2020-12-25T01:02:03Z"
        updatedAt:
          type: string
          format: date-time
          example: "2020-12-25T01:02:03Z"
      required:
        - connectionUuid
        - businessName
        - serviceName
        - reportId
        - createdAt
        - updatedAt
    GetBankAssetResponseDto:
      type: object
      properties:
        pagination:
          $ref: '#/components/schemas/PaginationMetaData'
        data:
          type: array
          items:
            $ref: '#/components/schemas/GetBankAssetData'
        meta:
          $ref: '#/components/schemas/BankAssetMetaData'
      required:
        - pagination
        - data
        - meta
    TransactionalReportMetaData:
      type: object
      properties:
        reportId:
          readOnly: true
          example:
            - 5fad8a342a88364234392fb5
            - 5fad8a342a88364234392fb6
          type: array
          items:
            type: string
        serviceName:
          type: string
          readOnly: true
          example: xero
          enum:
            - freshbooks
            - quickbooks
            - quickbooksDesktop
            - xero
            - oracleNetsuite
            - sageBusinessCloud
            - sageIntacct
            - dynamicsBusinessCentral
            - wave
            - zohoBooks
        businessName:
          type: string
          readOnly: true
          example: Railz
        startDate:
          type: string
          readOnly: true
          example: "2020-11-25T01:02:03Z"
          format: date-time
        endDate:
          type: string
          readOnly: true
          example: "2020-11-30T01:02:03Z"
          format: date-time
        createdAt:
          type: string
          readOnly: true
          example: "2020-11-25T01:02:03Z"
          format: date-time
        updatedAt:
          type: string
          example: "2020-11-30T01:02:03Z"
          format: date-time
          readOnly: false
      required:
        - reportId
        - serviceName
        - businessName
        - startDate
        - endDate
        - createdAt
        - updatedAt
    VendorRef:
      type: object
      properties:
        id:
          type: string
          example: "1"
        name:
          type: string
          example: Home Depot
      required:
        - id
    PurchaseOrderRefDto:
      type: object
      properties:
        id:
          type: string
          example: "21"
      required:
        - id
    TaxRateRef:
      type: object
      properties:
        id:
          type: string
          example: "1"
        name:
          type: string
          example: HST
        effectiveTaxRate:
          type: number
          example: 13
          format: float
      required:
        - id
    InventoryRef:
      type: object
      properties:
        id:
          type: string
          example: "1"
        name:
          type: string
          example: Digital Services
      required:
        - id
    CustomerObjectRefResponse:
      type: object
      properties:
        id:
          type: string
          example: "124"
        name:
          type: string
          example: Railz
      required:
        - id
    BillLineItems:
      type: object
      properties:
        description:
          type: string
          example: Services rendered.
        unitAmount:
          type: number
          example: 100.5
          format: float
        quantity:
          type: number
          example: 3
          format: integer
        discountAmount:
          type: number
          example: 0
          format: float
        taxAmount:
          type: number
          example: 20.5
          format: float
        taxRateRef:
          $ref: '#/components/schemas/TaxRateRef'
        inventoryRef:
          $ref: '#/components/schemas/InventoryRef'
        discountPercentage:
          type: number
          example: 10.5
          format: float
        id:
          type: string
          example: 8a3fdcc9-83eb-4fdd-83e0-52ec1b40b072
        accountRef:
          $ref: '#/components/schemas/AccountRef'
        trackingCategoryRef:
          deprecated: true
          allOf:
            - $ref: '#/components/schemas/TrackingCategoryRef'
        totalAmount:
          type: number
          example: 10.5
          format: float
          deprecated: true
        customerRef:
          $ref: '#/components/schemas/CustomerObjectRefResponse'
        billableStatus:
          type: string
          example: notBillable
          enum:
            - billable
            - notBillable
            - hasBeenBilled
        subTotal:
          type: number
          example: 301.5
          format: float
          deprecated: true
      required:
        - id
    Payments:
      type: object
      properties:
        amount:
          type: number
          example: 50.5
          format: float
        paymentId:
          type: string
          example: "50"
        date:
          format: date-time
          type: string
          example: "2021-03-09T10:18:29.985Z"
    LocationRef:
      type: object
      properties:
        id:
          type: string
          example: "52"
        name:
          type: string
          example: United States
    GetBillData:
      type: object
      properties:
        id:
          type: string
          example: "1"
        vendorRef:
          $ref: '#/components/schemas/VendorRef'
        purchaseOrderRef:
          deprecated: true
          allOf:
            - $ref: '#/components/schemas/PurchaseOrderRefDto'
        purchaseOrderRefs:
          type: array
          items:
            $ref: '#/components/schemas/PurchaseOrderRefDto'
        postedDate:
          format: date-time
          type: string
          example: "2021-03-09T10:18:29.985Z"
        dueDate:
          format: date-time
          type: string
          example: "2021-03-09T10:18:29.985Z"
        currencyRef:
          $ref: '#/components/schemas/CurrencyRef'
        currencyRate:
          type: number
          example: 1.13
          format: float
        vendorInvoiceNumber:
          type: string
          example: INV-0028
        lines:
          type: array
          items:
            $ref: '#/components/schemas/BillLineItems'
        status:
          type: string
          enum:
            - open
            - draft
            - partiallyPaid
            - paid
            - unknown
            - void
        subTotal:
          type: number
          example: 301.5
          format: float
        taxAmount:
          type: number
          example: 20.5
          format: float
        totalAmount:
          type: number
          example: 322
          format: float
        amountDue:
          type: number
          example: 322
          format: float
        memo:
          type: string
          example: Example bill memo.
        payments:
          type: array
          items:
            $ref: '#/components/schemas/Payments'
        subsidiaryRefs:
          type: array
          items:
            $ref: '#/components/schemas/SubsidiaryRef'
        locationRef:
          deprecated: true
          allOf:
            - $ref: '#/components/schemas/LocationRef'
        sourceModifiedDate:
          format: date-time
          type: string
          example: "2021-03-09T10:18:29.985Z"
      required:
        - id
        - postedDate
        - status
        - totalAmount
    GetBillResponseDto:
      type: object
      properties:
        pagination:
          $ref: '#/components/schemas/PaginationMetaData'
        count:
          type: number
          readOnly: true
          example: 1
          format: integer
        meta:
          $ref: '#/components/schemas/TransactionalReportMetaData'
        data:
          type: array
          items:
            $ref: '#/components/schemas/GetBillData'
      required:
        - pagination
        - count
        - meta
        - data
    CustomerObjectRefDto:
      type: object
      properties:
        id:
          type: string
          example: "124"
      required:
        - id
    PushBillLineItemV1:
      type: object
      properties:
        description:
          type: string
          maxLength: 4000
          example: Services rendered.
        unitAmount:
          type: number
          format: float
          example: 100.5
        quantity:
          type: number
          format: float
          example: 3
        taxAmount:
          type: number
          format: float
          example: 20.5
        customerRef:
          $ref: '#/components/schemas/CustomerObjectRefDto'
        billableStatus:
          type: string
          example: notBillable
          enum:
            - billable
            - notBillable
            - hasBeenBilled
        accountRef:
          type: string
          example: "145"
        trackingCategoryRef:
          type: string
          example: "231"
          deprecated: true
        taxRef:
          type: string
          example: "24"
        subTotal:
          type: number
          format: float
          example: 301.5
          deprecated: true
        totalAmount:
          type: number
          format: float
          example: 322
          deprecated: true
      required:
        - unitAmount
        - quantity
    PushBill:
      type: object
      properties:
        vendorInvoiceNumber:
          type: string
          maxLength: 21
          example: "254"
        postedDate:
          type: string
          format: date
          example: "2021-03-29"
        dueDate:
          type: string
          format: date
          example: "2021-03-29"
        currencyRate:
          type: number
          format: float
          example: 1.13
        memo:
          type: string
          maxLength: 4000
          example: Example bill memo.
        vendorRef:
          type: string
          example: "132"
        currency:
          type: string
          example: CAD
        locationRef:
          type: string
          example: "3"
          deprecated: true
        subsidiaryRefs:
          example:
            - "4"
          type: array
          items:
            type: string
        trackingCategoryRef:
          type: string
          example: "23118"
          deprecated: true
        lines:
          type: array
          items:
            $ref: '#/components/schemas/PushBillLineItemV1'
      required:
        - vendorRef
        - lines
    PushBillDto:
      type: object
      properties:
        connection:
          $ref: '#/components/schemas/PushConnection'
        data:
          $ref: '#/components/schemas/PushBill'
      required:
        - connection
        - data
    PushBillResponseDto:
      type: object
      properties:
        pushCommunicationId:
          type: string
          readOnly: true
          example: 60473b57f0cdd1683ca71f60
        requestedOn:
          type: string
          readOnly: true
          example: "2021-03-09T08:15:22.035Z"
          format: date-time
        status:
          type: string
          readOnly: true
          example: pending
          enum:
            - success
            - failed
            - pending
        businessName:
          type: string
          readOnly: true
          example: Railz
        serviceName:
          type: string
          readOnly: true
          example: quickbooks
          enum:
            - freshbooks
            - quickbooks
            - quickbooksDesktop
            - xero
            - oracleNetsuite
            - sageBusinessCloud
            - sageIntacct
            - dynamicsBusinessCentral
            - wave
            - zohoBooks
        data:
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/PushBill'
      required:
        - pushCommunicationId
        - requestedOn
        - status
        - businessName
        - serviceName
        - data
    PushUpdateBillsConnection:
      type: object
      properties:
        businessName:
          type: string
          example: Railz
          description: Unique business name identifier.
        serviceName:
          type: string
          example: quickbooks
          description: Name of accounting platform service.
          enum:
            - quickbooks
            - xero
            - sageIntacct
            - sageBusinessCloud
      required:
        - businessName
        - serviceName
    UpdateBillLineItemV1:
      type: object
      properties:
        description:
          type: string
          maxLength: 4000
          example: Services rendered.
        unitAmount:
          type: number
          format: float
          example: 50.5
        quantity:
          type: number
          format: float
          example: 202
        billableStatus:
          type: string
          example: notBillable
          enum:
            - billable
            - notBillable
            - hasBeenBilled
        customerRef:
          $ref: '#/components/schemas/CustomerObjectRefDto'
        id:
          type: string
          example: 8a3fdcc9-83eb-4fdd-83e0-52ec1b40b072
        taxAmount:
          type: number
          format: float
          example: 20.5
        taxRef:
          type: string
          example: "24"
        accountRef:
          type: string
          example: "145"
        trackingCategoryRef:
          type: string
          example: "231"
          deprecated: true
        subTotal:
          type: number
          format: float
          example: 301.5
          deprecated: true
        totalAmount:
          type: number
          format: float
          example: 322
          deprecated: true
      required:
        - unitAmount
        - quantity
    UpdateBillsV1:
      type: object
      properties:
        vendorInvoiceNumber:
          type: string
          maxLength: 21
          example: "254"
        postedDate:
          type: string
          format: date
          example: "2021-03-29"
        dueDate:
          type: string
          format: date
          example: "2021-03-29"
        currencyRate:
          type: number
          format: float
          example: 1.13
        memo:
          type: string
          maxLength: 4000
          example: Example bill memo.
        vendorRef:
          type: string
          example: "132"
        currency:
          type: string
          example: CAD
        locationRef:
          type: string
          example: "3"
          deprecated: true
        subsidiaryRefs:
          example:
            - "4"
          type: array
          items:
            type: string
        trackingCategoryRef:
          type: string
          example: "23118"
          deprecated: true
        lines:
          type: array
          items:
            $ref: '#/components/schemas/UpdateBillLineItemV1'
      required:
        - vendorRef
    UpdateBillsV1Dto:
      type: object
      properties:
        connection:
          $ref: '#/components/schemas/PushUpdateBillsConnection'
        data:
          $ref: '#/components/schemas/UpdateBillsV1'
      required:
        - connection
        - data
    UpdateBillsResponseV1Dto:
      type: object
      properties:
        pushCommunicationId:
          type: string
          readOnly: true
          example: 60473b57f0cdd1683ca71f60
        requestedOn:
          type: string
          readOnly: true
          example: "2021-03-09T08:15:22.035Z"
          format: date-time
        status:
          type: string
          readOnly: true
          example: pending
          enum:
            - success
            - failed
            - pending
        businessName:
          type: string
          readOnly: true
          example: Railz
        serviceName:
          type: string
          readOnly: true
          example: quickbooks
          enum:
            - freshbooks
            - quickbooks
            - quickbooksDesktop
            - xero
            - oracleNetsuite
            - sageBusinessCloud
            - sageIntacct
            - dynamicsBusinessCentral
            - wave
            - zohoBooks
        data:
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/UpdateBillsV1'
      required:
        - pushCommunicationId
        - requestedOn
        - status
        - businessName
        - serviceName
        - data
    BillPaymentLink:
      type: object
      properties:
        type:
          type: string
          enum:
            - bill
            - billPayment
            - paymentOnAccount
            - creditNote
            - refund
            - other
        id:
          type: string
          example: "50"
        amount:
          type: number
          example: 0
          format: float
      required:
        - type
    BillPLinks:
      type: object
      properties:
        type:
          type: string
          enum:
            - bill
            - billPayment
            - paymentOnAccount
            - creditNote
            - refund
            - other
        id:
          type: string
          example: "123"
      required:
        - type
        - id
    BillPaymentLineItem:
      type: object
      properties:
        amount:
          type: number
          example: 200.5
          format: float
        link:
          deprecated: true
          allOf:
            - $ref: '#/components/schemas/BillPaymentLink'
        links:
          type: array
          items:
            $ref: '#/components/schemas/BillPLinks'
        allocatedOnDate:
          format: date-time
          type: string
          example: "2021-03-09T10:57:54.294Z"
      required:
        - amount
    GetBillPaymentData:
      type: object
      properties:
        id:
          type: string
          example: "1"
        vendorRef:
          $ref: '#/components/schemas/VendorRef'
        accountRef:
          $ref: '#/components/schemas/AccountRef'
        totalAmount:
          type: number
          example: 200.5
          format: float
        currencyRef:
          $ref: '#/components/schemas/CurrencyRef'
        currencyRate:
          type: number
          example: 1.13
          format: float
        date:
          format: date-time
          type: string
          example: "2021-03-09T10:57:54.294Z"
        memo:
          type: string
          example: Bill payment memo.
        lines:
          type: array
          items:
            $ref: '#/components/schemas/BillPaymentLineItem'
        subsidiaryRefs:
          type: array
          items:
            $ref: '#/components/schemas/SubsidiaryRef'
        sourceModifiedDate:
          format: date-time
          type: string
          example: "2021-03-09T10:18:29.985Z"
      required:
        - id
        - totalAmount
        - date
    GetBillPaymentResponseDto:
      type: object
      properties:
        pagination:
          $ref: '#/components/schemas/PaginationMetaData'
        meta:
          $ref: '#/components/schemas/TransactionalReportMetaData'
        count:
          type: number
          readOnly: true
          example: 1
          format: integer
        data:
          type: array
          items:
            $ref: '#/components/schemas/GetBillPaymentData'
      required:
        - pagination
        - meta
        - count
        - data
    BillPaymentLine:
      type: object
      properties:
        amount:
          type: number
          format: float
          example: "342.99"
        memo:
          type: string
          maxLength: 4000
          example: Sample memo for transaction
        billRef:
          type: string
          example: 3n2
      required:
        - billRef
    PushBillPayment:
      type: object
      properties:
        currencyRate:
          type: number
          format: float
          example: 1.13
        memo:
          type: string
          maxLength: 4000
          example: Bill payment memo.
        date:
          type: string
          format: date
          example: "2021-03-29"
        locationRef:
          type: string
          example: "3"
        totalAmount:
          type: number
          format: float
          example: 200.5
        trackingCategoryRef:
          type: string
          example: "23118"
        accountRef:
          type: string
          example: "132"
        vendorRef:
          type: string
          example: "250"
        billRef:
          type: string
          example: "250"
          deprecated: true
        currency:
          type: string
          example: CAD
        lines:
          type: array
          items:
            $ref: '#/components/schemas/BillPaymentLine'
        subsidiaryRefs:
          example:
            - "4"
          type: array
          items:
            type: string
    PushBillPaymentDto:
      type: object
      properties:
        connection:
          $ref: '#/components/schemas/PushConnection'
        data:
          $ref: '#/components/schemas/PushBillPayment'
      required:
        - connection
        - data
    PushBillPaymentResponseDto:
      type: object
      properties:
        pushCommunicationId:
          type: string
          readOnly: true
          example: 60473b57f0cdd1683ca71f60
        requestedOn:
          type: string
          readOnly: true
          example: "2021-03-09T08:15:22.035Z"
          format: date-time
        status:
          type: string
          readOnly: true
          example: pending
          enum:
            - success
            - failed
            - pending
        businessName:
          type: string
          readOnly: true
          example: Railz
        serviceName:
          type: string
          readOnly: true
          example: quickbooks
          enum:
            - freshbooks
            - quickbooks
            - quickbooksDesktop
            - xero
            - oracleNetsuite
            - sageBusinessCloud
            - sageIntacct
            - dynamicsBusinessCentral
            - wave
            - zohoBooks
        data:
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/PushBillPayment'
      required:
        - pushCommunicationId
        - requestedOn
        - status
        - businessName
        - serviceName
        - data
    BasicStartEndDateReportMetaData:
      type: object
      properties:
        reportId:
          readOnly: true
          example:
            - 5fad8a342a88364234392fb5
          type: array
          items:
            type: string
        serviceName:
          type: string
          readOnly: true
          example: xero
          enum:
            - freshbooks
            - quickbooks
            - quickbooksDesktop
            - xero
            - oracleNetsuite
            - sageBusinessCloud
            - sageIntacct
            - dynamicsBusinessCentral
            - wave
            - zohoBooks
        businessName:
          type: string
          readOnly: true
          example: Railz
        createdAt:
          type: string
          readOnly: true
          example: "2020-11-25T01:02:03Z"
          format: date-time
        updatedAt:
          type: string
          example: "2020-11-30T01:02:03Z"
          format: date-time
          readOnly: false
        startDate:
          type: string
          readOnly: true
          example: "2020-11-25T01:02:03Z"
          format: date-time
        endDate:
          type: string
          readOnly: true
          example: "2020-11-30T01:02:03Z"
          format: date-time
      required:
        - reportId
        - serviceName
        - businessName
        - createdAt
        - updatedAt
        - startDate
        - endDate
    InvoiceBillLineItemsV1:
      type: object
      properties:
        description:
          type: string
          example: Services rendered.
        unitAmount:
          type: number
          example: 100.5
          format: float
        quantity:
          type: number
          example: 3
          format: integer
        discountAmount:
          type: number
          example: 0
          format: float
        taxAmount:
          type: number
          example: 20.5
          format: float
        taxRateRef:
          $ref: '#/components/schemas/TaxRateRef'
        inventoryRef:
          $ref: '#/components/schemas/InventoryRef'
        discountPercentage:
          type: number
          example: 10.5
          format: float
        id:
          type: string
        accountRef:
          $ref: '#/components/schemas/AccountRef'
        totalAmount:
          type: number
          example: 10.5
          format: float
          deprecated: true
        subTotal:
          type: number
          example: 301.5
          format: float
          deprecated: true
        trackingCategoryRef:
          deprecated: true
          allOf:
            - $ref: '#/components/schemas/TrackingCategoryRef'
    GetBillCreditNoteDataV1:
      type: object
      properties:
        id:
          type: string
          example: "1"
        postedDate:
          format: date-time
          type: string
          example: "2021-03-09T10:18:29.985Z"
        allocatedOnDate:
          format: date-time
          type: string
          example: "2021-03-09T10:18:29.985Z"
        currencyRef:
          $ref: '#/components/schemas/CurrencyRef'
        currencyRate:
          type: number
          example: 1.13
          format: float
        totalDiscount:
          type: number
          example: 322
          format: float
        discountPercentage:
          type: number
          example: 322
          format: float
        subTotal:
          type: number
          example: 301.5
          format: float
        taxAmount:
          type: number
          example: 20.5
          format: float
        totalAmount:
          type: number
          example: 322
          format: float
        remainingCredit:
          type: number
          example: 322
          format: float
        status:
          type: string
          enum:
            - open
            - paid
            - partiallyPaid
            - void
            - unknown
            - draft
        memo:
          type: string
          example: Example bill memo.
        payments:
          type: array
          items:
            $ref: '#/components/schemas/Payments'
        sourceModifiedDate:
          format: date-time
          type: string
          example: "2021-03-09T10:18:29.985Z"
        locationRef:
          $ref: '#/components/schemas/LocationRef'
        vendorRef:
          $ref: '#/components/schemas/VendorRef'
        lines:
          type: array
          items:
            $ref: '#/components/schemas/InvoiceBillLineItemsV1'
      required:
        - id
        - postedDate
        - totalAmount
        - status
    GetBillCreditNoteResponseDto:
      type: object
      properties:
        pagination:
          $ref: '#/components/schemas/PaginationMetaData'
        meta:
          readOnly: false
          allOf:
            - $ref: '#/components/schemas/BasicStartEndDateReportMetaData'
        count:
          type: number
          example: 1
          format: integer
          readOnly: true
        data:
          type: array
          items:
            $ref: '#/components/schemas/GetBillCreditNoteDataV1'
      required:
        - pagination
        - meta
        - count
        - data
    BillCreditNoteLineItem:
      type: object
      properties:
        description:
          type: string
          maxLength: 4000
          example: Services rendered.
        unitAmount:
          type: number
          format: float
          example: 100.5
        quantity:
          type: number
          format: float
          example: 3
        billableStatus:
          type: string
          example: notBillable
          enum:
            - billable
            - notBillable
            - hasBeenBilled
        taxAmount:
          type: number
          format: float
          example: 20.5
        taxRef:
          type: string
          example: "24"
        accountRef:
          type: string
          example: "200"
        subTotal:
          type: number
          format: float
          example: 301.5
          deprecated: true
        totalAmount:
          type: number
          format: float
          example: 322
          deprecated: true
        customerRef:
          $ref: '#/components/schemas/CustomerObjectRefDto'
      required:
        - unitAmount
        - quantity
    PushBillCreditNote:
      type: object
      properties:
        currencyRate:
          type: number
          format: float
          example: 1.13
        postedDate:
          type: string
          format: date
          example: "2021-03-29"
        allocatedOnDate:
          type: string
          format: date
          example: "2021-03-29"
        memo:
          type: string
          maxLength: 4000
          example: Example memo.
        vendorRef:
          type: string
          example: "124"
        currency:
          type: string
          example: CAD
        lines:
          minItems: 1
          type: array
          items:
            $ref: '#/components/schemas/BillCreditNoteLineItem'
      required:
        - vendorRef
        - lines
    PushBillCreditNoteDto:
      type: object
      properties:
        connection:
          $ref: '#/components/schemas/PushConnection'
        data:
          $ref: '#/components/schemas/PushBillCreditNote'
      required:
        - connection
        - data
    PushBillCreditNoteResponseDto:
      type: object
      properties:
        pushCommunicationId:
          type: string
          readOnly: true
          example: 60473b57f0cdd1683ca71f60
        requestedOn:
          type: string
          readOnly: true
          example: "2021-03-09T08:15:22.035Z"
          format: date-time
        status:
          type: string
          readOnly: true
          example: pending
          enum:
            - success
            - failed
            - pending
        businessName:
          type: string
          readOnly: true
          example: Railz
        serviceName:
          type: string
          readOnly: true
          example: quickbooks
          enum:
            - freshbooks
            - quickbooks
            - quickbooksDesktop
            - xero
            - oracleNetsuite
            - sageBusinessCloud
            - sageIntacct
            - dynamicsBusinessCentral
            - wave
            - zohoBooks
        data:
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/PushBillCreditNote'
      required:
        - pushCommunicationId
        - requestedOn
        - status
        - businessName
        - serviceName
        - data
    PurchaseOrderRef:
      type: object
      properties:
        id:
          type: string
          example: "15"
        purchaseOrderNumber:
          type: string
          example: "1500"
      required:
        - id
    TrackingCategoryResponse:
      type: object
      properties:
        id:
          type: string
          example: "4040"
          readOnly: false
        name:
          type: string
          readOnly: false
          example: Region
        type:
          type: string
          example: class
          enum:
            - class
            - department
            - location
            - unknown
    BillLineItemsV2:
      type: object
      properties:
        id:
          type: string
          example: 8a3fdcc9-83eb-4fdd-83e0-52ec1b40b072
        accountRef:
          $ref: '#/components/schemas/AccountRef'
        taxRateRef:
          $ref: '#/components/schemas/TaxRateRef'
        inventoryRef:
          $ref: '#/components/schemas/InventoryRef'
        trackingCategoryRefs:
          type: array
          items:
            $ref: '#/components/schemas/TrackingCategoryResponse'
        description:
          type: string
          example: Services rendered.
        unitAmount:
          type: number
          example: 100.5
          format: float
        quantity:
          type: number
          example: 3
          format: integer
        discountAmount:
          type: number
          example: 0
          format: float
        taxAmount:
          type: number
          example: 20.5
          format: float
        amount:
          type: number
          example: 322
          format: float
        discountPercentage:
          type: number
          example: 10.5
          format: float
        customerRef:
          $ref: '#/components/schemas/CustomerObjectRefResponse'
        billableStatus:
          type: string
          example: notBillable
          enum:
            - billable
            - notBillable
            - hasBeenBilled
      required:
        - id
        - amount
    GetBillV2Data:
      type: object
      properties:
        id:
          type: string
          example: "1"
        vendorRef:
          $ref: '#/components/schemas/VendorRef'
        purchaseOrderRefs:
          type: array
          items:
            $ref: '#/components/schemas/PurchaseOrderRef'
        postedDate:
          format: date-time
          type: string
          example: "2021-03-09T10:18:29.985Z"
        dueDate:
          format: date-time
          type: string
          example: "2021-03-09T10:18:29.985Z"
        currency:
          type: string
          example: USD
        currencyRate:
          type: number
          example: 1.13
          format: float
        vendorInvoiceNumber:
          type: string
          example: INV-0028
        lines:
          type: array
          items:
            $ref: '#/components/schemas/BillLineItemsV2'
        status:
          type: string
          enum:
            - open
            - draft
            - partiallyPaid
            - paid
            - unknown
            - void
        subTotal:
          type: number
          example: 301.5
          format: float
        taxAmount:
          type: number
          example: 20.5
          format: float
        totalAmount:
          type: number
          example: 322
          format: float
        amountDue:
          type: number
          example: 322
          format: float
        memo:
          type: string
          example: Example bill memo.
        payments:
          type: array
          items:
            $ref: '#/components/schemas/Payments'
        subsidiaryRefs:
          type: array
          items:
            $ref: '#/components/schemas/SubsidiaryRef'
        sourceModifiedDate:
          format: date-time
          type: string
          example: "2021-03-09T10:18:29.985Z"
      required:
        - id
        - postedDate
        - lines
        - status
        - totalAmount
    GetBillResponseV2Dto:
      type: object
      properties:
        pagination:
          $ref: '#/components/schemas/PaginationMetaData'
        meta:
          $ref: '#/components/schemas/TransactionalReportMetaDataV2'
        data:
          type: array
          items:
            $ref: '#/components/schemas/GetBillV2Data'
      required:
        - pagination
        - meta
        - data
    VendorRefDto:
      type: object
      properties:
        id:
          type: string
          example: "130"
      required:
        - id
    BillTrackingCategoryRefDto:
      type: object
      properties:
        id:
          type: string
          example: "4040"
        type:
          type: string
          example: class
          enum:
            - class
            - department
            - location
            - unknown
      required:
        - id
    InventoryRefDto:
      type: object
      properties:
        id:
          type: string
          example: "32"
      required:
        - id
    PushBillLineItemV2:
      type: object
      properties:
        id:
          type: string
          example: 8a3fdcc9-83eb-4fdd-83e0-52ec1b40b072
        accountRef:
          $ref: '#/components/schemas/AccountRefDto'
        trackingCategoryRefs:
          type: array
          items:
            $ref: '#/components/schemas/BillTrackingCategoryRefDto'
        taxRateRef:
          $ref: '#/components/schemas/TaxRateRefDto'
        description:
          type: string
          maxLength: 4000
          example: Services rendered.
        unitAmount:
          type: number
          format: float
          example: 100.5
        quantity:
          type: number
          format: float
          example: 3
        customerRef:
          $ref: '#/components/schemas/CustomerObjectRefDto'
        billableStatus:
          type: string
          example: notBillable
          enum:
            - billable
            - notBillable
            - hasBeenBilled
        discountPercentage:
          type: number
          format: float
          example: 100.5
        inventoryRef:
          $ref: '#/components/schemas/InventoryRefDto'
        taxAmount:
          type: number
          format: float
          example: 100.5
      required:
        - unitAmount
        - quantity
    PushBillV2:
      type: object
      properties:
        vendorInvoiceNumber:
          type: string
          maxLength: 21
          example: "254"
        postedDate:
          type: string
          format: date
          example: "2021-03-29"
        dueDate:
          type: string
          format: date
          example: "2021-03-29"
        currencyRate:
          type: number
          format: float
          example: 1.13
        memo:
          type: string
          maxLength: 4000
          example: Example bill memo.
        vendorRef:
          $ref: '#/components/schemas/VendorRefDto'
        currency:
          type: string
          example: CAD
        subsidiaryRefs:
          type: array
          items:
            $ref: '#/components/schemas/SubsidiaryRefDto'
        lines:
          type: array
          items:
            $ref: '#/components/schemas/PushBillLineItemV2'
        purchaseOrderRefs:
          type: array
          items:
            $ref: '#/components/schemas/PurchaseOrderRefDto'
        passThrough:
          type: object
          example:
            CustomField:
              - DefinitionId: "1"
                StringValue: my custom value
                Name: Field One
      required:
        - vendorRef
        - lines
    PushBillV2Dto:
      type: object
      properties:
        connectionUuid:
          type: string
          description: Unique connection identifier.
          example: CON-396d5daa-26b2-4979-89b6-cafb2c298155
        data:
          $ref: '#/components/schemas/PushBillV2'
      required:
        - connectionUuid
        - data
    PushBillResponseV2Dto:
      type: object
      properties:
        connectionUuid:
          type: string
          readOnly: true
          example: CON-396d5daa-26b2-4979-89b6-cafb2c298155
        businessName:
          type: string
          readOnly: true
          example: Railz
        serviceName:
          type: string
          readOnly: true
          example: xero
          enum:
            - freshbooks
            - quickbooks
            - quickbooksDesktop
            - xero
            - oracleNetsuite
            - sageBusinessCloud
            - sageIntacct
            - dynamicsBusinessCentral
            - wave
            - zohoBooks
        pushCommunicationId:
          type: string
          readOnly: true
          example: 60473b57f0cdd1683ca71f60
        requestedOn:
          type: string
          readOnly: true
          example: "2021-03-09T08:15:22.035Z"
          format: date-time
        status:
          type: string
          readOnly: true
          example: pending
          enum:
            - success
            - failed
            - pending
        data:
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/PushBillV2'
      required:
        - connectionUuid
        - businessName
        - serviceName
        - pushCommunicationId
        - requestedOn
        - status
        - data
    UpdateBillLineItemV2:
      type: object
      properties:
        description:
          type: string
          maxLength: 4000
          example: Services rendered.
        unitAmount:
          type: number
          format: float
          example: 50.5
        quantity:
          type: number
          format: float
          example: 202
        billableStatus:
          type: string
          example: notBillable
          enum:
            - billable
            - notBillable
            - hasBeenBilled
        customerRef:
          $ref: '#/components/schemas/CustomerObjectRefDto'
        id:
          type: string
          example: 8a3fdcc9-83eb-4fdd-83e0-52ec1b40b072
        accountRef:
          $ref: '#/components/schemas/AccountRefDto'
        trackingCategoryRefs:
          type: array
          items:
            $ref: '#/components/schemas/BillTrackingCategoryRefDto'
        discountPercentage:
          type: number
          format: float
          example: 100.5
        inventoryRef:
          $ref: '#/components/schemas/InventoryRefDto'
        taxRateRef:
          $ref: '#/components/schemas/TaxRateRefDto'
        taxAmount:
          type: number
          format: float
          example: 20.5
      required:
        - unitAmount
        - quantity
    UpdateBillsV2:
      type: object
      properties:
        vendorInvoiceNumber:
          type: string
          maxLength: 21
          example: "254"
        postedDate:
          type: string
          format: date
          example: "2021-03-29"
        dueDate:
          type: string
          format: date
          example: "2021-03-29"
        currencyRate:
          type: number
          format: float
          example: 1.13
        memo:
          type: string
          maxLength: 4000
          example: Example bill memo.
        vendorRef:
          $ref: '#/components/schemas/VendorRefDto'
        currency:
          type: string
          example: CAD
        subsidiaryRefs:
          type: array
          items:
            $ref: '#/components/schemas/SubsidiaryRefDto'
        lines:
          type: array
          items:
            $ref: '#/components/schemas/UpdateBillLineItemV2'
        purchaseOrderRefs:
          type: array
          items:
            $ref: '#/components/schemas/PurchaseOrderRefDto'
        passThrough:
          type: object
          example:
            CustomField:
              - DefinitionId: "1"
                StringValue: my custom value
                Name: Field One
      required:
        - vendorRef
        - lines
    UpdateBillsV2Dto:
      type: object
      properties:
        connectionUuid:
          type: string
          description: Unique connection identifier.
          example: CON-396d5daa-26b2-4979-89b6-cafb2c298155
        data:
          $ref: '#/components/schemas/UpdateBillsV2'
      required:
        - connectionUuid
        - data
    UpdateBillsResponseV2Dto:
      type: object
      properties:
        connectionUuid:
          type: string
          readOnly: true
          example: CON-396d5daa-26b2-4979-89b6-cafb2c298155
        businessName:
          type: string
          readOnly: true
          example: Railz
        serviceName:
          type: string
          readOnly: true
          example: xero
          enum:
            - freshbooks
            - quickbooks
            - quickbooksDesktop
            - xero
            - oracleNetsuite
            - sageBusinessCloud
            - sageIntacct
            - dynamicsBusinessCentral
            - wave
            - zohoBooks
        pushCommunicationId:
          type: string
          readOnly: true
          example: 60473b57f0cdd1683ca71f60
        requestedOn:
          type: string
          readOnly: true
          example: "2021-03-09T08:15:22.035Z"
          format: date-time
        status:
          type: string
          readOnly: true
          example: pending
          enum:
            - success
            - failed
            - pending
        data:
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/UpdateBillsV2'
      required:
        - connectionUuid
        - businessName
        - serviceName
        - pushCommunicationId
        - requestedOn
        - status
        - data
    SaveDeleteCommunicationResponseV2:
      type: object
      properties:
        connectionUuid:
          type: string
          readOnly: true
          example: CON-396d5daa-26b2-4979-89b6-cafb2c298155
        businessName:
          type: string
          readOnly: true
          example: Railz
        serviceName:
          type: string
          readOnly: true
          example: xero
          enum:
            - freshbooks
            - quickbooks
            - quickbooksDesktop
            - xero
            - oracleNetsuite
            - sageBusinessCloud
            - sageIntacct
            - dynamicsBusinessCentral
            - wave
            - zohoBooks
        deleteCommunicationId:
          type: string
          readOnly: true
          example: 645102bca1b57c57cc241173
        requestedOn:
          type: string
          readOnly: true
          example: "2022-06-24T09:40:11.088Z"
          format: date-time
        status:
          type: string
          readOnly: true
          example: pending
          enum:
            - success
            - failed
            - pending
      required:
        - connectionUuid
        - businessName
        - serviceName
        - deleteCommunicationId
        - requestedOn
        - status
    PaymentMethodRefResponse:
      type: object
      properties:
        id:
          type: string
          example: "3"
        name:
          type: string
          example: Harmonized sales tax
        type:
          type: string
          example: creditCard
          enum:
            - unknown
            - cash
            - check
            - creditCard
            - debitCard
            - bankTransfer
            - giftCard
            - other
    BillPaymentLineV2Item:
      type: object
      properties:
        amount:
          type: number
          example: 200.5
          format: float
        links:
          type: array
          items:
            $ref: '#/components/schemas/BillPLinks'
        allocatedOnDate:
          format: date-time
          type: string
          example: "2021-03-09T10:57:54.294Z"
    GetBillPaymentV2Data:
      type: object
      properties:
        id:
          type: string
          example: "1"
        vendorRef:
          $ref: '#/components/schemas/VendorRef'
        accountRef:
          $ref: '#/components/schemas/AccountRef'
        totalAmount:
          type: number
          example: 200.5
          format: float
        currency:
          type: string
          example: USD
        currencyRate:
          type: number
          example: 1.13
          format: float
        date:
          format: date-time
          type: string
          example: "2021-03-09T10:57:54.294Z"
        memo:
          type: string
          example: Bill payment memo.
        paymentMethod:
          type: string
          enum:
            - unknown
            - cash
            - check
            - creditCard
            - debitCard
            - bankTransfer
            - giftCard
            - other
          example: creditCard
        paymentMethodRef:
          $ref: '#/components/schemas/PaymentMethodRefResponse'
        lines:
          type: array
          items:
            $ref: '#/components/schemas/BillPaymentLineV2Item'
        subsidiaryRefs:
          type: array
          items:
            $ref: '#/components/schemas/SubsidiaryRef'
        sourceModifiedDate:
          format: date-time
          type: string
          example: "2021-03-09T10:18:29.985Z"
      required:
        - id
        - totalAmount
        - date
    GetBillPaymentResponseV2Dto:
      type: object
      properties:
        pagination:
          $ref: '#/components/schemas/PaginationMetaData'
        meta:
          $ref: '#/components/schemas/TransactionalReportMetaDataV2'
        data:
          type: array
          items:
            $ref: '#/components/schemas/GetBillPaymentV2Data'
      required:
        - pagination
        - meta
        - data
    LinkRefDto:
      type: object
      properties:
        id:
          type: string
          example: 3n2
        type:
          type: string
          example: bill
          enum:
            - bill
            - other
            - creditNote
            - billPayment
            - paymentOnAccount
            - refund
      required:
        - id
    BillPaymentLineV2:
      type: object
      properties:
        amount:
          type: number
          format: float
          example: "342.99"
        links:
          type: array
          items:
            $ref: '#/components/schemas/LinkRefDto'
        allocatedOnDate:
          format: date
          type: string
          example: "2021-03-29"
    PaymentMethodRefDto:
      type: object
      properties:
        id:
          type: string
          example: "1"
        name:
          type: string
          example: Harmonized sales tax
        type:
          type: string
          example: creditCard
          enum:
            - unknown
            - cash
            - check
            - creditCard
            - debitCard
            - bankTransfer
            - giftCard
            - other
    PushBillPaymentV2:
      type: object
      properties:
        currencyRate:
          type: number
          format: float
          example: 1.13
        memo:
          type: string
          maxLength: 4000
          example: Bill payment memo.
        date:
          type: string
          format: date
          example: "2021-03-29"
        totalAmount:
          type: number
          format: float
          example: 200.5
        vendorRef:
          $ref: '#/components/schemas/VendorRefDto'
        accountRef:
          $ref: '#/components/schemas/AccountRefDto'
        currency:
          type: string
          example: CAD
        lines:
          type: array
          items:
            $ref: '#/components/schemas/BillPaymentLineV2'
        subsidiaryRefs:
          type: array
          items:
            $ref: '#/components/schemas/SubsidiaryRefDto'
        paymentMethod:
          type: string
          enum:
            - unknown
            - cash
            - check
            - creditCard
            - debitCard
            - bankTransfer
            - giftCard
            - other
          example: creditCard
        paymentMethodRef:
          $ref: '#/components/schemas/PaymentMethodRefDto'
        passThrough:
          type: object
          example:
            CustomField:
              - DefinitionId: "1"
                StringValue: my custom value
                Name: Field One
    PushBillPaymentV2Dto:
      type: object
      properties:
        connectionUuid:
          type: string
          description: Unique connection identifier.
          example: CON-396d5daa-26b2-4979-89b6-cafb2c298155
        data:
          $ref: '#/components/schemas/PushBillPaymentV2'
      required:
        - connectionUuid
        - data
    PushBillPaymentResponseV2Dto:
      type: object
      properties:
        connectionUuid:
          type: string
          readOnly: true
          example: CON-396d5daa-26b2-4979-89b6-cafb2c298155
        businessName:
          type: string
          readOnly: true
          example: Railz
        serviceName:
          type: string
          readOnly: true
          example: xero
          enum:
            - freshbooks
            - quickbooks
            - quickbooksDesktop
            - xero
            - oracleNetsuite
            - sageBusinessCloud
            - sageIntacct
            - dynamicsBusinessCentral
            - wave
            - zohoBooks
        pushCommunicationId:
          type: string
          readOnly: true
          example: 60473b57f0cdd1683ca71f60
        requestedOn:
          type: string
          readOnly: true
          example: "2021-03-09T08:15:22.035Z"
          format: date-time
        status:
          type: string
          readOnly: true
          example: pending
          enum:
            - success
            - failed
            - pending
        data:
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/PushBillPaymentV2'
      required:
        - connectionUuid
        - businessName
        - serviceName
        - pushCommunicationId
        - requestedOn
        - status
        - data
    UpdateBillPaymentV2:
      type: object
      properties:
        currencyRate:
          type: number
          format: float
          example: 1.13
        memo:
          type: string
          maxLength: 4000
          example: Bill payment memo.
        date:
          type: string
          format: date
          example: "2021-03-29"
        totalAmount:
          type: number
          format: float
          example: 200.5
        vendorRef:
          $ref: '#/components/schemas/VendorRefDto'
        accountRef:
          $ref: '#/components/schemas/AccountRefDto'
        currency:
          type: string
          example: CAD
        lines:
          type: array
          items:
            $ref: '#/components/schemas/BillPaymentLineV2'
        subsidiaryRefs:
          type: array
          items:
            $ref: '#/components/schemas/SubsidiaryRefDto'
        paymentMethod:
          type: string
          enum:
            - unknown
            - cash
            - check
            - creditCard
            - debitCard
            - bankTransfer
            - giftCard
            - other
          example: creditCard
        paymentMethodRef:
          $ref: '#/components/schemas/PaymentMethodRefDto'
        passThrough:
          type: object
          example:
            CustomField:
              - DefinitionId: "1"
                StringValue: my custom value
                Name: Field One
    UpdateBillPaymentV2Dto:
      type: object
      properties:
        connectionUuid:
          type: string
          description: Unique connection identifier.
          example: CON-396d5daa-26b2-4979-89b6-cafb2c298155
        data:
          $ref: '#/components/schemas/UpdateBillPaymentV2'
      required:
        - connectionUuid
        - data
    UpdateBillPaymentResponseV2Dto:
      type: object
      properties:
        connectionUuid:
          type: string
          readOnly: true
          example: CON-396d5daa-26b2-4979-89b6-cafb2c298155
        businessName:
          type: string
          readOnly: true
          example: Railz
        serviceName:
          type: string
          readOnly: true
          example: xero
          enum:
            - freshbooks
            - quickbooks
            - quickbooksDesktop
            - xero
            - oracleNetsuite
            - sageBusinessCloud
            - sageIntacct
            - dynamicsBusinessCentral
            - wave
            - zohoBooks
        pushCommunicationId:
          type: string
          readOnly: true
          example: 60473b57f0cdd1683ca71f60
        requestedOn:
          type: string
          readOnly: true
          example: "2021-03-09T08:15:22.035Z"
          format: date-time
        status:
          type: string
          readOnly: true
          example: pending
          enum:
            - success
            - failed
            - pending
        data:
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/UpdateBillPaymentV2'
      required:
        - connectionUuid
        - businessName
        - serviceName
        - pushCommunicationId
        - requestedOn
        - status
        - data
    BasicStartEndDateReportMetaDataV2:
      type: object
      properties:
        connectionUuid:
          type: string
          readOnly: true
          example: CON-396d5daa-26b2-4979-89b6-cafb2c298155
        businessName:
          type: string
          readOnly: true
          example: Railz
        serviceName:
          type: string
          readOnly: true
          example: xero
          enum:
            - freshbooks
            - quickbooks
            - quickbooksDesktop
            - xero
            - oracleNetsuite
            - sageBusinessCloud
            - sageIntacct
            - dynamicsBusinessCentral
            - wave
            - zohoBooks
        reportId:
          readOnly: true
          example:
            - 5fad8a342a88364234392fb5
          type: array
          items:
            type: string
        createdAt:
          type: string
          readOnly: true
          example: "2020-11-25T01:02:03Z"
          format: date-time
        updatedAt:
          type: string
          example: "2020-11-30T01:02:03Z"
          format: date-time
          readOnly: false
        startDate:
          type: string
          readOnly: true
          example: "2020-11-25T01:02:03Z"
          format: date-time
        endDate:
          type: string
          readOnly: true
          example: "2020-11-30T01:02:03Z"
          format: date-time
      required:
        - connectionUuid
        - businessName
        - serviceName
        - reportId
        - createdAt
        - updatedAt
        - startDate
        - endDate
    TrackingCategoryRefV2:
      type: object
      properties:
        id:
          type: string
          example: "4040"
          readOnly: false
        name:
          type: string
          readOnly: false
          example: Region
        type:
          type: string
          example: class
          enum:
            - class
            - department
            - location
            - unknown
      required:
        - id
        - type
    InvoiceBillLineItemsV2:
      type: object
      properties:
        description:
          type: string
          example: Services rendered.
        unitAmount:
          type: number
          example: 100.5
          format: float
        quantity:
          type: number
          example: 3
          format: integer
        discountAmount:
          type: number
          example: 0
          format: float
        taxAmount:
          type: number
          example: 20.5
          format: float
        taxRateRef:
          $ref: '#/components/schemas/TaxRateRef'
        inventoryRef:
          $ref: '#/components/schemas/InventoryRef'
        discountPercentage:
          type: number
          example: 10.5
          format: float
        id:
          type: string
        accountRef:
          $ref: '#/components/schemas/AccountRef'
        amount:
          type: number
          example: 10.5
          format: float
        trackingCategoryRefs:
          type: array
          items:
            $ref: '#/components/schemas/TrackingCategoryRefV2'
    GetBillCreditNoteDataV2:
      type: object
      properties:
        id:
          type: string
          example: "1"
        postedDate:
          format: date-time
          type: string
          example: "2021-03-09T10:18:29.985Z"
        allocatedOnDate:
          format: date-time
          type: string
          example: "2021-03-09T10:18:29.985Z"
        currency:
          type: string
          example: USD
        currencyRate:
          type: number
          example: 1.13
          format: float
        totalDiscount:
          type: number
          example: 322
          format: float
        discountPercentage:
          type: number
          example: 322
          format: float
        subTotal:
          type: number
          example: 301.5
          format: float
        taxAmount:
          type: number
          example: 20.5
          format: float
        totalAmount:
          type: number
          example: 322
          format: float
        remainingCredit:
          type: number
          example: 322
          format: float
        status:
          type: string
          enum:
            - open
            - paid
            - partiallyPaid
            - void
            - unknown
            - draft
        memo:
          type: string
          example: Example bill memo.
        payments:
          type: array
          items:
            $ref: '#/components/schemas/Payments'
        vendorRef:
          $ref: '#/components/schemas/VendorRef'
        lines:
          type: array
          items:
            $ref: '#/components/schemas/InvoiceBillLineItemsV2'
        subsidiaryRefs:
          type: array
          items:
            $ref: '#/components/schemas/SubsidiaryRef'
        sourceModifiedDate:
          format: date-time
          type: string
          example: "2021-03-09T10:18:29.985Z"
        billCreditNoteNumber:
          type: string
          description: The buyer facing document number of the bill credit note.
      required:
        - id
        - postedDate
        - totalAmount
        - status
        - vendorRef
        - lines
    GetBillCreditNoteResponseV2Dto:
      type: object
      properties:
        pagination:
          $ref: '#/components/schemas/PaginationMetaData'
        meta:
          readOnly: false
          allOf:
            - $ref: '#/components/schemas/BasicStartEndDateReportMetaDataV2'
        count:
          type: number
          example: 1
          format: integer
          readOnly: true
          deprecated: true
        data:
          type: array
          items:
            $ref: '#/components/schemas/GetBillCreditNoteDataV2'
      required:
        - pagination
        - meta
        - count
        - data
    CreditNoteTrackingCategoryRefDto:
      type: object
      properties:
        id:
          type: string
          example: "4040"
        type:
          type: string
          example: class
          enum:
            - class
            - department
            - location
            - unknown
      required:
        - id
    BillCreditNoteLineItemV2:
      type: object
      properties:
        description:
          type: string
          maxLength: 4000
          example: Services rendered.
        unitAmount:
          type: number
          format: float
          example: 100.5
        quantity:
          type: number
          format: float
          example: 3
        billableStatus:
          type: string
          example: notBillable
          enum:
            - billable
            - notBillable
            - hasBeenBilled
        id:
          type: string
        discountPercentage:
          type: number
          format: float
          example: 301.5
        taxRateRef:
          $ref: '#/components/schemas/TaxRateRefDto'
        accountRef:
          $ref: '#/components/schemas/AccountRefDto'
        trackingCategoryRefs:
          type: array
          items:
            $ref: '#/components/schemas/CreditNoteTrackingCategoryRefDto'
        inventoryRef:
          $ref: '#/components/schemas/InventoryRefDto'
        taxAmount:
          type: number
          format: float
          example: 301.5
      required:
        - unitAmount
        - quantity
    PushBillCreditNoteV2:
      type: object
      properties:
        currencyRate:
          type: number
          format: float
          example: 1.13
        postedDate:
          type: string
          format: date
          example: "2021-03-29"
        allocatedOnDate:
          type: string
          format: date
          example: "2021-03-29"
        memo:
          type: string
          maxLength: 4000
          example: Example memo.
        vendorRef:
          $ref: '#/components/schemas/VendorRefDto'
        currency:
          type: string
          example: CAD
        lines:
          minItems: 1
          type: array
          items:
            $ref: '#/components/schemas/BillCreditNoteLineItemV2'
        subsidiaryRefs:
          type: array
          items:
            $ref: '#/components/schemas/SubsidiaryRefDto'
        passThrough:
          type: object
          example:
            CustomField:
              - DefinitionId: "1"
                StringValue: my custom value
                Name: Field One
        billCreditNoteNumber:
          type: string
          description: The buyer facing document number of the bill credit note.
      required:
        - vendorRef
        - lines
    PushBillCreditNoteV2Dto:
      type: object
      properties:
        connectionUuid:
          type: string
          description: Unique connection identifier.
          example: CON-396d5daa-26b2-4979-89b6-cafb2c298155
        data:
          $ref: '#/components/schemas/PushBillCreditNoteV2'
      required:
        - connectionUuid
        - data
    PushBillCreditNoteResponseV2Dto:
      type: object
      properties:
        connectionUuid:
          type: string
          readOnly: true
          example: CON-396d5daa-26b2-4979-89b6-cafb2c298155
        businessName:
          type: string
          readOnly: true
          example: Railz
        serviceName:
          type: string
          readOnly: true
          example: xero
          enum:
            - freshbooks
            - quickbooks
            - quickbooksDesktop
            - xero
            - oracleNetsuite
            - sageBusinessCloud
            - sageIntacct
            - dynamicsBusinessCentral
            - wave
            - zohoBooks
        pushCommunicationId:
          type: string
          readOnly: true
          example: 60473b57f0cdd1683ca71f60
        requestedOn:
          type: string
          readOnly: true
          example: "2021-03-09T08:15:22.035Z"
          format: date-time
        status:
          type: string
          readOnly: true
          example: pending
          enum:
            - success
            - failed
            - pending
        data:
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/PushBillCreditNoteV2'
      required:
        - connectionUuid
        - businessName
        - serviceName
        - pushCommunicationId
        - requestedOn
        - status
        - data
    BillPaymentRequestMetaData:
      type: object
      properties:
        reportId:
          readOnly: true
          example:
            - 5fad8a342a88364234392fb5
            - 5fad8a342a88364234392fb6
          type: array
          items:
            type: string
        serviceName:
          type: string
          readOnly: true
          example: xero
          enum:
            - freshbooks
            - quickbooks
            - quickbooksDesktop
            - xero
            - oracleNetsuite
            - sageBusinessCloud
            - sageIntacct
            - dynamicsBusinessCentral
            - wave
            - zohoBooks
        businessName:
          type: string
          readOnly: true
          example: Railz
        startDate:
          type: string
          example: "2020-11-25T01:02:03Z"
          format: date-time
        endDate:
          type: string
          example: "2020-11-30T01:02:03Z"
          format: date-time
        createdAt:
          type: string
          example: "2020-11-25T01:02:03Z"
          format: date-time
        updatedAt:
          type: string
          example: "2020-11-30T01:02:03Z"
          format: date-time
          readOnly: false
      required:
        - reportId
        - serviceName
        - businessName
        - createdAt
        - updatedAt
    PaymentRequestPaymentMethodRefDto:
      type: object
      properties:
        id:
          type: string
          example: "1"
        name:
          type: string
          example: Harmonized sales tax
        type:
          type: string
          example: creditCard
          enum:
            - unknown
            - cash
            - printedCheck
            - manualCheck
            - creditCard
            - debitCard
            - bankTransfer
            - giftCard
            - automatedClearingHouse
            - other
    GetBillPaymentRequestDataV2:
      type: object
      properties:
        id:
          type: string
          example: "1"
        batchId:
          type: string
          example: "1"
        vendorRef:
          $ref: '#/components/schemas/VendorRef'
        bankAccountRef:
          $ref: '#/components/schemas/AccountRef'
        paymentNumber:
          type: string
          example: "1"
        paymentCode:
          type: string
          example: "1"
        paymentDate:
          format: date-time
          type: string
          example: "2021-03-09T10:18:29.985Z"
        postedDate:
          format: date-time
          type: string
          example: "2021-03-09T10:18:29.985Z"
        currency:
          type: string
          example: "1"
        paymentAmount:
          type: number
          example: 301.5
          format: float
        totalAmount:
          type: number
          example: 20.5
          format: float
        totalPaid:
          type: number
          example: 322
          format: float
        amountDue:
          type: number
          example: 322
          format: float
        state:
          type: string
          example: approved
          enum:
            - approved
            - open
            - partiallyPaid
            - posted
            - void
            - unknown
            - draft
        links:
          type: array
          items:
            $ref: '#/components/schemas/BillPLinks'
        paymentMethodRef:
          $ref: '#/components/schemas/PaymentRequestPaymentMethodRefDto'
        memo:
          type: string
          example: Example bill memo.
        sourceModifiedDate:
          format: date-time
          type: string
          example: "2021-03-09T10:18:29.985Z"
      required:
        - id
        - vendorRef
        - paymentAmount
        - state
    GetBillPaymentRequestV2ResponseDto:
      type: object
      properties:
        meta:
          $ref: '#/components/schemas/BillPaymentRequestMetaData'
        pagination:
          $ref: '#/components/schemas/PaginationMetaData'
        data:
          type: array
          items:
            $ref: '#/components/schemas/GetBillPaymentRequestDataV2'
      required:
        - meta
        - pagination
        - data
    UpdateBillPaymentRequestV2:
      type: object
      properties:
        state:
          type: string
          example: paid
          enum:
            - paid
    UpdateBillPaymentRequestV2Dto:
      type: object
      properties:
        connectionUuid:
          type: string
          description: Unique connection identifier.
          example: CON-396d5daa-26b2-4979-89b6-cafb2c298155
        data:
          $ref: '#/components/schemas/UpdateBillPaymentRequestV2'
      required:
        - connectionUuid
        - data
    BillPaymentRequestLinks:
      type: object
      properties:
        amount:
          type: number
          format: float
        id:
          type: string
      required:
        - amount
        - id
    PostBillPaymentRequestV2:
      type: object
      properties:
        vendorRef:
          $ref: '#/components/schemas/VendorRefDto'
        paymentNumber:
          type: string
          example: "456"
        paymentCode:
          type: string
          example: "1234"
        paymentDate:
          type: string
          format: date
          example: "2021-03-29"
        bankAccountRef:
          $ref: '#/components/schemas/BankAccountRefDto'
        currency:
          type: string
          example: USD
        totalAmount:
          type: number
          format: decimal
          example: "43.5"
        paymentMethodRef:
          $ref: '#/components/schemas/PaymentRequestPaymentMethodRefDto'
        memo:
          type: string
        links:
          type: array
          items:
            $ref: '#/components/schemas/BillPaymentRequestLinks'
      required:
        - bankAccountRef
        - links
    PostBillPaymentRequestV2Dto:
      type: object
      properties:
        connectionUuid:
          type: string
          description: Unique connection identifier.
          example: CON-396d5daa-26b2-4979-89b6-cafb2c298155
        data:
          $ref: '#/components/schemas/PostBillPaymentRequestV2'
      required:
        - connectionUuid
        - data
    PostBillPaymentRequestResponseV2Dto:
      type: object
      properties:
        connectionUuid:
          type: string
          readOnly: true
          example: CON-396d5daa-26b2-4979-89b6-cafb2c298155
        businessName:
          type: string
          readOnly: true
          example: Railz
        serviceName:
          type: string
          readOnly: true
          example: xero
          enum:
            - freshbooks
            - quickbooks
            - quickbooksDesktop
            - xero
            - oracleNetsuite
            - sageBusinessCloud
            - sageIntacct
            - dynamicsBusinessCentral
            - wave
            - zohoBooks
        pushCommunicationId:
          type: string
          readOnly: true
          example: 60473b57f0cdd1683ca71f60
        requestedOn:
          type: string
          readOnly: true
          example: "2021-03-09T08:15:22.035Z"
          format: date-time
        status:
          type: string
          readOnly: true
          example: pending
          enum:
            - success
            - failed
            - pending
        data:
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/PostBillPaymentRequestV2'
      required:
        - connectionUuid
        - businessName
        - serviceName
        - pushCommunicationId
        - requestedOn
        - status
        - data
    MetaPageData:
      type: object
      properties:
        count:
          type: number
          readOnly: true
          example: 1
          format: integer
        offset:
          type: number
          readOnly: true
          example: 1
          format: integer
        limit:
          type: number
          readOnly: true
          example: 1
          format: integer
        currentPage:
          type: number
          readOnly: true
          example: 1
          format: integer
        totalPages:
          type: number
          readOnly: true
          example: 1
          format: integer
      required:
        - count
        - offset
        - limit
        - currentPage
        - totalPages
    BaseConnectionsResponseDataV1:
      type: object
      properties:
        connectionUuid:
          type: string
          readOnly: true
          example: CON-e66400c1-4d2f-4683-9bea-275799943695
        firstRecordDate:
          type: string
          example: "2020-12-25T01:02:03Z"
          format: date-time
        serviceName:
          type: string
          readOnly: true
          example: xero
          enum:
            - quickbooks
            - xero
            - freshbooks
            - quickbooksDesktop
            - sageIntacct
            - sageBusinessCloud
            - oracleNetsuite
            - dynamicsBusinessCentral
            - wave
            - zohoBooks
        description:
          type: string
          example: TD Bank
        status:
          type: string
          readOnly: true
          example: active
        createdAt:
          type: string
          readOnly: true
          example: "2020-12-25T01:02:03Z"
          format: date-time
        updatedAt:
          type: string
          readOnly: true
          example: "2020-12-25T01:02:03Z"
          format: date-time
        disconnectReason:
          type: string
          example: disconnectedByCustomer
        syncTime:
          type: number
          example: "1.3092"
        institution:
          example:
            name: Citizens bank
            logo: https://serverlogo.url
          allOf:
            - $ref: '#/components/schemas/ConnectionsInstitutionData'
        isMockData:
          type: boolean
          example: true
        serviceAccountRef:
          example:
            id: "12345"
            entityRef:
              id: "100"
          allOf:
            - $ref: '#/components/schemas/serviceAccountRefType'
        connectionId:
          type: string
          readOnly: true
          example: CON-e66400c1-4d2f-4683-9bea-275799943695
      required:
        - connectionUuid
        - serviceName
        - status
        - createdAt
        - updatedAt
        - connectionId
    BusinessesResponseDataV1:
      type: object
      properties:
        businessUuid:
          type: string
          readOnly: true
          example: BIZ-0f1ef788-54eb-4ed1-a7d3-5605febe6d84
        businessName:
          type: string
          readOnly: true
          example: Railz
        status:
          type: string
          readOnly: true
          example: active
        createdAt:
          type: string
          readOnly: true
          example: "2020-12-25T01:02:03Z"
          format: date-time
        updatedAt:
          type: string
          readOnly: true
          example: "2020-12-25T01:02:03Z"
          format: date-time
        metadata:
          readOnly: true
          example:
            - name: new business1
              value: canada
              webhookLocation:
                - header
                - body
          type: array
          items:
            type: string
        connections:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/BaseConnectionsResponseDataV1'
      required:
        - businessUuid
        - businessName
        - status
        - createdAt
        - updatedAt
        - metadata
        - connections
    BusinessesV1ResponseDto:
      type: object
      properties:
        meta:
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/MetaPageData'
        data:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/BusinessesResponseDataV1'
      required:
        - meta
        - data
    MetadataObjectDto:
      type: object
      properties:
        name:
          type: string
        value:
          type: string
        webhookLocation:
          type: array
          items:
            type: string
            enum:
              - header
              - body
              - query
      required:
        - name
        - value
    CreateBusinessDto:
      type: object
      properties:
        businessName:
          type: string
          example: Railz
        metadata:
          type: array
          items:
            $ref: '#/components/schemas/MetadataObjectDto'
      required:
        - businessName
    PostBusinessesResponseDto:
      type: object
      properties:
        businessName:
          type: string
          readOnly: true
          example: Railz
        url:
          type: string
          readOnly: true
        metadata:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/MetadataObjectDto'
        status:
          type: string
          readOnly: true
        createdAt:
          format: date-time
          type: string
          readOnly: true
        businessUUID:
          type: string
          readOnly: true
      required:
        - businessName
        - url
        - metadata
        - status
        - createdAt
        - businessUUID
    UpdateBusinessDto:
      type: object
      properties:
        businessName:
          type: string
          example: Railz
        newBusinessName:
          type: string
          example: Railz
        metadata:
          type: array
          items:
            $ref: '#/components/schemas/MetadataObjectDto'
      required:
        - businessName
    PutBusinessesResponseDto:
      type: object
      properties:
        businessName:
          type: string
          readOnly: true
          example: Railz
        url:
          type: string
          readOnly: true
        metadata:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/MetadataObjectDto'
        status:
          type: string
          readOnly: true
        createdAt:
          format: date-time
          type: string
          readOnly: true
        businessUUID:
          type: string
          readOnly: true
        updatedAt:
          format: date-time
          type: string
          readOnly: true
      required:
        - businessName
        - url
        - metadata
        - status
        - createdAt
        - businessUUID
        - updatedAt
    DeleteBusinessResponseDto:
      type: object
      properties:
        deleted:
          type: string
          readOnly: true
      required:
        - deleted
    BusinessInfoMetaData:
      type: object
      properties:
        reportId:
          type: string
          readOnly: true
          example: 5fad8a342a88364234392fb5
        serviceName:
          type: string
          readOnly: true
          example: xero
          enum:
            - quickbooks
            - xero
            - freshbooks
            - quickbooksDesktop
            - sageIntacct
            - sageBusinessCloud
            - oracleNetsuite
            - dynamicsBusinessCentral
            - wave
            - zohoBooks
        businessName:
          type: string
          readOnly: true
          example: Railz
        createdAt:
          type: string
          readOnly: true
          example: "2020-11-25T01:02:03Z"
          format: date-time
        updatedAt:
          type: string
          readOnly: true
          example: "2020-11-30T01:02:03Z"
          format: date-time
      required:
        - reportId
        - serviceName
        - businessName
        - createdAt
        - updatedAt
    BusinessInfoCurrencyRef:
      type: object
      properties:
        id:
          type: string
          example: "21"
        isActive:
          type: boolean
          example: false
        isBaseCurrency:
          type: boolean
          example: true
        symbol:
          type: string
          example: USD
        name:
          type: string
          example: USA
    BusinessInfoSubsidiaryRefParentRef:
      type: object
      properties:
        id:
          type: string
          example: "2"
        name:
          type: string
          example: Honeywell Holdings
    BusinessInfoSubsidiaryRefCurrencyRef:
      type: object
      properties:
        id:
          type: string
          example: "3"
    BusinessInfoSubsidiaryRefLocationRef:
      type: object
      properties:
        id:
          type: string
          example: "5"
    BusinessInfoSubsidiaryRef:
      type: object
      properties:
        id:
          type: string
          example: "8"
        name:
          type: string
          example: Honeywell
        parentRef:
          $ref: '#/components/schemas/BusinessInfoSubsidiaryRefParentRef'
        currencies:
          type: array
          items:
            $ref: '#/components/schemas/BusinessInfoSubsidiaryRefCurrencyRef'
        locations:
          type: array
          items:
            $ref: '#/components/schemas/BusinessInfoSubsidiaryRefLocationRef'
    BusinessInfoAddress:
      type: object
      properties:
        streetNumber:
          type: string
          example: "5100"
          deprecated: true
        streetName:
          type: string
          example: York Street
          deprecated: true
        city:
          type: string
          example: Toronto
        state:
          type: string
          example: Ontario
          deprecated: true
        country:
          type: string
          example: Canada
        zip:
          type: string
          example: M5J0B1
          deprecated: true
        line1:
          type: string
          example: 1234 Park Street
        line2:
          type: string
          example: Suite 1000
        region:
          type: string
          example: "ON"
        postalCode:
          type: string
          example: A0B1C2
    BusinessInfoLocationAddress:
      type: object
      properties:
        line1:
          type: string
          example: 180 John St
        line2:
          type: string
          example: Suite 12E
        city:
          type: string
          example: Seattle
        region:
          type: string
          example: Washington
        country:
          type: string
          example: United States
        postalCode:
          type: string
          example: "19222"
    BusinessInfoLocationParentRef:
      type: object
      properties:
        id:
          type: string
          example: "11"
        name:
          type: string
          example: United States
    BusinessInfoLocationRef:
      type: object
      properties:
        id:
          type: string
          example: "52"
        name:
          type: string
          example: United States
        address:
          $ref: '#/components/schemas/BusinessInfoLocationAddress'
        parentRef:
          $ref: '#/components/schemas/BusinessInfoLocationParentRef'
    BusinessInfoDataV1:
      type: object
      properties:
        businessName:
          type: string
          example: Railz
        legalName:
          type: string
          example: Railz Financial Technologies Inc
        businessEmail:
          type: string
          example: noreply@railz.ai
        website:
          type: string
          example: www.railz.ai
        primaryPhoneNumber:
          type: string
          example: 416-555-1212
        fiscalYearEndDay:
          type: number
          example: 31
          format: integer
        fiscalYearEndMonth:
          type: number
          example: 12
          format: integer
        industryType:
          type: string
          example: Financial
        industryCode:
          type: string
          example: "123"
        businessShortCode:
          type: string
          example: 6Qfdg!
        baseCurrency:
          type: string
          example: USD
        businessRegistrationNumber:
          type: string
          example: BN123456789
        currencyRefs:
          type: array
          items:
            $ref: '#/components/schemas/BusinessInfoCurrencyRef'
        subsidiaryRefs:
          type: array
          items:
            $ref: '#/components/schemas/BusinessInfoSubsidiaryRef'
        mailingAddress:
          $ref: '#/components/schemas/BusinessInfoAddress'
        legalAddress:
          $ref: '#/components/schemas/BusinessInfoAddress'
        locationRefs:
          type: array
          items:
            $ref: '#/components/schemas/BusinessInfoLocationRef'
        businessType:
          type: string
          example: organization
          enum:
            - soleProprietorship
            - partnership
            - limitedLiability
            - corporation
            - organization
            - other
            - unknown
            - notForProfit
        accountingMethod:
          type: string
          example: accrual
    BusinessInfoResponseDtoV1:
      type: object
      properties:
        meta:
          $ref: '#/components/schemas/BusinessInfoMetaData'
        data:
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/BusinessInfoDataV1'
      required:
        - meta
        - data
    BaseConnectionsResponseDataV2:
      type: object
      properties:
        connectionUuid:
          type: string
          readOnly: true
          example: CON-e66400c1-4d2f-4683-9bea-275799943695
        firstRecordDate:
          type: string
          example: "2020-12-25T01:02:03Z"
          format: date-time
        serviceName:
          type: string
          readOnly: true
          example: xero
          enum:
            - quickbooks
            - xero
            - freshbooks
            - quickbooksDesktop
            - sageIntacct
            - sageBusinessCloud
            - oracleNetsuite
            - dynamicsBusinessCentral
            - wave
            - zohoBooks
        description:
          type: string
          example: TD Bank
        status:
          type: string
          readOnly: true
          example: active
        createdAt:
          type: string
          readOnly: true
          example: "2020-12-25T01:02:03Z"
          format: date-time
        updatedAt:
          type: string
          readOnly: true
          example: "2020-12-25T01:02:03Z"
          format: date-time
        disconnectReason:
          type: string
          example: disconnectedByCustomer
        syncTime:
          type: number
          example: "1.3092"
        institution:
          example:
            name: Citizens bank
            logo: https://serverlogo.url
          allOf:
            - $ref: '#/components/schemas/ConnectionsInstitutionData'
        isMockData:
          type: boolean
          example: true
        serviceAccountRef:
          example:
            id: "12345"
            entityRef:
              id: "100"
          allOf:
            - $ref: '#/components/schemas/serviceAccountRefType'
      required:
        - connectionUuid
        - serviceName
        - status
        - createdAt
        - updatedAt
    BusinessesResponseDataV2:
      type: object
      properties:
        businessUuid:
          type: string
          readOnly: true
          example: BIZ-0f1ef788-54eb-4ed1-a7d3-5605febe6d84
        businessName:
          type: string
          readOnly: true
          example: Railz
        status:
          type: string
          readOnly: true
          example: active
        createdAt:
          type: string
          readOnly: true
          example: "2020-12-25T01:02:03Z"
          format: date-time
        updatedAt:
          type: string
          readOnly: true
          example: "2020-12-25T01:02:03Z"
          format: date-time
        metadata:
          readOnly: true
          example:
            - name: new business1
              value: canada
              webhookLocation:
                - header
                - body
          type: array
          items:
            type: string
        connections:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/BaseConnectionsResponseDataV2'
      required:
        - businessUuid
        - businessName
        - status
        - createdAt
        - updatedAt
        - metadata
        - connections
    BusinessesV2ResponseDto:
      type: object
      properties:
        meta:
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/MetaPageData'
        data:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/BusinessesResponseDataV2'
      required:
        - meta
        - data
    PostBusinessesResponseDtoV2:
      type: object
      properties:
        businessName:
          type: string
          readOnly: true
          example: Railz
        url:
          type: string
          readOnly: true
        metadata:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/MetadataObjectDto'
        status:
          type: string
          readOnly: true
        createdAt:
          format: date-time
          type: string
          readOnly: true
        businessUuid:
          type: string
          readOnly: true
      required:
        - businessName
        - url
        - metadata
        - status
        - createdAt
        - businessUuid
    UpdateBusinessDtoV2:
      type: object
      properties:
        businessName:
          type: string
          example: Railz
        metadata:
          type: array
          items:
            $ref: '#/components/schemas/MetadataObjectDto'
    PutBusinessesResponseDtoV2:
      type: object
      properties:
        businessName:
          type: string
          readOnly: true
          example: Railz
        url:
          type: string
          readOnly: true
        metadata:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/MetadataObjectDto'
        status:
          type: string
          readOnly: true
        createdAt:
          format: date-time
          type: string
          readOnly: true
        businessUuid:
          type: string
          readOnly: true
        updatedAt:
          format: date-time
          type: string
          readOnly: true
      required:
        - businessName
        - url
        - metadata
        - status
        - createdAt
        - businessUuid
        - updatedAt
    ConnectionMigrationDto:
      type: object
      properties:
        serviceName:
          type: string
          enum:
            - quickbooks
            - xero
            - freshbooks
            - dynamicsBusinessCentral
            - sageBusinessCloud
            - zohoBooks
            - wave
            - plaid
        accessToken:
          type: string
        refreshToken:
          type: string
        accountId:
          type: string
        location:
          type: string
          enum:
            - com
            - eu
            - in
            - au
            - jp
            - ca
      required:
        - serviceName
    ConnectionMigrationResponseDto:
      type: object
      properties:
        connectionUuid:
          type: string
          readOnly: true
      required:
        - connectionUuid
    BusinessInfoMetaDataV2:
      type: object
      properties:
        connectionUuid:
          type: string
          readOnly: true
          example: CON-396d5daa-26b2-4979-89b6-cafb2c298155
        businessName:
          type: string
          readOnly: true
          example: Railz
        serviceName:
          type: string
          readOnly: true
          example: xero
          enum:
            - freshbooks
            - quickbooks
            - quickbooksDesktop
            - xero
            - oracleNetsuite
            - sageBusinessCloud
            - sageIntacct
            - dynamicsBusinessCentral
            - wave
            - zohoBooks
        reportId:
          type: string
          readOnly: true
          example: 5fad8a342a88364234392fb5
        createdAt:
          type: string
          readOnly: true
          example: "2020-11-25T01:02:03Z"
          format: date-time
        updatedAt:
          type: string
          readOnly: true
          example: "2020-11-30T01:02:03Z"
          format: date-time
      required:
        - connectionUuid
        - reportId
        - createdAt
        - updatedAt
    BusinessInfoAddressV2:
      type: object
      properties:
        city:
          type: string
          example: Toronto
        country:
          type: string
          example: Canada
        line1:
          type: string
          example: 1234 Park Street
        line2:
          type: string
          example: Suite 1000
        region:
          type: string
          example: "ON"
        postalCode:
          type: string
          example: A0B1C2
    BusinessInfoDataV2:
      type: object
      properties:
        businessName:
          type: string
          example: Railz
        legalName:
          type: string
          example: Railz Financial Technologies Inc
        businessEmail:
          type: string
          example: noreply@railz.ai
        website:
          type: string
          example: www.railz.ai
        primaryPhoneNumber:
          type: string
          example: 416-555-1212
        fiscalYearEndDay:
          type: number
          example: 31
          format: integer
        fiscalYearEndMonth:
          type: number
          example: 12
          format: integer
        industryType:
          type: string
          example: Financial
        industryCode:
          type: string
          example: "123"
        businessShortCode:
          type: string
          example: 6Qfdg!
        baseCurrency:
          type: string
          example: USD
        businessRegistrationNumber:
          type: string
          example: BN123456789
        currencyRefs:
          type: array
          items:
            $ref: '#/components/schemas/BusinessInfoCurrencyRef'
        subsidiaryRefs:
          type: array
          items:
            $ref: '#/components/schemas/BusinessInfoSubsidiaryRef'
        mailingAddress:
          $ref: '#/components/schemas/BusinessInfoAddressV2'
        legalAddress:
          $ref: '#/components/schemas/BusinessInfoAddressV2'
        businessType:
          type: string
          example: organization
          enum:
            - soleProprietorship
            - partnership
            - limitedLiability
            - corporation
            - organization
            - other
            - unknown
            - notForProfit
        accountingMethod:
          type: string
          example: accrual
        passThrough:
          type: object
          example:
            CustomField:
              - DefinitionId: "1"
                StringValue: my custom value
                Name: Field One
      required:
        - businessType
        - accountingMethod
    BusinessInfoResponseDtoV2:
      type: object
      properties:
        meta:
          $ref: '#/components/schemas/BusinessInfoMetaDataV2'
        data:
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/BusinessInfoDataV2'
      required:
        - meta
        - data
    Error404Dto:
      type: object
      properties:
        statusCode:
          type: number
          readOnly: true
          example: 404
        message:
          readOnly: true
          example:
            - Not Found
          type: array
          items:
            type: string
        error:
          type: string
          readOnly: true
          example: Not Found
      required:
        - statusCode
        - message
        - error
    BusinessValuationMetaData:
      type: object
      properties:
        reportId:
          type: string
          readOnly: true
          example: 5fad8a342a88364234392fb5
        serviceName:
          type: string
          readOnly: true
          example: xero
          enum:
            - quickbooks
            - xero
            - freshbooks
            - quickbooksDesktop
            - sageIntacct
            - sageBusinessCloud
            - oracleNetsuite
            - dynamicsBusinessCentral
            - wave
            - zohoBooks
        businessName:
          type: string
          readOnly: true
          example: Railz
        startDate:
          type: string
          readOnly: true
          example: "2020-11-25T01:02:03Z"
          format: date-time
        endDate:
          type: string
          readOnly: true
          example: "2020-11-25T01:02:03Z"
          format: date-time
        createdAt:
          type: string
          readOnly: true
          example: "2020-12-25T01:02:03Z"
          format: date-time
        updatedAt:
          type: string
          readOnly: true
          example: "2020-12-25T01:02:03Z"
          format: date-time
      required:
        - reportId
        - serviceName
        - businessName
        - startDate
        - endDate
        - createdAt
        - updatedAt
    BusinessValuationData:
      type: object
      properties:
        liquidationValue:
          type: number
          example: 100000
          format: double
        discountedCashflowValue:
          type: number
          example: 100000
          format: double
        discountRate:
          type: number
          example: 0.12
          format: double
        revenueMultiple:
          type: number
          example: 1.6
          format: double
        multipleToRevenueValue:
          type: number
          example: 100000
          format: double
        firstChicagoValue:
          type: number
          example: 100000
          format: double
    BusinessValuationReport:
      type: object
      properties:
        meta:
          $ref: '#/components/schemas/BusinessValuationMetaData'
        data:
          $ref: '#/components/schemas/BusinessValuationData'
      required:
        - meta
        - data
    BusinessValuationResponseDto:
      type: object
      properties:
        count:
          type: number
          readOnly: true
          example: 1
          format: integer
        reports:
          type: array
          items:
            $ref: '#/components/schemas/BusinessValuationReport'
      required:
        - count
        - reports
    BusinessValuationMetaDataV2:
      type: object
      properties:
        connectionUuid:
          type: string
          readOnly: true
          example: CON-396d5daa-26b2-4979-89b6-cafb2c298155
        businessName:
          type: string
          readOnly: true
          example: Railz
        serviceName:
          type: string
          readOnly: true
          example: xero
          enum:
            - freshbooks
            - quickbooks
            - quickbooksDesktop
            - xero
            - oracleNetsuite
            - sageBusinessCloud
            - sageIntacct
            - dynamicsBusinessCentral
            - wave
            - zohoBooks
        reportId:
          type: string
          readOnly: true
          example: 5fad8a342a88364234392fb5
        startDate:
          type: string
          readOnly: true
          example: "2020-11-25T01:02:03Z"
          format: date-time
        endDate:
          type: string
          readOnly: true
          example: "2020-11-25T01:02:03Z"
          format: date-time
        createdAt:
          type: string
          readOnly: true
          example: "2020-12-25T01:02:03Z"
          format: date-time
        updatedAt:
          type: string
          readOnly: true
          example: "2020-12-25T01:02:03Z"
          format: date-time
      required:
        - connectionUuid
        - businessName
        - serviceName
        - reportId
        - startDate
        - endDate
        - createdAt
        - updatedAt
    BusinessValuationReportV2:
      type: object
      properties:
        meta:
          $ref: '#/components/schemas/BusinessValuationMetaDataV2'
        data:
          $ref: '#/components/schemas/BusinessValuationData'
      required:
        - meta
        - data
    BusinessValuationResponseV2Dto:
      type: object
      properties:
        count:
          type: number
          readOnly: true
          example: 1
          format: integer
        reports:
          type: array
          items:
            $ref: '#/components/schemas/BusinessValuationReportV2'
      required:
        - count
        - reports
    CreditScoresReportMetaData:
      type: object
      properties:
        reportId:
          type: string
          readOnly: true
          example: 5fad8a342a88364234392fb5
        serviceName:
          type: string
          readOnly: true
          example: xero
          enum:
            - quickbooks
            - xero
            - freshbooks
            - quickbooksDesktop
            - sageIntacct
            - sageBusinessCloud
            - oracleNetsuite
            - dynamicsBusinessCentral
            - wave
            - zohoBooks
        businessName:
          type: string
          readOnly: true
          example: Railz
        startDate:
          type: string
          readOnly: true
          example: "2020-11-25T01:02:03Z"
          format: date-time
        endDate:
          type: string
          readOnly: true
          example: "2020-11-25T01:02:03Z"
          format: date-time
        createdAt:
          type: string
          readOnly: true
          example: "2020-12-25T01:02:03Z"
          format: date-time
        updatedAt:
          type: string
          readOnly: false
          example: "2020-12-25T01:02:03Z"
          format: date-time
      required:
        - reportId
        - serviceName
        - businessName
        - startDate
        - endDate
        - createdAt
        - updatedAt
    CreditScoresData:
      type: object
      properties:
        scorePit:
          type: number
          minimum: 300
          maximum: 850
          example: 800
          format: integer
          readOnly: false
        score12m:
          type: number
          minimum: 300
          maximum: 850
          example: 800
          format: integer
          readOnly: false
        score24m:
          type: number
          minimum: 300
          maximum: 850
          example: 800
          format: integer
          readOnly: false
        score36m:
          type: number
          minimum: 300
          maximum: 850
          example: 800
          format: integer
          readOnly: false
      required:
        - scorePit
        - score12m
        - score24m
        - score36m
    CreditScoresReport:
      type: object
      properties:
        meta:
          $ref: '#/components/schemas/CreditScoresReportMetaData'
        data:
          $ref: '#/components/schemas/CreditScoresData'
      required:
        - meta
        - data
    CreditScoresResponseDto:
      type: object
      properties:
        count:
          type: number
          readOnly: true
          format: integer
          example: 1
        reports:
          readOnly: false
          type: array
          items:
            $ref: '#/components/schemas/CreditScoresReport'
      required:
        - count
        - reports
    CreditRatingsReportMetaData:
      type: object
      properties:
        reportId:
          type: string
          readOnly: true
          example: 5fad8a342a88364234392fb5
        serviceName:
          type: string
          readOnly: true
          example: xero
          enum:
            - quickbooks
            - xero
            - freshbooks
            - quickbooksDesktop
            - sageIntacct
            - sageBusinessCloud
            - oracleNetsuite
            - dynamicsBusinessCentral
            - wave
            - zohoBooks
        businessName:
          type: string
          readOnly: true
          example: Railz
        startDate:
          type: string
          readOnly: true
          example: "2020-11-25T01:02:03Z"
          format: date-time
        endDate:
          type: string
          readOnly: true
          example: "2020-11-25T01:02:03Z"
          format: date-time
        createdAt:
          type: string
          readOnly: true
          example: "2020-12-25T01:02:03Z"
          format: date-time
        updatedAt:
          type: string
          readOnly: false
          example: "2020-11-30T01:02:03Z"
          format: date-time
      required:
        - reportId
        - serviceName
        - businessName
        - startDate
        - endDate
        - createdAt
        - updatedAt
    CreditRatingsData:
      type: object
      properties:
        spRating:
          type: string
          enum:
            - AAA
            - AA+
            - AA
            - AA-
            - A+
            - A
            - A-
            - BBB+
            - BBB
            - BBB-
            - BB+
            - BB
            - BB-
            - B+
            - B
            - B-
            - CCC+
            - CCC
            - CCC-
            - CC
            - C
            - D
          example: AA+
        moodysRating:
          type: string
          enum:
            - Aaa
            - Aa1
            - Aa2
            - Aa3
            - A1
            - A2
            - A3
            - Baa1
            - Baa2
            - Baa3
            - Ba1
            - Ba2
            - Ba3
            - B1
            - B2
            - B3
            - Caa1
            - Caa2
            - Ca
            - C
          example: Aaa
        fitchRating:
          type: string
          enum:
            - AAA
            - AA+
            - AA
            - AA-
            - A+
            - A
            - A-
            - BBB+
            - BBB
            - BBB-
            - BB+
            - BB
            - BB-
            - B+
            - B
            - B-
            - CCC
            - DDD
            - DD
            - D
          example: AA+
        dbrsRating:
          type: string
          enum:
            - AAA
            - AA (high)
            - AA
            - AA (low)
            - A (high)
            - A
            - A (low)
            - BBB (high)
            - BBB
            - BBB (low)
            - BB (high)
            - BB
            - BB (low)
            - CCC (high)
            - CCC
            - CCC (low)
            - CC
            - C
            - D
          example: AAA
        railzRating:
          type: string
          enum:
            - A+
            - A
            - A-
            - B+
            - B
            - B-
            - C+
            - C
            - C-
            - D
          example: A
        railzGrade:
          type: string
          enum:
            - Very Poor
            - Poor
            - Fair
            - Good
            - Very Good
            - Excellent
          example: Excellent
        description:
          type: string
          example: Highest quality borrower, minimal credit risk.
      required:
        - spRating
        - moodysRating
        - fitchRating
        - dbrsRating
        - railzRating
        - railzGrade
        - description
    CreditRatingsReport:
      type: object
      properties:
        meta:
          $ref: '#/components/schemas/CreditRatingsReportMetaData'
        data:
          $ref: '#/components/schemas/CreditRatingsData'
      required:
        - meta
        - data
    CreditRatingsResponseDto:
      type: object
      properties:
        count:
          type: number
          readOnly: true
          format: integer
          example: 1
        reports:
          readOnly: false
          type: array
          items:
            $ref: '#/components/schemas/CreditRatingsReport'
      required:
        - count
        - reports
    CreditScoresReportMetaDataV2:
      type: object
      properties:
        connectionUuid:
          type: string
          readOnly: true
          example: CON-396d5daa-26b2-4979-89b6-cafb2c298155
        businessName:
          type: string
          readOnly: true
          example: Railz
        serviceName:
          type: string
          readOnly: true
          example: xero
          enum:
            - freshbooks
            - quickbooks
            - quickbooksDesktop
            - xero
            - oracleNetsuite
            - sageBusinessCloud
            - sageIntacct
            - dynamicsBusinessCentral
            - wave
            - zohoBooks
        reportId:
          type: string
          readOnly: true
          example: 5fad8a342a88364234392fb5
        startDate:
          type: string
          readOnly: true
          example: "2020-11-25T01:02:03Z"
          format: date-time
        endDate:
          type: string
          readOnly: true
          example: "2020-11-25T01:02:03Z"
          format: date-time
        createdAt:
          type: string
          readOnly: true
          example: "2020-12-25T01:02:03Z"
          format: date-time
        updatedAt:
          type: string
          readOnly: false
          example: "2020-12-25T01:02:03Z"
          format: date-time
      required:
        - connectionUuid
        - businessName
        - serviceName
        - reportId
        - startDate
        - endDate
        - createdAt
        - updatedAt
    CreditScoresReportV2:
      type: object
      properties:
        meta:
          $ref: '#/components/schemas/CreditScoresReportMetaDataV2'
        data:
          $ref: '#/components/schemas/CreditScoresData'
      required:
        - meta
        - data
    CreditScoresResponseV2Dto:
      type: object
      properties:
        count:
          type: number
          readOnly: true
          format: integer
          example: 1
        reports:
          readOnly: false
          type: array
          items:
            $ref: '#/components/schemas/CreditScoresReportV2'
      required:
        - count
        - reports
    CreditRatingsReportMetaDataV2:
      type: object
      properties:
        connectionUuid:
          type: string
          readOnly: true
          example: CON-396d5daa-26b2-4979-89b6-cafb2c298155
        businessName:
          type: string
          readOnly: true
          example: Railz
        serviceName:
          type: string
          readOnly: true
          example: xero
          enum:
            - freshbooks
            - quickbooks
            - quickbooksDesktop
            - xero
            - oracleNetsuite
            - sageBusinessCloud
            - sageIntacct
            - dynamicsBusinessCentral
            - wave
            - zohoBooks
        reportId:
          type: string
          readOnly: true
          example: 5fad8a342a88364234392fb5
        startDate:
          type: string
          readOnly: true
          example: "2020-11-25T01:02:03Z"
          format: date-time
        endDate:
          type: string
          readOnly: true
          example: "2020-11-25T01:02:03Z"
          format: date-time
        createdAt:
          type: string
          readOnly: true
          example: "2020-12-25T01:02:03Z"
          format: date-time
        updatedAt:
          type: string
          readOnly: false
          example: "2020-11-30T01:02:03Z"
          format: date-time
      required:
        - connectionUuid
        - businessName
        - serviceName
        - reportId
        - startDate
        - endDate
        - createdAt
        - updatedAt
    CreditRatingsReportV2:
      type: object
      properties:
        meta:
          $ref: '#/components/schemas/CreditRatingsReportMetaDataV2'
        data:
          $ref: '#/components/schemas/CreditRatingsData'
      required:
        - meta
        - data
    CreditRatingsResponseV2Dto:
      type: object
      properties:
        count:
          type: number
          readOnly: true
          format: integer
          example: 1
        reports:
          readOnly: false
          type: array
          items:
            $ref: '#/components/schemas/CreditRatingsReportV2'
      required:
        - count
        - reports
    ParentRef:
      type: object
      properties:
        id:
          type: string
          example: "434"
        name:
          type: string
          example: Region
      required:
        - id
    Address:
      type: object
      properties:
        line1:
          type: string
          example: 1234 Park Street
        line2:
          type: string
          example: Suite 1000
        city:
          type: string
          example: Toronto
        region:
          type: string
          example: "ON"
        country:
          type: string
          example: CAN
        postalCode:
          type: string
          example: A0B1C2
        type:
          type: string
          enum:
            - billing
            - shipping
            - other
      required:
        - type
    Contact:
      type: object
      properties:
        name:
          type: string
          example: John Smith
        email:
          type: string
          example: jsmith@company.com
        phone:
          type: string
          example: "8887779999"
        address:
          $ref: '#/components/schemas/Address'
        status:
          type: string
          enum:
            - unknown
            - active
            - archived
        modifiedDate:
          type: string
          example: "2021-03-09T08:49:36.035Z"
      required:
        - status
    GetCustomerData:
      type: object
      properties:
        id:
          type: string
          example: "1"
        customerName:
          type: string
          example: ACME Inc.
        contactName:
          type: string
          example: Jane Smith
        emailAddress:
          type: string
          example: email@acme.com
        website:
          type: string
          example: www.acme.com
        phone:
          type: string
          example: "8889990000"
        taxNumber:
          type: string
          example: "987654321"
        balance:
          type: number
          example: 0
          format: float
        status:
          type: string
          enum:
            - unknown
            - active
            - archived
        subsidiaryRefs:
          type: array
          items:
            $ref: '#/components/schemas/SubsidiaryRef'
        sourceModifiedDate:
          type: string
          example: "2021-03-09T08:49:36.035Z"
        parentRef:
          $ref: '#/components/schemas/ParentRef'
        contacts:
          type: array
          items:
            $ref: '#/components/schemas/Contact'
        defaultCurrency:
          $ref: '#/components/schemas/CurrencyRef'
        addresses:
          type: array
          items:
            $ref: '#/components/schemas/Address'
      required:
        - id
        - customerName
        - status
    GetCustomerResponseDto:
      type: object
      properties:
        pagination:
          $ref: '#/components/schemas/PaginationMetaData'
        count:
          type: number
          readOnly: true
          example: 1
          format: integer
          deprecated: true
        meta:
          $ref: '#/components/schemas/ListReportMetaData'
        data:
          type: array
          items:
            $ref: '#/components/schemas/GetCustomerData'
      required:
        - pagination
        - count
        - meta
        - data
    Addresses:
      type: object
      properties:
        type:
          type: string
          example: billing
          description: Only Billing & Shipping types can be used when creating records.
          enum:
            - billing
            - shipping
        line1:
          type: string
          maxLength: 500
          example: 1234 Park Street
        line2:
          type: string
          maxLength: 500
          example: Suite 1000
        city:
          type: string
          maxLength: 255
          example: Toronto
        region:
          type: string
          maxLength: 255
          example: "ON"
          description: Region within a country. For example, state name for USA, province name for Canada.
        country:
          type: string
          example: CAN
          description: Country name as 3 ISO alpha-3 characters.
        postalCode:
          type: string
          maxLength: 30
          example: A0B1C2
          description: Postal code. For example, zip code for USA and Canada.
      required:
        - type
    PushCustomerV1:
      type: object
      properties:
        contactFirstName:
          type: string
          maxLength: 100
          example: Jane
        contactLastName:
          type: string
          maxLength: 100
          example: Smith
        emailAddress:
          type: string
          maxLength: 100
          example: email@acme.com
        phone:
          type: string
          maxLength: 30
          example: "8889990000"
        website:
          type: string
          maxLength: 100
          format: uri
          example: www.acme.com
        isPerson:
          type: boolean
        customerName:
          type: string
          maxLength: 500
          example: ACME Inc.
        addresses:
          type: array
          items:
            $ref: '#/components/schemas/Addresses'
        defaultCurrency:
          type: string
          example: CAD
        subsidiaryRefs:
          example:
            - "1"
            - "3"
          type: array
          items:
            type: string
      required:
        - customerName
    PushCustomerV1Dto:
      type: object
      properties:
        connection:
          $ref: '#/components/schemas/PushConnection'
        data:
          $ref: '#/components/schemas/PushCustomerV1'
      required:
        - connection
        - data
    PushCustomerV1ResponseDto:
      type: object
      properties:
        pushCommunicationId:
          type: string
          readOnly: true
          example: 60473b57f0cdd1683ca71f60
        requestedOn:
          type: string
          readOnly: true
          example: "2021-03-09T08:15:22.035Z"
          format: date-time
        status:
          type: string
          readOnly: true
          example: pending
          enum:
            - success
            - failed
            - pending
        businessName:
          type: string
          readOnly: true
          example: Railz
        serviceName:
          type: string
          readOnly: true
          example: quickbooks
          enum:
            - freshbooks
            - quickbooks
            - quickbooksDesktop
            - xero
            - oracleNetsuite
            - sageBusinessCloud
            - sageIntacct
            - dynamicsBusinessCentral
            - wave
            - zohoBooks
        data:
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/PushCustomerV1'
      required:
        - pushCommunicationId
        - requestedOn
        - status
        - businessName
        - serviceName
        - data
    PushUpdateCustomerConnection:
      type: object
      properties:
        businessName:
          type: string
          example: Railz
          description: Unique business name identifier.
        serviceName:
          type: string
          example: quickbooks
          description: Name of accounting platform service.
          enum:
            - quickbooks
            - xero
            - freshbooks
            - dynamicsBusinessCentral
            - oracleNetsuite
            - wave
            - sageIntacct
            - sageBusinessCloud
      required:
        - businessName
        - serviceName
    PutCustomerV1:
      type: object
      properties:
        contactFirstName:
          type: string
          maxLength: 100
          example: Jane
        contactLastName:
          type: string
          maxLength: 100
          example: Smith
        emailAddress:
          type: string
          maxLength: 100
          example: email@acme.com
        phone:
          type: string
          maxLength: 30
          example: "8889990000"
        website:
          type: string
          maxLength: 100
          format: uri
          example: www.acme.com
        isPerson:
          type: boolean
        customerName:
          type: string
          maxLength: 500
          example: ACME Inc.
        addresses:
          type: array
          items:
            $ref: '#/components/schemas/Addresses'
        defaultCurrency:
          type: string
          example: CAD
        subsidiaryRefs:
          example:
            - "1"
            - "3"
          type: array
          items:
            type: string
    PushUpdateCustomerV1Dto:
      type: object
      properties:
        connection:
          $ref: '#/components/schemas/PushUpdateCustomerConnection'
        data:
          $ref: '#/components/schemas/PutCustomerV1'
      required:
        - connection
        - data
    PutCustomerV1ResponseDto:
      type: object
      properties:
        pushCommunicationId:
          type: string
          readOnly: true
          example: 60473b57f0cdd1683ca71f60
        requestedOn:
          type: string
          readOnly: true
          example: "2021-03-09T08:15:22.035Z"
          format: date-time
        status:
          type: string
          readOnly: true
          example: pending
          enum:
            - success
            - failed
            - pending
        businessName:
          type: string
          readOnly: true
          example: Railz
        serviceName:
          type: string
          readOnly: true
          example: quickbooks
          enum:
            - freshbooks
            - quickbooks
            - quickbooksDesktop
            - xero
            - oracleNetsuite
            - sageBusinessCloud
            - sageIntacct
            - dynamicsBusinessCentral
            - wave
            - zohoBooks
        data:
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/PutCustomerV1'
      required:
        - pushCommunicationId
        - requestedOn
        - status
        - businessName
        - serviceName
        - data
    BillingAddress:
      type: object
      properties:
        line1:
          type: string
          example: 1234 Park Street
        line2:
          type: string
          example: Suite 1000
        city:
          type: string
          example: Toronto
        region:
          type: string
          example: "ON"
        country:
          type: string
          example: CAN
        postalCode:
          type: string
          example: A0B1C2
    ShippingAddress:
      type: object
      properties:
        line1:
          type: string
          example: 1234 Park Street
        line2:
          type: string
          example: Suite 1000
        city:
          type: string
          example: Toronto
        region:
          type: string
          example: "ON"
        country:
          type: string
          example: CAN
        postalCode:
          type: string
          example: A0B1C2
    CustomerVendorAddress:
      type: object
      properties:
        line1:
          type: string
          example: 1234 Park Street
        line2:
          type: string
          example: Suite 1000
        city:
          type: string
          example: Toronto
        region:
          type: string
          example: "ON"
        country:
          type: string
          example: CAN
        postalCode:
          type: string
          example: A0B1C2
        type:
          type: string
          enum:
            - billing
            - shipping
            - other
    CustomerVendorContactV2:
      type: object
      properties:
        name:
          type: string
          example: John Smith
        email:
          type: string
          example: jsmith@company.com
        phone:
          type: string
          example: "8887779999"
        address:
          $ref: '#/components/schemas/CustomerVendorAddress'
        status:
          type: string
          enum:
            - unknown
            - active
            - archived
    GetCustomerDataV2:
      type: object
      properties:
        id:
          type: string
          example: "1"
        customerName:
          type: string
          example: ACME Inc.
        contactName:
          type: string
          example: Jane Smith
        emailAddress:
          type: string
          example: email@acme.com
        website:
          type: string
          example: www.acme.com
        phone:
          type: string
          example: "8889990000"
        taxNumber:
          type: string
          example: "987654321"
        balance:
          type: number
          example: 0
          format: float
        status:
          type: string
          enum:
            - unknown
            - active
            - archived
        subsidiaryRefs:
          type: array
          items:
            $ref: '#/components/schemas/SubsidiaryRef'
        sourceModifiedDate:
          type: string
          example: "2021-03-09T08:49:36.035Z"
        parentRef:
          $ref: '#/components/schemas/ParentRef'
        isPerson:
          type: boolean
        contactFirstName:
          type: string
          maxLength: 100
          example: Jane
        contactLastName:
          type: string
          maxLength: 100
          example: Smith
        currency:
          type: string
          example: USD
        billingAddress:
          $ref: '#/components/schemas/BillingAddress'
        shippingAddress:
          $ref: '#/components/schemas/ShippingAddress'
        contacts:
          type: array
          items:
            $ref: '#/components/schemas/CustomerVendorContactV2'
        paymentMethodRef:
          $ref: '#/components/schemas/PaymentMethodRefDto'
      required:
        - id
        - status
    GetCustomerResponseV2Dto:
      type: object
      properties:
        pagination:
          $ref: '#/components/schemas/PaginationMetaData'
        meta:
          $ref: '#/components/schemas/ListReportMetaDataV2'
        data:
          type: array
          items:
            $ref: '#/components/schemas/GetCustomerDataV2'
      required:
        - pagination
        - meta
        - data
    ParentRefDto:
      type: object
      properties:
        id:
          type: string
          example: "32"
      required:
        - id
    BillingAddressDto:
      type: object
      properties:
        line1:
          type: string
          maxLength: 500
          example: 1234 Park Street
        line2:
          type: string
          maxLength: 500
          example: Suite 1000
        city:
          type: string
          maxLength: 255
          example: Toronto
        region:
          type: string
          maxLength: 255
          example: "ON"
          description: Region within a country. For example, state name for USA, province name for Canada.
        country:
          type: string
          example: CAN
          description: Country name as 3 ISO alpha-3 characters.
        postalCode:
          type: string
          maxLength: 30
          example: A0B1C2
          description: Postal code. For example, zip code for USA and Canada.
    ShippingAddressDto:
      type: object
      properties:
        line1:
          type: string
          maxLength: 500
          example: 1234 Park Street
        line2:
          type: string
          maxLength: 500
          example: Suite 1000
        city:
          type: string
          maxLength: 255
          example: Toronto
        region:
          type: string
          maxLength: 255
          example: "ON"
          description: Region within a country. For example, state name for USA, province name for Canada.
        country:
          type: string
          example: CAN
          description: Country name as 3 ISO alpha-3 characters.
        postalCode:
          type: string
          maxLength: 30
          example: A0B1C2
          description: Postal code. For example, zip code for USA and Canada.
    CustomerVendorPushAddressV2:
      type: object
      properties:
        line1:
          type: string
          example: 1234 Park Street
        line2:
          type: string
          example: Suite 1000
        city:
          type: string
          example: Toronto
        region:
          type: string
          example: "ON"
        country:
          type: string
          example: CAN
        postalCode:
          type: string
          example: A0B1C2
        type:
          type: string
          enum:
            - billing
            - shipping
            - other
          example: billing
    PushCustomerVendorContactV2:
      type: object
      properties:
        name:
          type: string
          example: John Smith
        email:
          type: string
          example: jsmith@company.com
        phone:
          type: string
          example: "8887779999"
        address:
          $ref: '#/components/schemas/CustomerVendorPushAddressV2'
    PushCustomerV2:
      type: object
      properties:
        contactFirstName:
          type: string
          maxLength: 100
          example: Jane
        contactLastName:
          type: string
          maxLength: 100
          example: Smith
        emailAddress:
          type: string
          maxLength: 100
          example: email@acme.com
        phone:
          type: string
          maxLength: 30
          example: "8889990000"
        website:
          type: string
          maxLength: 100
          format: uri
          example: www.acme.com
        isPerson:
          type: boolean
        customerName:
          type: string
          maxLength: 500
          example: ACME Inc.
        contactName:
          type: string
          example: Jane Smith
        taxNumber:
          type: string
          example: "987654321"
        parentRef:
          $ref: '#/components/schemas/ParentRefDto'
        billingAddress:
          $ref: '#/components/schemas/BillingAddressDto'
        shippingAddress:
          $ref: '#/components/schemas/ShippingAddressDto'
        currency:
          type: string
          example: CAD
        subsidiaryRefs:
          type: array
          items:
            $ref: '#/components/schemas/SubsidiaryRefDto'
        contacts:
          type: array
          items:
            $ref: '#/components/schemas/PushCustomerVendorContactV2'
        passThrough:
          type: object
          example:
            CustomField:
              - DefinitionId: "1"
                StringValue: my custom value
                Name: Field One
        paymentMethodRef:
          $ref: '#/components/schemas/PaymentMethodRefDto'
    PushCustomerV2Dto:
      type: object
      properties:
        connectionUuid:
          type: string
          description: Unique connection identifier.
          example: CON-396d5daa-26b2-4979-89b6-cafb2c298155
        data:
          $ref: '#/components/schemas/PushCustomerV2'
      required:
        - connectionUuid
        - data
    PushCustomerV2ResponseDto:
      type: object
      properties:
        connectionUuid:
          type: string
          readOnly: true
          example: CON-396d5daa-26b2-4979-89b6-cafb2c298155
        businessName:
          type: string
          readOnly: true
          example: Railz
        serviceName:
          type: string
          readOnly: true
          example: xero
          enum:
            - freshbooks
            - quickbooks
            - quickbooksDesktop
            - xero
            - oracleNetsuite
            - sageBusinessCloud
            - sageIntacct
            - dynamicsBusinessCentral
            - wave
            - zohoBooks
        pushCommunicationId:
          type: string
          readOnly: true
          example: 60473b57f0cdd1683ca71f60
        requestedOn:
          type: string
          readOnly: true
          example: "2021-03-09T08:15:22.035Z"
          format: date-time
        status:
          type: string
          readOnly: true
          example: pending
          enum:
            - success
            - failed
            - pending
        data:
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/PushCustomerV2'
      required:
        - connectionUuid
        - businessName
        - serviceName
        - pushCommunicationId
        - requestedOn
        - status
        - data
    BatchPushCustomerV2Dto:
      type: object
      properties:
        connectionUuid:
          type: string
          description: Unique connection identifier.
          example: CON-396d5daa-26b2-4979-89b6-cafb2c298155
        batch:
          type: array
          items:
            $ref: '#/components/schemas/PushCustomerV2'
      required:
        - connectionUuid
        - batch
    PushCustomerIndividualResponseV2Dto:
      type: object
      properties:
        pushCommunicationId:
          type: string
          readOnly: true
          example: 60473b57f0cdd1683ca71f60
        requestedOn:
          type: string
          readOnly: true
          example: "2021-03-09T08:15:22.035Z"
          format: date-time
        status:
          type: string
          readOnly: true
          example: pending
          enum:
            - success
            - failed
            - pending
        data:
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/PushCustomerV2'
      required:
        - pushCommunicationId
        - requestedOn
        - status
        - data
    BatchPushCustomerResponseV2Dto:
      type: object
      properties:
        connectionUuid:
          type: string
          readOnly: true
          example: CON-396d5daa-26b2-4979-89b6-cafb2c298155
        businessName:
          type: string
          readOnly: true
          example: Railz
        serviceName:
          type: string
          readOnly: true
          example: xero
          enum:
            - freshbooks
            - quickbooks
            - quickbooksDesktop
            - xero
            - oracleNetsuite
            - sageBusinessCloud
            - sageIntacct
            - dynamicsBusinessCentral
            - wave
            - zohoBooks
        batchId:
          type: string
          readOnly: true
          example: 60473b57f0cdd1683ca71f60
        batch:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/PushCustomerIndividualResponseV2Dto'
      required:
        - connectionUuid
        - businessName
        - serviceName
        - batchId
        - batch
    BatchPutCustomer:
      type: object
      properties:
        contactFirstName:
          type: string
          maxLength: 100
          example: Jane
        contactLastName:
          type: string
          maxLength: 100
          example: Smith
        emailAddress:
          type: string
          maxLength: 100
          example: email@acme.com
        phone:
          type: string
          maxLength: 30
          example: "8889990000"
        website:
          type: string
          maxLength: 100
          format: uri
          example: www.acme.com
        isPerson:
          type: boolean
        customerName:
          type: string
          maxLength: 500
          example: ACME Inc.
        contactName:
          type: string
          example: Jane Smith
        taxNumber:
          type: string
          example: "987654321"
        parentRef:
          $ref: '#/components/schemas/ParentRefDto'
        billingAddress:
          $ref: '#/components/schemas/BillingAddressDto'
        currency:
          type: string
          example: CAD
        shippingAddress:
          $ref: '#/components/schemas/ShippingAddressDto'
        subsidiaryRefs:
          type: array
          items:
            $ref: '#/components/schemas/SubsidiaryRefDto'
        contacts:
          type: array
          items:
            $ref: '#/components/schemas/PushCustomerVendorContactV2'
        passThrough:
          type: object
          example:
            CustomField:
              - DefinitionId: "1"
                StringValue: my custom value
                Name: Field One
        paymentMethodRef:
          $ref: '#/components/schemas/PaymentMethodRefDto'
        customerRef:
          type: string
          description: reference to the customer to be updated
      required:
        - customerRef
    BatchUpdateCustomerDto:
      type: object
      properties:
        connectionUuid:
          type: string
          description: Unique connection identifier.
          example: CON-396d5daa-26b2-4979-89b6-cafb2c298155
        batch:
          type: array
          items:
            $ref: '#/components/schemas/BatchPutCustomer'
      required:
        - connectionUuid
        - batch
    UpdateCustomerIndividualResponseDto:
      type: object
      properties:
        pushCommunicationId:
          type: string
          readOnly: true
          example: 60473b57f0cdd1683ca71f60
        requestedOn:
          type: string
          readOnly: true
          example: "2021-03-09T08:15:22.035Z"
          format: date-time
        status:
          type: string
          readOnly: true
          example: pending
          enum:
            - success
            - failed
            - pending
        data:
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/BatchPutCustomer'
      required:
        - pushCommunicationId
        - requestedOn
        - status
        - data
    BatchUpdateCustomerResponseDto:
      type: object
      properties:
        connectionUuid:
          type: string
          readOnly: true
          example: CON-396d5daa-26b2-4979-89b6-cafb2c298155
        businessName:
          type: string
          readOnly: true
          example: Railz
        serviceName:
          type: string
          readOnly: true
          example: xero
          enum:
            - freshbooks
            - quickbooks
            - quickbooksDesktop
            - xero
            - oracleNetsuite
            - sageBusinessCloud
            - sageIntacct
            - dynamicsBusinessCentral
            - wave
            - zohoBooks
        batchId:
          type: string
          readOnly: true
          example: 60473b57f0cdd1683ca71f60
        batch:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/UpdateCustomerIndividualResponseDto'
      required:
        - connectionUuid
        - businessName
        - serviceName
        - batchId
        - batch
    PutCustomerV2:
      type: object
      properties:
        contactFirstName:
          type: string
          maxLength: 100
          example: Jane
        contactLastName:
          type: string
          maxLength: 100
          example: Smith
        emailAddress:
          type: string
          maxLength: 100
          example: email@acme.com
        phone:
          type: string
          maxLength: 30
          example: "8889990000"
        website:
          type: string
          maxLength: 100
          format: uri
          example: www.acme.com
        isPerson:
          type: boolean
        customerName:
          type: string
          maxLength: 500
          example: ACME Inc.
        contactName:
          type: string
          example: Jane Smith
        taxNumber:
          type: string
          example: "987654321"
        parentRef:
          $ref: '#/components/schemas/ParentRefDto'
        billingAddress:
          $ref: '#/components/schemas/BillingAddressDto'
        currency:
          type: string
          example: CAD
        shippingAddress:
          $ref: '#/components/schemas/ShippingAddressDto'
        subsidiaryRefs:
          type: array
          items:
            $ref: '#/components/schemas/SubsidiaryRefDto'
        contacts:
          type: array
          items:
            $ref: '#/components/schemas/PushCustomerVendorContactV2'
        passThrough:
          type: object
          example:
            CustomField:
              - DefinitionId: "1"
                StringValue: my custom value
                Name: Field One
        paymentMethodRef:
          $ref: '#/components/schemas/PaymentMethodRefDto'
    PushUpdateCustomerV2Dto:
      type: object
      properties:
        connectionUuid:
          type: string
          description: Unique connection identifier.
          example: CON-396d5daa-26b2-4979-89b6-cafb2c298155
        data:
          $ref: '#/components/schemas/PutCustomerV2'
      required:
        - connectionUuid
        - data
    PutCustomerV2ResponseDto:
      type: object
      properties:
        connectionUuid:
          type: string
          readOnly: true
          example: CON-396d5daa-26b2-4979-89b6-cafb2c298155
        businessName:
          type: string
          readOnly: true
          example: Railz
        serviceName:
          type: string
          readOnly: true
          example: xero
          enum:
            - freshbooks
            - quickbooks
            - quickbooksDesktop
            - xero
            - oracleNetsuite
            - sageBusinessCloud
            - sageIntacct
            - dynamicsBusinessCentral
            - wave
            - zohoBooks
        pushCommunicationId:
          type: string
          readOnly: true
          example: 60473b57f0cdd1683ca71f60
        requestedOn:
          type: string
          readOnly: true
          example: "2021-03-09T08:15:22.035Z"
          format: date-time
        status:
          type: string
          readOnly: true
          example: pending
          enum:
            - success
            - failed
            - pending
        data:
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/PutCustomerV2'
      required:
        - connectionUuid
        - businessName
        - serviceName
        - pushCommunicationId
        - requestedOn
        - status
        - data
    BaseAddress:
      type: object
      properties:
        line1:
          type: string
          example: 1234 Park Street
        line2:
          type: string
          example: Suite 1000
        city:
          type: string
          example: Toronto
        region:
          type: string
          example: "ON"
        country:
          type: string
          example: CAN
        postalCode:
          type: string
          example: A0B1C2
    GetCustomerBankAccountDataV2:
      type: object
      properties:
        id:
          type: string
          example: "1"
        name:
          type: string
          example: Business Bank Account
        contactName:
          type: string
          example: Jane Smith
        type:
          type: string
          enum:
            - checking
            - saving
            - creditCard
            - loan
            - investment
            - unknown
          example: checking
        customerRef:
          $ref: '#/components/schemas/ParentRefDtoV2'
        accountNumber:
          type: string
          example: "11200"
        routingNumber:
          type: string
          example: "123456789"
        bankName:
          type: string
          example: TD Bank
        supportsAch:
          type: boolean
          example: true
        supportsWire:
          type: boolean
          example: true
        supportsCheck:
          type: boolean
          example: true
        address:
          $ref: '#/components/schemas/BaseAddress'
        currency:
          type: string
          example: USD
        sourceModifiedDate:
          type: string
          example: "2021-03-09T08:49:36.035Z"
      required:
        - id
    GetCustomerBankAccountResponseV2Dto:
      type: object
      properties:
        meta:
          $ref: '#/components/schemas/ListReportMetaDataV2'
        pagination:
          $ref: '#/components/schemas/PaginationMetaData'
        data:
          type: array
          items:
            $ref: '#/components/schemas/GetCustomerBankAccountDataV2'
      required:
        - meta
        - pagination
        - data
    PushBaseAddress:
      type: object
      properties:
        line1:
          type: string
          example: 1234 Park Street
        line2:
          type: string
          example: Suite 1000
        city:
          type: string
          example: Toronto
        region:
          type: string
          example: "ON"
        country:
          type: string
          example: CAN
        postalCode:
          type: string
          example: A0B1C2
    CustomerRefDto:
      type: object
      properties:
        id:
          type: string
          example: "124"
      required:
        - id
    PushCustomerBankAccount:
      type: object
      properties:
        name:
          type: string
          example: Business Bank Account
        type:
          type: string
          example: checking
        accountNumber:
          type: string
          example: "11200"
        routingNumber:
          type: string
          example: "123456789"
        bankName:
          type: string
          example: TD Bank
        supportsAch:
          type: boolean
          example: true
        supportsWire:
          type: boolean
          example: true
        supportsCheck:
          type: boolean
          example: true
        address:
          $ref: '#/components/schemas/PushBaseAddress'
        contactName:
          type: string
          maxLength: 500
          example: Jane Smith
        currency:
          type: string
          example: CAD
        customerRef:
          $ref: '#/components/schemas/CustomerRefDto'
      required:
        - customerRef
    PushCustomerBankAccountDto:
      type: object
      properties:
        connectionUuid:
          type: string
          description: Unique connection identifier.
          example: CON-396d5daa-26b2-4979-89b6-cafb2c298155
        data:
          $ref: '#/components/schemas/PushCustomerBankAccount'
      required:
        - connectionUuid
        - data
    PushCustomerBankAccountResponseDto:
      type: object
      properties:
        connectionUuid:
          type: string
          readOnly: true
          example: CON-396d5daa-26b2-4979-89b6-cafb2c298155
        businessName:
          type: string
          readOnly: true
          example: Railz
        serviceName:
          type: string
          readOnly: true
          example: xero
          enum:
            - freshbooks
            - quickbooks
            - quickbooksDesktop
            - xero
            - oracleNetsuite
            - sageBusinessCloud
            - sageIntacct
            - dynamicsBusinessCentral
            - wave
            - zohoBooks
        pushCommunicationId:
          type: string
          readOnly: true
          example: 60473b57f0cdd1683ca71f60
        requestedOn:
          type: string
          readOnly: true
          example: "2021-03-09T08:15:22.035Z"
          format: date-time
        status:
          type: string
          readOnly: true
          example: pending
          enum:
            - success
            - failed
            - pending
        data:
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/PushCustomerBankAccount'
      required:
        - connectionUuid
        - businessName
        - serviceName
        - pushCommunicationId
        - requestedOn
        - status
        - data
    DepositEntityRef:
      type: object
      properties:
        name:
          type: string
          example: ABC Inc.
        id:
          type: string
          example: "1"
        type:
          type: string
          example: vendor
          enum:
            - customer
            - employee
            - unknown
      required:
        - id
        - type
    Link:
      type: object
      properties:
        type:
          type: string
          enum:
            - billPayment
            - transfer
            - journalEntry
            - paymentOnAccount
            - other
        id:
          type: string
          example: "560"
      required:
        - id
    Links:
      type: object
      properties:
        type:
          type: string
          enum:
            - billPayment
            - transfer
            - journalEntry
            - paymentOnAccount
            - other
        id:
          type: string
          example: "560"
      required:
        - type
        - id
    DepositLineItems:
      type: object
      properties:
        description:
          type: string
          example: Services rendered.
        unitAmount:
          type: number
          example: 100.5
          format: float
        quantity:
          type: number
          example: 3
          format: integer
        subTotal:
          type: number
          example: 301.5
          format: float
          deprecated: true
        taxAmount:
          type: number
          example: 20.5
          format: float
        totalAmount:
          type: number
          example: 322
          format: float
        accountRef:
          $ref: '#/components/schemas/AccountRef'
        taxRateRef:
          $ref: '#/components/schemas/TaxRateRef'
        entityRef:
          $ref: '#/components/schemas/DepositEntityRef'
        link:
          deprecated: true
          allOf:
            - $ref: '#/components/schemas/Link'
        links:
          type: array
          items:
            $ref: '#/components/schemas/Links'
      required:
        - totalAmount
    GetDepositData:
      type: object
      properties:
        id:
          type: string
          example: "1"
        postedDate:
          format: date-time
          type: string
          example: "2021-03-09T10:18:29.985Z"
        currencyRef:
          $ref: '#/components/schemas/CurrencyRef'
        currencyRate:
          type: number
          example: 1.13
          format: float
        lines:
          type: array
          items:
            $ref: '#/components/schemas/DepositLineItems'
        subTotal:
          type: number
          example: 301.5
          format: float
        taxAmount:
          type: number
          example: 20.5
          format: float
        totalAmount:
          type: number
          example: 322
          format: float
        status:
          type: string
          enum:
            - open
            - paid
            - void
            - unknown
            - draft
        memo:
          type: string
          example: Example bill memo.
        sourceModifiedDate:
          format: date-time
          type: string
          example: "2021-03-09T10:18:29.985Z"
      required:
        - id
        - postedDate
        - totalAmount
        - status
    GetDepositResponseDto:
      type: object
      properties:
        pagination:
          $ref: '#/components/schemas/PaginationMetaData'
        count:
          type: number
          readOnly: true
          example: 1
          format: integer
        meta:
          $ref: '#/components/schemas/BasicStartEndDateReportMetaData'
        data:
          type: array
          items:
            $ref: '#/components/schemas/GetDepositData'
      required:
        - pagination
        - count
        - meta
        - data
    PushDepositConnection:
      type: object
      properties:
        businessName:
          type: string
          example: Railz
          description: Unique business name identifier.
        serviceName:
          type: string
          example: quickbooks
          description: Name of accounting platform service.
          enum:
            - quickbooks
            - xero
      required:
        - businessName
        - serviceName
    PushDepositLineV1:
      type: object
      properties:
        description:
          type: string
          maxLength: 4000
          example: Services rendered.
        quantity:
          type: number
          format: float
          example: "4"
        unitAmount:
          type: number
          format: float
          example: "50.4"
        memo:
          type: string
          maxLength: 4000
          example: Example memo.
          deprecated: true
        accountRef:
          type: string
          example: "200"
        taxRef:
          type: string
          example: "45"
        subTotal:
          type: number
          format: float
          example: "202.0"
          deprecated: true
        totalAmount:
          type: number
          format: float
          example: "197.05"
          deprecated: true
        taxAmount:
          type: number
          format: float
          example: "15.25"
      required:
        - quantity
        - unitAmount
        - accountRef
    PushDepositV1:
      type: object
      properties:
        currencyRate:
          type: number
          example: "1.13"
        memo:
          type: string
          maxLength: 4000
          example: Example memo.
        currency:
          type: string
          example: CAD
        customerRef:
          type: string
          example: "124"
        postedDate:
          type: string
          format: date
          example: "2021-03-29"
        bankAccountRef:
          type: string
          example: "200"
        lines:
          type: array
          items:
            $ref: '#/components/schemas/PushDepositLineV1'
      required:
        - postedDate
        - bankAccountRef
        - lines
    PushDepositV1Dto:
      type: object
      properties:
        connection:
          $ref: '#/components/schemas/PushDepositConnection'
        data:
          $ref: '#/components/schemas/PushDepositV1'
      required:
        - connection
        - data
    PushDepositV1ResponseDto:
      type: object
      properties:
        pushCommunicationId:
          type: string
          readOnly: true
          example: 60473b57f0cdd1683ca71f60
        requestedOn:
          type: string
          readOnly: true
          example: "2021-03-09T08:15:22.035Z"
          format: date-time
        status:
          type: string
          readOnly: true
          example: pending
          enum:
            - success
            - failed
            - pending
        businessName:
          type: string
          readOnly: true
          example: Railz
        serviceName:
          type: string
          readOnly: true
          example: quickbooks
          enum:
            - freshbooks
            - quickbooks
            - quickbooksDesktop
            - xero
            - oracleNetsuite
            - sageBusinessCloud
            - sageIntacct
            - dynamicsBusinessCentral
            - wave
            - zohoBooks
        data:
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/PushDepositV1'
      required:
        - pushCommunicationId
        - requestedOn
        - status
        - businessName
        - serviceName
        - data
    BankAccountRefV2Dto:
      type: object
      properties:
        id:
          type: string
          example: "200"
        name:
          type: string
          example: "200"
      required:
        - id
    DepositLineV2Items:
      type: object
      properties:
        id:
          type: string
        description:
          type: string
          example: Services rendered.
        unitAmount:
          type: number
          example: 100.5
          format: float
        quantity:
          type: number
          example: 3
          format: integer
        taxAmount:
          type: number
          example: 20.5
          format: float
        amount:
          type: number
          example: 322
          format: float
        accountRef:
          $ref: '#/components/schemas/AccountRef'
        taxRateRef:
          $ref: '#/components/schemas/TaxRateRef'
        entityRef:
          $ref: '#/components/schemas/DepositEntityRef'
        links:
          type: array
          items:
            $ref: '#/components/schemas/Links'
        trackingCategoryRefs:
          type: array
          items:
            $ref: '#/components/schemas/TrackingCategoryRefV2'
      required:
        - amount
    GetDepositV2Data:
      type: object
      properties:
        id:
          type: string
          example: "1"
        postedDate:
          format: date-time
          type: string
          example: "2021-03-09T10:18:29.985Z"
        currency:
          type: string
          example: USD
        currencyRate:
          type: number
          example: 1.13
          format: float
        bankAccountRef:
          $ref: '#/components/schemas/BankAccountRefV2Dto'
        lines:
          type: array
          items:
            $ref: '#/components/schemas/DepositLineV2Items'
        subTotal:
          type: number
          example: 301.5
          format: float
        taxAmount:
          type: number
          example: 20.5
          format: float
        totalAmount:
          type: number
          example: 322
          format: float
        status:
          type: string
          enum:
            - open
            - paid
            - void
            - unknown
            - draft
        memo:
          type: string
          example: Example bill memo.
        sourceModifiedDate:
          format: date-time
          type: string
          example: "2021-03-09T10:18:29.985Z"
      required:
        - id
        - postedDate
        - lines
        - totalAmount
        - status
    GetDepositResponseV2Dto:
      type: object
      properties:
        pagination:
          $ref: '#/components/schemas/PaginationMetaData'
        meta:
          $ref: '#/components/schemas/BasicStartEndDateReportMetaDataV2'
        data:
          type: array
          items:
            $ref: '#/components/schemas/GetDepositV2Data'
      required:
        - pagination
        - meta
        - data
    PushDepositEntityRefV2:
      type: object
      properties:
        id:
          type: string
          example: "1"
        type:
          type: string
          example: vendor
          enum:
            - customer
            - employee
            - unknown
      required:
        - id
    LinksV2:
      type: object
      properties:
        type:
          type: string
          enum:
            - billPayment
            - transfer
            - journalEntry
            - paymentOnAccount
            - other
        id:
          type: string
          example: "560"
      required:
        - id
    TrackingCategoryRefPushDto:
      type: object
      properties:
        id:
          type: string
          example: "4040"
        type:
          type: string
          enum:
            - class
            - department
            - location
            - unknown
      required:
        - id
    PushDepositLineV2:
      type: object
      properties:
        description:
          type: string
          maxLength: 4000
          example: Services rendered.
        quantity:
          type: number
          format: float
          example: "4"
        unitAmount:
          type: number
          format: float
          example: "50.4"
        id:
          type: string
        accountRef:
          $ref: '#/components/schemas/AccountRefDto'
        taxRateRef:
          $ref: '#/components/schemas/TaxRateRefDto'
        entityRef:
          $ref: '#/components/schemas/PushDepositEntityRefV2'
        links:
          type: array
          items:
            $ref: '#/components/schemas/LinksV2'
        trackingCategoryRefs:
          type: array
          items:
            $ref: '#/components/schemas/TrackingCategoryRefPushDto'
      required:
        - quantity
        - unitAmount
        - accountRef
    PushDepositV2:
      type: object
      properties:
        currencyRate:
          type: number
          example: "1.13"
        memo:
          type: string
          maxLength: 4000
          example: Example memo.
        currency:
          type: string
          example: CAD
        customerRef:
          $ref: '#/components/schemas/CustomerRefDto'
        postedDate:
          type: string
          format: date
          example: "2021-03-29"
        bankAccountRef:
          $ref: '#/components/schemas/BankAccountRefDto'
        lines:
          type: array
          items:
            $ref: '#/components/schemas/PushDepositLineV2'
        passThrough:
          type: object
          example:
            CustomField:
              - DefinitionId: "1"
                StringValue: my custom value
                Name: Field One
      required:
        - bankAccountRef
        - lines
    PushDepositV2Dto:
      type: object
      properties:
        connectionUuid:
          type: string
          description: Unique connection identifier.
          example: CON-396d5daa-26b2-4979-89b6-cafb2c298155
        data:
          $ref: '#/components/schemas/PushDepositV2'
      required:
        - connectionUuid
        - data
    PushDepositV2ResponseDto:
      type: object
      properties:
        connectionUuid:
          type: string
          readOnly: true
          example: CON-396d5daa-26b2-4979-89b6-cafb2c298155
        businessName:
          type: string
          readOnly: true
          example: Railz
        serviceName:
          type: string
          readOnly: true
          example: xero
          enum:
            - freshbooks
            - quickbooks
            - quickbooksDesktop
            - xero
            - oracleNetsuite
            - sageBusinessCloud
            - sageIntacct
            - dynamicsBusinessCentral
            - wave
            - zohoBooks
        pushCommunicationId:
          type: string
          readOnly: true
          example: 60473b57f0cdd1683ca71f60
        requestedOn:
          type: string
          readOnly: true
          example: "2021-03-09T08:15:22.035Z"
          format: date-time
        status:
          type: string
          readOnly: true
          example: pending
          enum:
            - success
            - failed
            - pending
        data:
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/PushDepositV2'
      required:
        - connectionUuid
        - businessName
        - serviceName
        - pushCommunicationId
        - requestedOn
        - status
        - data
    CustomerRef:
      type: object
      properties:
        id:
          type: string
          example: "1"
        name:
          type: string
          example: Railz Financial
      required:
        - id
    EstimateLineItems:
      type: object
      properties:
        description:
          type: string
          example: Services rendered.
        unitAmount:
          type: number
          example: 100.5
          format: float
        quantity:
          type: number
          example: 3
          format: integer
        discountAmount:
          type: number
          example: 0
          format: float
        taxAmount:
          type: number
          example: 20.5
          format: float
        taxRateRef:
          $ref: '#/components/schemas/TaxRateRef'
        inventoryRef:
          $ref: '#/components/schemas/InventoryRef'
        discountPercentage:
          type: number
          example: 10.5
          format: float
        id:
          type: string
        accountRef:
          $ref: '#/components/schemas/AccountRef'
        subTotal:
          type: number
          example: 301.5
          format: float
          deprecated: true
        totalAmount:
          type: number
          example: 10.5
          format: float
          deprecated: true
        trackingCategoryRef:
          deprecated: true
          allOf:
            - $ref: '#/components/schemas/TrackingCategoryRef'
    GetEstimateData:
      type: object
      properties:
        id:
          type: string
          example: "1"
        customerRef:
          $ref: '#/components/schemas/CustomerRef'
        postedDate:
          format: date-time
          type: string
          example: "2021-03-09T10:18:29.985Z"
        dueDate:
          format: date-time
          type: string
          example: "2021-03-09T10:18:29.985Z"
        acceptedDate:
          format: date-time
          type: string
          example: "2021-03-09T10:18:29.985Z"
        expiryDate:
          format: date-time
          type: string
          example: "2021-03-09T10:18:29.985Z"
        currencyRef:
          $ref: '#/components/schemas/CurrencyRef'
        currencyRate:
          type: number
          example: 1.13
          format: float
        lines:
          type: array
          items:
            $ref: '#/components/schemas/EstimateLineItems'
        totalDiscount:
          type: number
          example: 322
          format: float
        discountPercentage:
          type: number
          example: 322
          format: float
        subTotal:
          type: number
          example: 301.5
          format: float
        taxAmount:
          type: number
          example: 20.5
          format: float
        totalAmount:
          type: number
          example: 322
          format: float
        status:
          type: string
          enum:
            - open
            - closed
            - void
            - unknown
            - draft
        memo:
          type: string
          example: Example bill memo.
        shippingAddress:
          $ref: '#/components/schemas/BaseAddress'
        sourceModifiedDate:
          format: date-time
          type: string
          example: "2021-03-09T10:18:29.985Z"
      required:
        - id
        - postedDate
        - totalAmount
        - status
    GetEstimateResponseDto:
      type: object
      properties:
        count:
          type: number
          readOnly: true
          example: 1
          format: integer
        meta:
          $ref: '#/components/schemas/BasicStartEndDateReportMetaData'
        pagination:
          $ref: '#/components/schemas/PaginationMetaData'
        data:
          type: array
          items:
            $ref: '#/components/schemas/GetEstimateData'
      required:
        - count
        - meta
        - pagination
        - data
    PushEstimateConnection:
      type: object
      properties:
        businessName:
          type: string
          example: Railz
          description: Unique business name identifier.
        serviceName:
          type: string
          example: quickbooks
          description: Name of accounting platform service.
          enum:
            - quickbooks
            - xero
            - freshbooks
      required:
        - businessName
        - serviceName
    EstimateLineV1:
      type: object
      properties:
        description:
          type: string
          maxLength: 4000
          example: Services rendered.
        quantity:
          type: number
          format: float
          example: "4"
        unitAmount:
          type: number
          format: float
          example: "50.5"
        discountPercentage:
          type: number
          format: float
          example: "10.0"
        subTotal:
          type: number
          deprecated: true
          format: float
          example: "202.0"
        taxAmount:
          type: number
          format: float
          example: "45"
        totalAmount:
          type: number
          deprecated: true
          format: float
          example: "15.25"
        accountRef:
          type: string
          example: "200"
        taxRef:
          type: string
          example: "197.05"
        inventoryRef:
          type: string
          example: BOOK
    PushEstimateV1:
      type: object
      properties:
        passThrough:
          type: object
          example:
            CustomField:
              - DefinitionId: "1"
                StringValue: my custom value
                Name: Field One
        currencyRate:
          type: number
          example: "1.13"
        dueDate:
          type: string
          format: date
          example: "2021-03-09"
        postedDate:
          type: string
          format: date
          example: "2021-03-09"
        acceptedDate:
          type: string
          format: date
          example: "2021-03-09"
        expiryDate:
          type: string
          format: date
          example: "2021-03-09"
        customerRef:
          type: string
          example: "645"
        currency:
          type: string
          example: CAD
        lines:
          type: array
          items:
            $ref: '#/components/schemas/EstimateLineV1'
        shipToAddress:
          $ref: '#/components/schemas/ShippingAddressDto'
        memo:
          type: string
          maxLength: 4000
          example: Example memo.
      required:
        - customerRef
        - lines
    PushEstimateV1Dto:
      type: object
      properties:
        connection:
          $ref: '#/components/schemas/PushEstimateConnection'
        data:
          $ref: '#/components/schemas/PushEstimateV1'
      required:
        - connection
        - data
    PushEstimateV1ResponseDto:
      type: object
      properties:
        pushCommunicationId:
          type: string
          readOnly: true
          example: 60473b57f0cdd1683ca71f60
        requestedOn:
          type: string
          readOnly: true
          example: "2021-03-09T08:15:22.035Z"
          format: date-time
        status:
          type: string
          readOnly: true
          example: pending
          enum:
            - success
            - failed
            - pending
        businessName:
          type: string
          readOnly: true
          example: Railz
        serviceName:
          type: string
          readOnly: true
          example: quickbooks
          enum:
            - freshbooks
            - quickbooks
            - quickbooksDesktop
            - xero
            - oracleNetsuite
            - sageBusinessCloud
            - sageIntacct
            - dynamicsBusinessCentral
            - wave
            - zohoBooks
        data:
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/PushEstimateV1'
      required:
        - pushCommunicationId
        - requestedOn
        - status
        - businessName
        - serviceName
        - data
    EstimateLineItemV2:
      type: object
      properties:
        id:
          type: string
          example: 8a3fdcc9-83eb-4fdd-83e0-52ec1b40b072
        accountRef:
          $ref: '#/components/schemas/AccountRef'
        taxRateRef:
          $ref: '#/components/schemas/TaxRateRef'
        inventoryRef:
          $ref: '#/components/schemas/InventoryRef'
        trackingCategoryRefs:
          type: array
          items:
            $ref: '#/components/schemas/TrackingCategoryRefV2'
        description:
          type: string
          example: Services rendered.
        unitAmount:
          type: number
          example: 100.5
          format: float
        quantity:
          type: number
          example: 3
          format: integer
        discountAmount:
          type: number
          example: 0
          format: float
        taxAmount:
          type: number
          example: 20.5
          format: float
        amount:
          type: number
          example: 322
          format: float
        discountPercentage:
          type: number
          example: 10.5
          format: float
      required:
        - amount
    GetEstimateDataV2:
      type: object
      properties:
        passThrough:
          type: object
          example:
            CustomField:
              - DefinitionId: "1"
                StringValue: my custom value
                Name: Field One
        id:
          type: string
          example: "1"
        customerRef:
          $ref: '#/components/schemas/CustomerRef'
        postedDate:
          format: date-time
          type: string
          example: "2021-03-09T10:18:29.985Z"
        dueDate:
          format: date-time
          type: string
          example: "2021-03-09T10:18:29.985Z"
        acceptedDate:
          format: date-time
          type: string
          example: "2021-03-09T10:18:29.985Z"
        expiryDate:
          format: date-time
          type: string
          example: "2021-03-09T10:18:29.985Z"
        currency:
          type: string
          example: USD
        currencyRate:
          type: number
          example: 1.13
          format: float
        lines:
          type: array
          items:
            $ref: '#/components/schemas/EstimateLineItemV2'
        totalDiscount:
          type: number
          example: 322
          format: float
        discountPercentage:
          type: number
          example: 322
          format: float
        subTotal:
          type: number
          example: 301.5
          format: float
        taxAmount:
          type: number
          example: 20.5
          format: float
        totalAmount:
          type: number
          example: 322
          format: float
        status:
          type: string
          enum:
            - open
            - closed
            - void
            - unknown
            - draft
        memo:
          type: string
          example: Example bill memo.
        shippingAddress:
          $ref: '#/components/schemas/BaseAddress'
        sourceModifiedDate:
          format: date-time
          type: string
          example: "2021-03-09T10:18:29.985Z"
      required:
        - id
        - postedDate
        - lines
        - totalAmount
        - status
    GetEstimateResponseV2Dto:
      type: object
      properties:
        meta:
          $ref: '#/components/schemas/BasicStartEndDateReportMetaDataV2'
        pagination:
          $ref: '#/components/schemas/PaginationMetaData'
        data:
          type: array
          items:
            $ref: '#/components/schemas/GetEstimateDataV2'
      required:
        - meta
        - pagination
        - data
    EstimateLineV2:
      type: object
      properties:
        id:
          type: string
        accountRef:
          $ref: '#/components/schemas/AccountRefDto'
        taxRateRef:
          $ref: '#/components/schemas/TaxRateRefDto'
        inventoryRef:
          $ref: '#/components/schemas/InventoryRefDto'
        description:
          type: string
          maxLength: 4000
          example: Services rendered.
        quantity:
          type: number
          format: float
          example: "4"
        unitAmount:
          type: number
          format: float
          example: "50.5"
        discountPercentage:
          type: number
          format: float
          example: "10.0"
        trackingCategoryRefs:
          type: array
          items:
            $ref: '#/components/schemas/TrackingCategoryRefPushDto'
    PushEstimateV2:
      type: object
      properties:
        passThrough:
          type: object
          example:
            CustomField:
              - DefinitionId: "1"
                StringValue: my custom value
                Name: Field One
        currencyRate:
          type: number
          example: "1.13"
        dueDate:
          type: string
          format: date
          example: "2021-03-09"
        postedDate:
          type: string
          format: date
          example: "2021-03-09"
        acceptedDate:
          type: string
          format: date
          example: "2021-03-09"
        expiryDate:
          type: string
          format: date
          example: "2021-03-09"
        customerRef:
          $ref: '#/components/schemas/CustomerRefDto'
        currency:
          type: string
          example: CAD
        lines:
          type: array
          items:
            $ref: '#/components/schemas/EstimateLineV2'
        shippingAddress:
          $ref: '#/components/schemas/ShippingAddressDto'
        memo:
          type: string
          maxLength: 4000
          example: Example memo.
      required:
        - customerRef
        - lines
    PushEstimateV2Dto:
      type: object
      properties:
        connectionUuid:
          type: string
          description: Unique connection identifier.
          example: CON-396d5daa-26b2-4979-89b6-cafb2c298155
        data:
          $ref: '#/components/schemas/PushEstimateV2'
      required:
        - connectionUuid
        - data
    PushEstimateV2ResponseDto:
      type: object
      properties:
        connectionUuid:
          type: string
          readOnly: true
          example: CON-396d5daa-26b2-4979-89b6-cafb2c298155
        businessName:
          type: string
          readOnly: true
          example: Railz
        serviceName:
          type: string
          readOnly: true
          example: xero
          enum:
            - freshbooks
            - quickbooks
            - quickbooksDesktop
            - xero
            - oracleNetsuite
            - sageBusinessCloud
            - sageIntacct
            - dynamicsBusinessCentral
            - wave
            - zohoBooks
        pushCommunicationId:
          type: string
          readOnly: true
          example: 60473b57f0cdd1683ca71f60
        requestedOn:
          type: string
          readOnly: true
          example: "2021-03-09T08:15:22.035Z"
          format: date-time
        status:
          type: string
          readOnly: true
          example: pending
          enum:
            - success
            - failed
            - pending
        data:
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/PushEstimateV2'
      required:
        - connectionUuid
        - businessName
        - serviceName
        - pushCommunicationId
        - requestedOn
        - status
        - data
    FinancialBenchmarkingsReportMetaData:
      type: object
      properties:
        industryCode:
          type: string
          example: "54"
        timeInBusiness:
          type: integer
          example: 5
        region:
          type: string
          example: CA
        numberOfBusinesses:
          type: number
          example: 282
        createdAt:
          type: string
          readOnly: true
          example: "2020-11-30T01:02:03Z"
          format: date-time
      required:
        - numberOfBusinesses
        - createdAt
    SummaryStatisticsData:
      type: object
      properties:
        min**:
          type: number
          format: float
          example: 301.5
        max**:
          type: number
          format: float
          example: 22012.5
        mean**:
          type: number
          format: float
          example: 6279.7
        median**:
          type: number
          format: float
          example: 3739.89
        sdev**:
          type: number
          format: float
          example: 21764.54
        quantile5**:
          type: number
          format: float
          example: 301.5
        quantile25**:
          type: number
          format: float
          example: 301.5
        quantile75**:
          type: number
          format: float
          example: 6710.61
        quantile95**:
          type: number
          format: float
          example: 7649.75
      required:
        - min**
        - max**
        - mean**
        - median**
        - sdev**
        - quantile5**
        - quantile25**
        - quantile75**
        - quantile95**
    FinancialBenchmarkingsData:
      type: object
      properties:
        section:
          oneOf:
            - $ref: '#/components/schemas/SummaryStatisticsData'
          allOf:
            - $ref: '#/components/schemas/SummaryStatisticsData'
        subSection:
          oneOf:
            - $ref: '#/components/schemas/SummaryStatisticsData'
          allOf:
            - $ref: '#/components/schemas/SummaryStatisticsData'
        group:
          oneOf:
            - $ref: '#/components/schemas/SummaryStatisticsData'
          allOf:
            - $ref: '#/components/schemas/SummaryStatisticsData'
        subGroup:
          oneOf:
            - $ref: '#/components/schemas/SummaryStatisticsData'
          allOf:
            - $ref: '#/components/schemas/SummaryStatisticsData'
        ratios:
          oneOf:
            - $ref: '#/components/schemas/SummaryStatisticsData'
          allOf:
            - $ref: '#/components/schemas/SummaryStatisticsData'
      required:
        - section
        - subSection
        - group
        - subGroup
        - ratios
    FinancialBenchmarkingsReport:
      type: object
      properties:
        meta:
          $ref: '#/components/schemas/FinancialBenchmarkingsReportMetaData'
        data:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/FinancialBenchmarkingsData'
      required:
        - meta
        - data
    FinancialBenchmarkingsResponseDto:
      type: object
      properties:
        count:
          type: number
          readOnly: true
          format: integer
          example: 1
        reports:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/FinancialBenchmarkingsReport'
      required:
        - count
        - reports
    FinancialForecastMetaData:
      type: object
      properties:
        reportId:
          type: string
          readOnly: true
          example: 5fad8a342a88364234392fb5
        serviceName:
          type: string
          readOnly: true
          example: xero
          enum:
            - quickbooks
            - xero
            - freshbooks
            - quickbooksDesktop
            - sageIntacct
            - sageBusinessCloud
            - oracleNetsuite
            - dynamicsBusinessCentral
            - wave
            - zohoBooks
        businessName:
          type: string
          readOnly: true
          example: Railz
        financialStatementType:
          type: string
          readOnly: true
          example: balanceSheets
          enum:
            - balanceSheets
            - incomeStatements
            - cashflowStatements
        reportFrequency:
          type: string
          readOnly: true
          example: month
        startDate:
          type: string
          readOnly: true
          example: "2020-11-01T00:00:00Z"
        endDate:
          type: string
          readOnly: true
          example: "2022-03-31T00:00:00Z"
        createdAt:
          type: string
          readOnly: true
          example: "2020-11-25T01:02:03Z"
          format: date-time
        updatedAt:
          type: string
          readOnly: true
          example: "2020-11-30T01:02:03Z"
          format: date-time
      required:
        - reportId
        - serviceName
        - businessName
        - financialStatementType
        - reportFrequency
        - startDate
        - endDate
        - createdAt
        - updatedAt
    FinancialForecastDataV1:
      type: object
      properties:
        section:
          type: string
          example: Assets
        subSection:
          type: string
          example: Current Assets
        group:
          type: string
          example: Cash And Cash Equivalents
        subGroup:
          type: string
          example: Checking
        account:
          type: string
          example: Bank of America
        subAccount:
          type: string
        endDate:
          type: string
          example: "2022-03-31"
          format: date
        amount:
          type: number
          example: 1500000.5
          format: double
      required:
        - section
        - subSection
        - group
        - subGroup
        - account
        - endDate
        - amount
    FinancialForecastReport:
      type: object
      properties:
        meta:
          $ref: '#/components/schemas/FinancialForecastMetaData'
        data:
          type: array
          items:
            $ref: '#/components/schemas/FinancialForecastDataV1'
      required:
        - meta
        - data
    FinancialForecastResponseV1Dto:
      type: object
      properties:
        count:
          type: number
          readOnly: true
          example: 1
          format: integer
        reports:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/FinancialForecastReport'
      required:
        - count
        - reports
    FinancialForecastMetaDataV2:
      type: object
      properties:
        connectionUuid:
          type: string
          readOnly: true
          example: CON-396d5daa-26b2-4979-89b6-cafb2c298155
        businessName:
          type: string
          readOnly: true
          example: Railz
        serviceName:
          type: string
          readOnly: true
          example: xero
          enum:
            - freshbooks
            - quickbooks
            - quickbooksDesktop
            - xero
            - oracleNetsuite
            - sageBusinessCloud
            - sageIntacct
            - dynamicsBusinessCentral
            - wave
            - zohoBooks
        reportId:
          type: string
          readOnly: true
          example: 5fad8a342a88364234392fb5
        financialStatementType:
          type: string
          readOnly: true
          example: balanceSheets
          enum:
            - balanceSheets
            - incomeStatements
            - cashflowStatements
        reportFrequency:
          type: string
          readOnly: true
          example: month
        startDate:
          type: string
          readOnly: true
          example: "2020-11-01T00:00:00Z"
        endDate:
          type: string
          readOnly: true
          example: "2022-03-31T00:00:00Z"
        createdAt:
          type: string
          readOnly: true
          example: "2020-11-25T01:02:03Z"
          format: date-time
        updatedAt:
          type: string
          readOnly: true
          example: "2020-11-30T01:02:03Z"
          format: date-time
      required:
        - connectionUuid
        - businessName
        - serviceName
        - reportId
        - financialStatementType
        - reportFrequency
        - startDate
        - endDate
        - createdAt
        - updatedAt
    FinancialForecastDataV2:
      type: object
      properties:
        section:
          type: string
          example: Assets
        subSection:
          type: string
          example: Current Assets
        group:
          type: string
          example: Cash And Cash Equivalents
        subGroup:
          type: string
          example: Checking
        account:
          type: string
          example: Bank of America
        subAccount:
          type: string
        endDate:
          type: string
          example: "2022-03-31"
          format: date
        value:
          type: number
          example: 1500000.5
          format: double
      required:
        - section
        - subSection
        - group
        - subGroup
        - endDate
        - value
    FinancialForecastReportV2:
      type: object
      properties:
        meta:
          $ref: '#/components/schemas/FinancialForecastMetaDataV2'
        data:
          type: array
          items:
            $ref: '#/components/schemas/FinancialForecastDataV2'
      required:
        - meta
        - data
    FinancialForecastResponseV2Dto:
      type: object
      properties:
        count:
          type: number
          readOnly: true
          example: 1
          format: integer
        reports:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/FinancialForecastReportV2'
      required:
        - count
        - reports
    FinancialFraudRiskReportMetaData:
      type: object
      properties:
        reportId:
          type: string
          example: 5fad8a342a88364234392fb5
          readOnly: true
        serviceName:
          type: string
          example: xero
          readOnly: true
          enum:
            - quickbooks
            - xero
            - freshbooks
            - quickbooksDesktop
            - sageIntacct
            - sageBusinessCloud
            - oracleNetsuite
            - dynamicsBusinessCentral
            - wave
            - zohoBooks
        businessName:
          type: string
          example: Railz
          readOnly: true
        startDate:
          type: string
          example: "2020-11-01T01:02:03Z"
          readOnly: true
          format: date-time
        endDate:
          type: string
          example: "2020-11-30T01:02:03Z"
          readOnly: true
          format: date-time
        createdAt:
          type: string
          example: "2020-11-30T01:02:03Z"
          readOnly: true
          format: date-time
        updatedAt:
          type: string
          example: "2020-11-30T01:02:03Z"
          readOnly: false
          format: date-time
      required:
        - reportId
        - serviceName
        - businessName
        - startDate
        - endDate
        - createdAt
        - updatedAt
    OutlierTransactions:
      type: object
      properties:
        id:
          type: string
          example: nt
          readOnly: true
      required:
        - id
    TransactionKeywords:
      type: object
      properties:
        type:
          type: string
          example: bill
          enum:
            - bill
            - billPayment
            - creditNote
            - deposit
            - expense
            - estimate
            - inventoryAdjustment
            - invoice
            - journalEntry
            - other
            - payment
            - payroll
            - purchaseOrder
            - refund
            - transfer
            - taxPayment
            - taxAdjustment
            - taxRefund
            - taxReversal
            - unknown
            - vendorCreditNote
          readOnly: true
        count:
          type: number
          example: 1
          format: integer
          readOnly: true
      required:
        - type
        - count
    TransactionsSectionStats:
      type: object
      properties:
        section:
          type: string
          example: Expenses
          readOnly: true
        count:
          type: number
          example: 4
          readOnly: true
          format: integer
        sdev:
          type: number
          example: 39.82
          readOnly: true
          format: float
      required:
        - section
        - count
        - sdev
    TransactionPatterns:
      type: object
      properties:
        repetitionPattern:
          type: string
          example: Accounts Payables 113.71
          readOnly: true
        count:
          type: number
          example: 3
          readOnly: true
      required:
        - repetitionPattern
        - count
    FinancialFraudRiskData:
      type: object
      properties:
        benfordLawScore:
          type: number
          example: 20.92
          format: float
          readOnly: true
        outlierScore:
          type: number
          example: 0.659176337
          format: float
          readOnly: true
        outlierRatio:
          type: number
          example: 0.093829111
          format: float
          readOnly: true
        outlierTransactions:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/OutlierTransactions'
        transactionKeywords:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/TransactionKeywords'
        transactionsSectionStats:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/TransactionsSectionStats'
        transactionPatterns:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/TransactionPatterns'
        currentRatioDelta:
          type: number
          example: 1
          format: float
          readOnly: true
        quickRatioDelta:
          type: number
          example: 1
          format: float
          readOnly: true
        debtToEquityRatioDelta:
          type: number
          example: 1
          format: float
          readOnly: true
        netProfitMarginRatioDelta:
          type: number
          example: 1
          format: float
          readOnly: true
      required:
        - benfordLawScore
    FinancialFraudRiskReport:
      type: object
      properties:
        meta:
          $ref: '#/components/schemas/FinancialFraudRiskReportMetaData'
        data:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/FinancialFraudRiskData'
      required:
        - meta
        - data
    FinancialFraudRiskResponseDto:
      type: object
      properties:
        count:
          type: number
          readOnly: true
          example: 1
          format: integer
        reports:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/FinancialFraudRiskReport'
      required:
        - count
        - reports
    FinancialFraudRiskReportMetaDataV2:
      type: object
      properties:
        connectionUuid:
          type: string
          readOnly: true
          example: CON-396d5daa-26b2-4979-89b6-cafb2c298155
        businessName:
          type: string
          readOnly: true
          example: Railz
        serviceName:
          type: string
          readOnly: true
          example: xero
          enum:
            - freshbooks
            - quickbooks
            - quickbooksDesktop
            - xero
            - oracleNetsuite
            - sageBusinessCloud
            - sageIntacct
            - dynamicsBusinessCentral
            - wave
            - zohoBooks
        reportId:
          type: string
          example: 5fad8a342a88364234392fb5
          readOnly: true
        startDate:
          type: string
          example: "2020-11-01T01:02:03Z"
          readOnly: true
          format: date-time
        endDate:
          type: string
          example: "2020-11-30T01:02:03Z"
          readOnly: true
          format: date-time
        createdAt:
          type: string
          example: "2020-11-30T01:02:03Z"
          readOnly: true
          format: date-time
        updatedAt:
          type: string
          example: "2020-11-30T01:02:03Z"
          readOnly: false
          format: date-time
      required:
        - connectionUuid
        - businessName
        - serviceName
        - reportId
        - startDate
        - endDate
        - createdAt
        - updatedAt
    FinancialFraudRiskReportV2:
      type: object
      properties:
        meta:
          $ref: '#/components/schemas/FinancialFraudRiskReportMetaDataV2'
        data:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/FinancialFraudRiskData'
      required:
        - meta
        - data
    FinancialFraudRiskResponseV2Dto:
      type: object
      properties:
        count:
          type: number
          readOnly: true
          example: 1
          format: integer
        reports:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/FinancialFraudRiskReportV2'
      required:
        - count
        - reports
    FinancialRatiosMetaData:
      type: object
      properties:
        reportId:
          type: string
          readOnly: true
          example: 5fad8a342a88364234392fb5
        startDate:
          type: string
          readOnly: true
          example: "2020-11-25T01:02:03Z"
        endDate:
          type: string
          readOnly: true
          example: "2020-12-25T01:02:03Z"
        serviceName:
          type: string
          readOnly: true
          example: xero
          enum:
            - quickbooks
            - xero
            - freshbooks
            - quickbooksDesktop
            - sageIntacct
            - sageBusinessCloud
            - oracleNetsuite
            - dynamicsBusinessCentral
            - wave
            - zohoBooks
        businessName:
          type: string
          readOnly: true
          example: Railz
        reportFrequency:
          type: string
          readOnly: true
          example: month
        createdAt:
          type: string
          readOnly: true
          example: "2020-11-25T01:02:03Z"
          format: date-time
        updatedAt:
          type: string
          readOnly: true
          example: "2020-11-30T01:02:03Z"
          format: date-time
      required:
        - reportId
        - startDate
        - endDate
        - serviceName
        - businessName
        - reportFrequency
        - createdAt
        - updatedAt
    FinancialRatiosCreditData:
      type: object
      properties:
        averageCollectionPeriod:
          type: number
          example: 36.5
          format: float
    FinancialRatiosEfficiencyData:
      type: object
      properties:
        grossBurnRate:
          type: number
          example: 56223.25
          format: float
        inventoryTurnoverRatio:
          type: number
          example: 2.78891542
          format: float
        assetTurnoverRatio:
          type: number
          example: 3.83548112
          format: float
        payablesConversionPeriod:
          type: number
          example: 83
          format: float
        accountsReceivableTurnoverRatio:
          type: number
          example: 15.55
          format: float
        accountsPayableTurnoverRatio:
          type: number
          example: 8.99
          format: float
        daysPayableOutstanding:
          type: number
          example: 42.26
          format: float
        daysSalesOutstanding:
          type: number
          example: 34.19
          format: float
        averageOutstandingPayablesBalance:
          type: number
          example: 100.99
          format: float
        averageOutstandingReceivablesBalance:
          type: number
          example: 29.01
          format: float
        churnRate:
          type: number
          example: 1
          format: float
    FinancialRatiosLeverageData:
      type: object
      properties:
        equityToLTAssets:
          type: number
          example: 0.26784885
          format: float
        shortDebtToEquityRatio:
          type: number
          example: 0.87117832
          format: float
        debtToEquityRatio:
          type: number
          example: 1.03899521
          format: float
        interestBankLoan:
          type: number
          example: 1.03899521
          format: float
        interestCoverageRatio:
          type: number
          example: 3.48778221
          format: float
        debtToAssetsRatio:
          type: number
          example: 0.89995561
          format: float
        debtServiceCoverageRatio:
          type: number
          example: 4.20509522
          format: float
        leverageIndex:
          type: number
          example: 0.878
          format: float
        leverageRatio:
          type: number
          example: 0.067
          format: float
    FinancialRatiosLiquidityData:
      type: object
      properties:
        quickRatio:
          type: number
          example: 0.88811223
          format: float
        absoluteLiquidity:
          type: number
          example: 530167.93
          format: float
        currentRatio:
          type: number
          example: 1.10856651
          format: float
        grossBurn:
          type: number
          example: 382071.92
          format: float
        runway:
          type: number
          example: 12.84898122
          format: float
        cashRatio:
          type: number
          example: 0.73314452
          format: float
        freeCashflowRatio:
          type: number
          example: 0.45151529
          format: float
        cashFlowCoverageRatio:
          type: number
          example: 0.09030305
          format: float
    FinancialRatiosMarketData:
      type: object
      properties:
        debtToEnterpriseValue:
          type: number
          example: 0.19155987
          format: float
    FinancialRatiosProfitabilityData:
      type: object
      properties:
        returnOnAssets:
          type: number
          example: 0.09109873
          format: float
        ebitda:
          type: number
          example: 278309.39
          format: float
        ebitdaMargin:
          type: number
          example: 0.32309803
          format: float
        workingCapital:
          type: number
          example: 78903.24
          format: float
        freeCashFlow:
          type: number
          example: 129834.37
          format: float
        grossMargin:
          type: number
          example: 0.48199755
          format: float
        netProfitMargin:
          type: number
          example: 0.16412058
          format: float
        operatingMargin:
          type: number
          example: 0.06156661
          format: float
        returnOnEquity:
          type: number
          example: 0.15532511
          format: float
        revenueConcentrationIndex:
          type: number
          example: 2.58889925
          format: float
        totalAccrualsTotalAssets:
          type: number
          example: 0.044
          format: float
        sgaExpensesIndex:
          type: number
          example: 1.11
          format: float
        salesGrowthIndex:
          type: number
          example: 0.755
          format: float
        grossMarginIndex:
          type: number
          example: 1.556
          format: float
        annualRecurringRevenue:
          type: number
          example: 0.814
          format: float
        annualRecurringRevenueRate:
          type: number
          example: 0.266
          format: float
        monthlyRecurringRevenue:
          type: number
          example: 1.556
          format: float
        monthlyRecurringRevenueRate:
          type: number
          example: 0.389
          format: float
    FinancialRatiosReliabilityData:
      type: object
      properties:
        assetQualityIndex:
          type: number
          example: 0.608
          format: float
        depreciationIndex:
          type: number
          example: 0.801
          format: float
        daysSalesReceivablesIndex:
          type: number
          example: 0.814
          format: float
    FinancialRatiosData:
      type: object
      properties:
        credit:
          $ref: '#/components/schemas/FinancialRatiosCreditData'
        efficiency:
          $ref: '#/components/schemas/FinancialRatiosEfficiencyData'
        leverage:
          $ref: '#/components/schemas/FinancialRatiosLeverageData'
        liquidity:
          $ref: '#/components/schemas/FinancialRatiosLiquidityData'
        market:
          $ref: '#/components/schemas/FinancialRatiosMarketData'
        profitability:
          $ref: '#/components/schemas/FinancialRatiosProfitabilityData'
        reliability:
          $ref: '#/components/schemas/FinancialRatiosReliabilityData'
    FinancialRatiosReport:
      type: object
      properties:
        meta:
          $ref: '#/components/schemas/FinancialRatiosMetaData'
        data:
          $ref: '#/components/schemas/FinancialRatiosData'
      required:
        - meta
        - data
    FinancialRatiosResponseDto:
      type: object
      properties:
        count:
          type: number
          readOnly: true
          example: 1
          format: integer
        pagination:
          $ref: '#/components/schemas/PaginationMetaData'
        ratios:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/FinancialRatiosReport'
      required:
        - count
        - pagination
        - ratios
    FinancialRatiosMetaDataV2:
      type: object
      properties:
        connectionUuid:
          type: string
          readOnly: true
          example: CON-396d5daa-26b2-4979-89b6-cafb2c298155
        businessName:
          type: string
          readOnly: true
          example: Railz
        serviceName:
          type: string
          readOnly: true
          example: xero
          enum:
            - freshbooks
            - quickbooks
            - quickbooksDesktop
            - xero
            - oracleNetsuite
            - sageBusinessCloud
            - sageIntacct
            - dynamicsBusinessCentral
            - wave
            - zohoBooks
        reportId:
          type: string
          readOnly: true
          example: 5fad8a342a88364234392fb5
        startDate:
          type: string
          readOnly: true
          example: "2020-11-25T01:02:03Z"
        endDate:
          type: string
          readOnly: true
          example: "2020-12-25T01:02:03Z"
        reportFrequency:
          type: string
          readOnly: true
          example: month
        createdAt:
          type: string
          readOnly: true
          example: "2020-11-25T01:02:03Z"
          format: date-time
        updatedAt:
          type: string
          readOnly: true
          example: "2020-11-30T01:02:03Z"
          format: date-time
      required:
        - connectionUuid
        - businessName
        - serviceName
        - reportId
        - startDate
        - endDate
        - reportFrequency
        - createdAt
        - updatedAt
    FinancialRatiosReportV2:
      type: object
      properties:
        meta:
          $ref: '#/components/schemas/FinancialRatiosMetaDataV2'
        data:
          $ref: '#/components/schemas/FinancialRatiosData'
      required:
        - meta
        - data
    FinancialRatiosResponseV2Dto:
      type: object
      properties:
        count:
          type: number
          readOnly: true
          example: 1
          format: integer
          deprecated: true
        pagination:
          $ref: '#/components/schemas/PaginationMetaData'
        ratios:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/FinancialRatiosReportV2'
      required:
        - count
        - pagination
        - ratios
    FinancialStatementReportMetaData:
      type: object
      properties:
        reportId:
          type: string
          readOnly: true
          example: 5fad8a342a88364234392fb5
        status:
          type: string
          readOnly: true
          example: success
          enum:
            - success
            - failed
            - pending
            - empty
        reportFrequency:
          type: string
          readOnly: true
          example: month
        currency:
          type: string
          example: USD
        createdAt:
          type: string
          readOnly: true
          example: "2020-11-25T01:02:03Z"
          format: date-time
        updatedAt:
          type: string
          readOnly: true
          example: "2020-11-30T01:02:03Z"
          format: date-time
        startDate:
          type: string
          readOnly: true
          example: "2020-11-25T01:02:03Z"
        endDate:
          type: string
          readOnly: true
          example: "2020-12-25T01:02:03Z"
        serviceName:
          type: string
          readOnly: true
          example: xero
          enum:
            - freshbooks
            - quickbooks
            - quickbooksDesktop
            - xero
            - oracleNetsuite
            - sageBusinessCloud
            - sageIntacct
            - dynamicsBusinessCentral
            - wave
            - zohoBooks
        businessName:
          type: string
          readOnly: true
          example: Railz
        accountingMethod:
          type: string
          readOnly: true
          example: accrual
          enum:
            - cash
            - accrual
      required:
        - reportId
        - status
        - reportFrequency
        - createdAt
        - updatedAt
        - startDate
        - endDate
        - serviceName
        - businessName
        - accountingMethod
    BalanceSheetsData:
      type: object
      properties:
        section:
          type: string
          example: Assets
          enum:
            - Assets
            - Liabilities
            - Equity
        subSection:
          type: string
          example: Current Assets
          enum:
            - Current Assets
            - Non-Current Assets
            - Current Liabilities
            - Non-Current Liabilities
            - Equity
            - Other Assets
            - Other Liabilities
            - Expenses
        fullyQualifiedName:
          type: string
          example: 'Expenses : Transportation : Car Mileage'
          description: Full name of the account and parent account(s), colon separated.
        depth:
          type: number
          example: 3
          description: The sub account depth, based on it's account hierarchy level. E.g. top parent account would have a depth of 1.
        group:
          type: string
          example: Cash And Cash Equivalents
        subGroup:
          type: string
          example: Utilities
        accountId:
          type: string
          example: "3928"
        subAccountId:
          type: string
          example: "231"
        account:
          type: string
          readOnly: true
          example: Checking
        subAccount:
          type: string
          example: Checking
        value:
          type: number
          readOnly: true
          example: 990
          format: float
      required:
        - section
        - subSection
        - fullyQualifiedName
        - depth
        - account
        - value
    BalanceSheetsReport:
      type: object
      properties:
        meta:
          $ref: '#/components/schemas/FinancialStatementReportMetaData'
        data:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/BalanceSheetsData'
      required:
        - meta
        - data
    BalanceSheetsResponseDto:
      type: object
      properties:
        pagination:
          $ref: '#/components/schemas/PaginationMetaData'
        count:
          type: number
          readOnly: true
          example: 1
          format: integer
        reports:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/BalanceSheetsReport'
      required:
        - pagination
        - count
        - reports
    CashflowStatementsData:
      type: object
      properties:
        section:
          type: string
          example: Operating Activities
          enum:
            - Operating Activities
            - Financing Activities
            - Investing Activities
            - Cash
        subSection:
          type: string
          example: Payments
          enum:
            - Payments
            - Adjustments
            - Changes
            - Proceeds
            - Stock
            - Intangibles
            - Property Plant And Equipment
            - Cash
        group:
          type: string
          example: Financing Activities
        subGroup:
          type: string
          example: Retained Earnings
        accountId:
          type: string
          example: "3928"
        subAccountId:
          type: string
          example: "231"
        account:
          type: string
          readOnly: true
          example: Financing Activities
        subAccount:
          type: string
          example: Retained Earnings
        value:
          type: number
          readOnly: true
          example: 13000
          format: float
        fullyQualifiedName:
          type: string
          example: 'Expenses : Transportation : Car Mileage'
          description: Full name of the account and parent account(s), colon separated.
        depth:
          type: number
          example: 3
          description: The sub account depth, based on it's account hierarchy level. E.g. top parent account would have a depth of 1.
      required:
        - section
        - subSection
        - account
        - value
        - fullyQualifiedName
        - depth
    CashflowStatementsReport:
      type: object
      properties:
        meta:
          $ref: '#/components/schemas/FinancialStatementReportMetaData'
        data:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/CashflowStatementsData'
      required:
        - meta
        - data
    CashflowStatementsResponseDto:
      type: object
      properties:
        pagination:
          $ref: '#/components/schemas/PaginationMetaData'
        count:
          type: number
          readOnly: true
          example: 1
          format: integer
        reports:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/CashflowStatementsReport'
      required:
        - pagination
        - count
        - reports
    IncomeStatementsData:
      type: object
      properties:
        section:
          type: string
          example: Expenses
          enum:
            - Income
            - Expenses
        subSection:
          type: string
          example: Operating Expenses
          enum:
            - Income
            - Cost of Goods Sold
            - Operating Expenses
            - Other Income
            - Other Expenses
            - Uncategorized Expenses
            - Uncategorized Income
            - Expenses
        group:
          type: string
          example: Office General Administrative Expenses
        subGroup:
          type: string
          example: Office Supplies & Software
        accountId:
          type: string
          example: "3928"
        subAccountId:
          type: string
          example: "231"
        account:
          type: string
          readOnly: true
          example: Travel
        subAccount:
          type: string
          example: National
        value:
          type: number
          readOnly: true
          example: 490
          format: float
        fullyQualifiedName:
          type: string
          example: 'Expenses : Transportation : Car Mileage'
          description: Full name of the account and parent account(s), colon separated.
        depth:
          type: number
          example: 3
          description: The sub account depth, based on it's account hierarchy level. E.g. top parent account would have a depth of 1.
      required:
        - section
        - subSection
        - account
        - value
        - fullyQualifiedName
        - depth
    IncomeStatementsReport:
      type: object
      properties:
        meta:
          $ref: '#/components/schemas/FinancialStatementReportMetaData'
        data:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/IncomeStatementsData'
      required:
        - meta
        - data
    IncomeStatementsResponseDto:
      type: object
      properties:
        pagination:
          $ref: '#/components/schemas/PaginationMetaData'
        count:
          type: number
          readOnly: true
          example: 1
          format: integer
        reports:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/IncomeStatementsReport'
      required:
        - pagination
        - count
        - reports
    FinancialStatementReportMetaDataV2:
      type: object
      properties:
        connectionUuid:
          type: string
          readOnly: true
          example: CON-396d5daa-26b2-4979-89b6-cafb2c298155
        businessName:
          type: string
          readOnly: true
          example: Railz
        serviceName:
          type: string
          readOnly: true
          example: xero
          enum:
            - freshbooks
            - quickbooks
            - quickbooksDesktop
            - xero
            - oracleNetsuite
            - sageBusinessCloud
            - sageIntacct
            - dynamicsBusinessCentral
            - wave
            - zohoBooks
        reportId:
          type: string
          readOnly: true
          example: 5fad8a342a88364234392fb5
        status:
          type: string
          readOnly: true
          example: success
          enum:
            - success
            - failed
            - pending
            - empty
        reportFrequency:
          type: string
          readOnly: true
          example: month
        currency:
          type: string
          example: USD
        createdAt:
          type: string
          readOnly: true
          example: "2020-11-25T01:02:03Z"
          format: date-time
        updatedAt:
          type: string
          readOnly: true
          example: "2020-11-30T01:02:03Z"
          format: date-time
        startDate:
          type: string
          readOnly: true
          example: "2020-11-25T01:02:03Z"
        endDate:
          type: string
          readOnly: true
          example: "2020-12-25T01:02:03Z"
        accountingMethod:
          type: string
          readOnly: true
          example: accrual
          enum:
            - cash
            - accrual
      required:
        - connectionUuid
        - businessName
        - serviceName
        - reportId
        - status
        - reportFrequency
        - createdAt
        - updatedAt
        - startDate
        - endDate
        - accountingMethod
    BalanceSheetsDataV2:
      type: object
      properties:
        section:
          type: string
          example: Assets
          enum:
            - Assets
            - Liabilities
            - Equity
        subSection:
          type: string
          example: Current Assets
          enum:
            - Current Assets
            - Non-Current Assets
            - Current Liabilities
            - Non-Current Liabilities
            - Equity
            - Other Assets
            - Other Liabilities
            - Expenses
        fullyQualifiedName:
          type: string
          example: 'Expenses : Transportation : Car Mileage'
          description: Full name of the account and parent account(s), colon separated.
        depth:
          type: number
          example: 3
          description: The sub account depth, based on it's account hierarchy level. E.g. top parent account would have a depth of 1.
        group:
          type: string
          example: Cash And Cash Equivalents
        subGroup:
          type: string
          example: Utilities
        accountId:
          type: string
          example: "3928"
        subAccountId:
          type: string
          example: "231"
        account:
          type: string
          readOnly: true
          example: Checking
        subAccount:
          type: string
          example: Checking
        value:
          type: number
          readOnly: true
          example: 990
          format: float
        classification:
          type: string
          example: Assets
        type:
          type: string
          example: Fixed Assets
        subType:
          type: string
          example: Fixed Assets
      required:
        - section
        - subSection
        - depth
        - value
    BalanceSheetsReportV2:
      type: object
      properties:
        meta:
          $ref: '#/components/schemas/FinancialStatementReportMetaDataV2'
        data:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/BalanceSheetsDataV2'
      required:
        - meta
        - data
    BalanceSheetsResponseV2Dto:
      type: object
      properties:
        pagination:
          $ref: '#/components/schemas/PaginationMetaData'
        reports:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/BalanceSheetsReportV2'
      required:
        - pagination
        - reports
    CashflowStatementsV2Data:
      type: object
      properties:
        section:
          type: string
          example: Operating Activities
          enum:
            - Operating Activities
            - Financing Activities
            - Investing Activities
            - Cash
        subSection:
          type: string
          example: Payments
          enum:
            - Payments
            - Adjustments
            - Changes
            - Proceeds
            - Stock
            - Intangibles
            - Property Plant And Equipment
            - Cash
        group:
          type: string
          example: Financing Activities
        subGroup:
          type: string
          example: Retained Earnings
        accountId:
          type: string
          example: "3928"
        subAccountId:
          type: string
          example: "231"
        account:
          type: string
          readOnly: true
          example: Financing Activities
        subAccount:
          type: string
          example: Retained Earnings
        value:
          type: number
          readOnly: true
          example: 13000
          format: float
        fullyQualifiedName:
          type: string
          example: 'Expenses : Transportation : Car Mileage'
          description: Full name of the account and parent account(s), colon separated.
        depth:
          type: number
          example: 3
          description: The sub account depth, based on it's account hierarchy level. E.g. top parent account would have a depth of 1.
        classification:
          type: string
          example: Assets
        type:
          type: string
          example: Fixed Assets
        subType:
          type: string
          example: Fixed Assets
      required:
        - section
        - subSection
        - account
        - value
        - depth
    CashflowStatementsReportV2:
      type: object
      properties:
        meta:
          $ref: '#/components/schemas/FinancialStatementReportMetaDataV2'
        data:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/CashflowStatementsV2Data'
      required:
        - meta
        - data
    CashflowStatementsResponseV2Dto:
      type: object
      properties:
        pagination:
          $ref: '#/components/schemas/PaginationMetaData'
        reports:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/CashflowStatementsReportV2'
      required:
        - pagination
        - reports
    IncomeStatementsV2Data:
      type: object
      properties:
        section:
          type: string
          example: Expenses
          enum:
            - Income
            - Expenses
        subSection:
          type: string
          example: Operating Expenses
          enum:
            - Income
            - Cost of Goods Sold
            - Operating Expenses
            - Other Income
            - Other Expenses
            - Uncategorized Expenses
            - Uncategorized Income
            - Expenses
        group:
          type: string
          example: Office General Administrative Expenses
        subGroup:
          type: string
          example: Office Supplies & Software
        accountId:
          type: string
          example: "3928"
        subAccountId:
          type: string
          example: "231"
        account:
          type: string
          readOnly: true
          example: Travel
        subAccount:
          type: string
          example: National
        value:
          type: number
          readOnly: true
          example: 490
          format: float
        fullyQualifiedName:
          type: string
          example: 'Expenses : Transportation : Car Mileage'
          description: Full name of the account and parent account(s), colon separated.
        depth:
          type: number
          example: 3
          description: The sub account depth, based on it's account hierarchy level. E.g. top parent account would have a depth of 1.
        classification:
          type: string
          example: Assets
        type:
          type: string
          example: Fixed Assets
        subType:
          type: string
          example: Fixed Assets
      required:
        - section
        - subSection
        - account
        - value
        - depth
    IncomeStatementsReportV2:
      type: object
      properties:
        meta:
          $ref: '#/components/schemas/FinancialStatementReportMetaDataV2'
        data:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/IncomeStatementsV2Data'
      required:
        - meta
        - data
    IncomeStatementsResponseV2Dto:
      type: object
      properties:
        pagination:
          $ref: '#/components/schemas/PaginationMetaData'
        reports:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/IncomeStatementsReportV2'
      required:
        - pagination
        - reports
    BillOrInvoiceItem:
      type: object
      properties:
        description:
          type: string
          example: Item description
        unitPrice:
          type: number
          example: 100.5
          format: float
        accountRef:
          $ref: '#/components/schemas/AccountRef'
        taxRateRef:
          $ref: '#/components/schemas/TaxRateRef'
    InventorySubsidiaryRef:
      type: object
      properties:
        id:
          type: string
          example: "2"
        name:
          type: string
          example: Company Ltd
    InventoryLocationRef:
      type: object
      properties:
        id:
          type: string
          example: "9"
        name:
          type: string
          example: Boston
      required:
        - id
    QuantityOnHandData:
      type: object
      properties:
        locationRef:
          $ref: '#/components/schemas/InventoryLocationRef'
        quantity:
          type: number
          example: 2.5
          format: float
        accountRef:
          $ref: '#/components/schemas/AccountRef'
    GetInventoryDataV1:
      type: object
      properties:
        id:
          type: string
          example: "1"
        name:
          type: string
          example: Product Services
        code:
          type: string
          example: "100"
        sourceModifiedDate:
          format: date-time
          type: string
          example: "2021-03-09T10:18:29.985Z"
        billItem:
          $ref: '#/components/schemas/BillOrInvoiceItem'
        invoiceItem:
          $ref: '#/components/schemas/BillOrInvoiceItem'
        isInvoiceItem:
          type: boolean
          example: true
        isBillItem:
          type: boolean
          example: true
        subsidiaryRefs:
          type: array
          items:
            $ref: '#/components/schemas/InventorySubsidiaryRef'
        quantityOnHand:
          type: array
          items:
            $ref: '#/components/schemas/QuantityOnHandData'
        type:
          type: string
          enum:
            - inventory
            - nonInventory
            - service
          example: inventory
        quantityOnHandPerLocation:
          deprecated: true
          type: array
          items:
            $ref: '#/components/schemas/QuantityOnHandData'
        itemStatus:
          type: string
          enum:
            - unknown
            - active
            - archived
          example: active
      required:
        - id
        - itemStatus
    GetInventoryResponseDto:
      type: object
      properties:
        pagination:
          $ref: '#/components/schemas/PaginationMetaData'
        count:
          type: number
          readOnly: true
          example: 1
          format: integer
        meta:
          $ref: '#/components/schemas/ListReportMetaData'
        data:
          type: array
          items:
            $ref: '#/components/schemas/GetInventoryDataV1'
      required:
        - pagination
        - count
        - meta
        - data
    InventoryBillInvoiceLineItems:
      type: object
      properties:
        description:
          type: string
          maxLength: 4000
          example: Item description.
        unitPrice:
          type: number
          format: float
          maximum: 999999999999
          example: 2.5
        accountRef:
          type: string
          example: "200"
        taxRateRef:
          type: string
          example: "12"
    PushInventoryV1:
      type: object
      properties:
        code:
          type: string
          maxLength: 30
          example: GOL-W
        type:
          type: string
          enum:
            - inventory
            - nonInventory
            - service
          example: inventory
        name:
          type: string
          example: White golf balls.
          maxLength: 50
        quantityOnHand:
          type: number
          format: float
          example: 200
          maximum: 999999999999
        subsidiaryRefs:
          example:
            - "2"
            - 3hn
            - 1t2
          type: array
          items:
            type: string
        invoiceItem:
          $ref: '#/components/schemas/InventoryBillInvoiceLineItems'
        billItem:
          $ref: '#/components/schemas/InventoryBillInvoiceLineItems'
        isBillItem:
          type: boolean
          example: true
          default: true
        isInvoiceItem:
          type: boolean
          example: true
          default: true
    PushInventoryV1Dto:
      type: object
      properties:
        connection:
          $ref: '#/components/schemas/PushConnection'
        data:
          $ref: '#/components/schemas/PushInventoryV1'
      required:
        - connection
        - data
    PushInventoryV1ResponseDto:
      type: object
      properties:
        pushCommunicationId:
          type: string
          readOnly: true
          example: 60473b57f0cdd1683ca71f60
        requestedOn:
          type: string
          readOnly: true
          example: "2021-03-09T08:15:22.035Z"
          format: date-time
        status:
          type: string
          readOnly: true
          example: pending
          enum:
            - success
            - failed
            - pending
        businessName:
          type: string
          readOnly: true
          example: Railz
        serviceName:
          type: string
          readOnly: true
          example: quickbooks
          enum:
            - freshbooks
            - quickbooks
            - quickbooksDesktop
            - xero
            - oracleNetsuite
            - sageBusinessCloud
            - sageIntacct
            - dynamicsBusinessCentral
            - wave
            - zohoBooks
        data:
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/PushInventoryV1'
      required:
        - pushCommunicationId
        - requestedOn
        - status
        - businessName
        - serviceName
        - data
    UpdateInventoryConnection:
      type: object
      properties:
        businessName:
          type: string
          example: Railz
          description: Unique business name identifier.
        serviceName:
          type: string
          example: quickbooks
          description: Name of accounting platform service.
          enum:
            - quickbooks
            - xero
            - freshbooks
            - dynamicsBusinessCentral
            - oracleNetsuite
            - wave
            - sageIntacct
      required:
        - businessName
        - serviceName
    UpdateInventoryV1:
      type: object
      properties:
        code:
          type: string
          maxLength: 30
          example: GOL-W
        type:
          type: string
          enum:
            - inventory
            - nonInventory
            - service
          example: inventory
        subsidiaryRefs:
          example:
            - "2"
            - 3hn
            - 1t2
          type: array
          items:
            type: string
        name:
          type: string
          example: White golf balls.
          maxLength: 50
        invoiceItem:
          $ref: '#/components/schemas/InventoryBillInvoiceLineItems'
        billItem:
          $ref: '#/components/schemas/InventoryBillInvoiceLineItems'
        isBillItem:
          type: boolean
          example: true
          default: true
        isInvoiceItem:
          type: boolean
          example: true
          default: true
    UpdateInventoryV1Dto:
      type: object
      properties:
        connection:
          $ref: '#/components/schemas/UpdateInventoryConnection'
        data:
          $ref: '#/components/schemas/UpdateInventoryV1'
      required:
        - connection
        - data
    UpdateInventoryV1ResponseDto:
      type: object
      properties:
        pushCommunicationId:
          type: string
          readOnly: true
          example: 60473b57f0cdd1683ca71f60
        requestedOn:
          type: string
          readOnly: true
          example: "2021-03-09T08:15:22.035Z"
          format: date-time
        status:
          type: string
          readOnly: true
          example: pending
          enum:
            - success
            - failed
            - pending
        businessName:
          type: string
          readOnly: true
          example: Railz
        serviceName:
          type: string
          readOnly: true
          example: quickbooks
          enum:
            - freshbooks
            - quickbooks
            - quickbooksDesktop
            - xero
            - oracleNetsuite
            - sageBusinessCloud
            - sageIntacct
            - dynamicsBusinessCentral
            - wave
            - zohoBooks
        data:
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/UpdateInventoryV1'
      required:
        - pushCommunicationId
        - requestedOn
        - status
        - businessName
        - serviceName
        - data
    GetInventoryDataV2:
      type: object
      properties:
        id:
          type: string
          example: "1"
        name:
          type: string
          example: Product Services
        code:
          type: string
          example: "100"
        sourceModifiedDate:
          format: date-time
          type: string
          example: "2021-03-09T10:18:29.985Z"
        billItem:
          $ref: '#/components/schemas/BillOrInvoiceItem'
        invoiceItem:
          $ref: '#/components/schemas/BillOrInvoiceItem'
        isInvoiceItem:
          type: boolean
          example: true
        isBillItem:
          type: boolean
          example: true
        subsidiaryRefs:
          type: array
          items:
            $ref: '#/components/schemas/InventorySubsidiaryRef'
        quantityOnHand:
          type: array
          items:
            $ref: '#/components/schemas/QuantityOnHandData'
        type:
          type: string
          enum:
            - inventory
            - nonInventory
            - service
          example: inventory
        status:
          type: string
          enum:
            - unknown
            - active
            - archived
          example: active
      required:
        - id
        - status
    GetInventoryResponseV2Dto:
      type: object
      properties:
        pagination:
          $ref: '#/components/schemas/PaginationMetaData'
        meta:
          $ref: '#/components/schemas/ListReportMetaDataV2'
        data:
          type: array
          items:
            $ref: '#/components/schemas/GetInventoryDataV2'
      required:
        - pagination
        - meta
        - data
    QuantityOnHandV2Dto:
      type: object
      properties:
        quantity:
          type: number
          example: 2.5
          format: float
          maximum: 999999999999
        locationRef:
          $ref: '#/components/schemas/InventoryRefDto'
        accountRef:
          $ref: '#/components/schemas/AccountRefDto'
    InventoryBillInvoiceLineItemsV2:
      type: object
      properties:
        description:
          type: string
          maxLength: 4000
          example: Item description.
        unitPrice:
          type: number
          format: float
          maximum: 999999999999
          example: 2.5
        accountRef:
          $ref: '#/components/schemas/AccountRefDto'
        taxRateRef:
          $ref: '#/components/schemas/TaxRateRefDto'
    PushInventoryV2:
      type: object
      properties:
        code:
          type: string
          maxLength: 30
          example: GOL-W
        type:
          type: string
          enum:
            - inventory
            - nonInventory
            - service
          example: inventory
        name:
          type: string
          example: White golf balls.
          maxLength: 50
        quantityOnHand:
          type: array
          items:
            $ref: '#/components/schemas/QuantityOnHandV2Dto'
        billItem:
          $ref: '#/components/schemas/InventoryBillInvoiceLineItemsV2'
        invoiceItem:
          $ref: '#/components/schemas/InventoryBillInvoiceLineItemsV2'
        isBillItem:
          type: boolean
          example: true
        isInvoiceItem:
          type: boolean
          example: true
        subsidiaryRefs:
          type: array
          items:
            $ref: '#/components/schemas/SubsidiaryRefDto'
        passThrough:
          type: object
          example:
            CustomField:
              - DefinitionId: "1"
                StringValue: my custom value
                Name: Field One
      required:
        - name
    PushInventoryV2Dto:
      type: object
      properties:
        connectionUuid:
          type: string
          description: Unique connection identifier.
          example: CON-396d5daa-26b2-4979-89b6-cafb2c298155
        data:
          $ref: '#/components/schemas/PushInventoryV2'
      required:
        - connectionUuid
        - data
    PushInventoryV2ResponseDto:
      type: object
      properties:
        connectionUuid:
          type: string
          readOnly: true
          example: CON-396d5daa-26b2-4979-89b6-cafb2c298155
        businessName:
          type: string
          readOnly: true
          example: Railz
        serviceName:
          type: string
          readOnly: true
          example: xero
          enum:
            - freshbooks
            - quickbooks
            - quickbooksDesktop
            - xero
            - oracleNetsuite
            - sageBusinessCloud
            - sageIntacct
            - dynamicsBusinessCentral
            - wave
            - zohoBooks
        pushCommunicationId:
          type: string
          readOnly: true
          example: 60473b57f0cdd1683ca71f60
        requestedOn:
          type: string
          readOnly: true
          example: "2021-03-09T08:15:22.035Z"
          format: date-time
        status:
          type: string
          readOnly: true
          example: pending
          enum:
            - success
            - failed
            - pending
        data:
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/PushInventoryV2'
      required:
        - connectionUuid
        - businessName
        - serviceName
        - pushCommunicationId
        - requestedOn
        - status
        - data
    UpdateInventoryV2:
      type: object
      properties:
        code:
          type: string
          maxLength: 30
          example: GOL-W
        type:
          type: string
          enum:
            - inventory
            - nonInventory
            - service
          example: inventory
        quantityOnHand:
          type: array
          items:
            $ref: '#/components/schemas/QuantityOnHandV2Dto'
        name:
          type: string
          example: White golf balls.
          maxLength: 50
        invoiceItem:
          $ref: '#/components/schemas/InventoryBillInvoiceLineItemsV2'
        billItem:
          $ref: '#/components/schemas/InventoryBillInvoiceLineItemsV2'
        isBillItem:
          type: boolean
          example: true
        isInvoiceItem:
          type: boolean
          example: true
        subsidiaryRefs:
          type: array
          items:
            $ref: '#/components/schemas/SubsidiaryRefDto'
        passThrough:
          type: object
          example:
            CustomField:
              - DefinitionId: "1"
                StringValue: my custom value
                Name: Field One
      required:
        - name
    UpdateInventoryV2Dto:
      type: object
      properties:
        connectionUuid:
          type: string
          description: Unique connection identifier.
          example: CON-396d5daa-26b2-4979-89b6-cafb2c298155
        data:
          $ref: '#/components/schemas/UpdateInventoryV2'
      required:
        - connectionUuid
        - data
    UpdateInventoryV2ResponseDto:
      type: object
      properties:
        connectionUuid:
          type: string
          readOnly: true
          example: CON-396d5daa-26b2-4979-89b6-cafb2c298155
        businessName:
          type: string
          readOnly: true
          example: Railz
        serviceName:
          type: string
          readOnly: true
          example: xero
          enum:
            - freshbooks
            - quickbooks
            - quickbooksDesktop
            - xero
            - oracleNetsuite
            - sageBusinessCloud
            - sageIntacct
            - dynamicsBusinessCentral
            - wave
            - zohoBooks
        pushCommunicationId:
          type: string
          readOnly: true
          example: 60473b57f0cdd1683ca71f60
        requestedOn:
          type: string
          readOnly: true
          example: "2021-03-09T08:15:22.035Z"
          format: date-time
        status:
          type: string
          readOnly: true
          example: pending
          enum:
            - success
            - failed
            - pending
        data:
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/UpdateInventoryV2'
      required:
        - connectionUuid
        - businessName
        - serviceName
        - pushCommunicationId
        - requestedOn
        - status
        - data
    InvoiceLineItemsV1:
      type: object
      properties:
        description:
          type: string
          example: Services rendered.
        unitAmount:
          type: number
          example: 100.5
          format: float
        quantity:
          type: number
          example: 3
          format: integer
        discountAmount:
          type: number
          example: 0
          format: float
        taxAmount:
          type: number
          example: 20.5
          format: float
        taxRateRef:
          $ref: '#/components/schemas/TaxRateRef'
        inventoryRef:
          $ref: '#/components/schemas/InventoryRef'
        accountRef:
          $ref: '#/components/schemas/AccountRef'
        locationRef:
          $ref: '#/components/schemas/LocationRef'
        discountPercentage:
          type: string
          example: "10.5"
        totalAmount:
          type: number
          example: 10.5
          format: float
          deprecated: true
        subTotal:
          type: number
          example: 301.5
          format: float
          deprecated: true
        trackingCategoryRef:
          deprecated: true
          allOf:
            - $ref: '#/components/schemas/TrackingCategoryRef'
    GetInvoiceV1Data:
      type: object
      properties:
        id:
          type: string
          example: "1"
        invoiceNumber:
          type: string
          example: string
        customerRef:
          $ref: '#/components/schemas/CustomerRef'
        dueDate:
          format: date-time
          type: string
          example: "2021-03-09T15:59:47.118Z"
        currencyRate:
          type: number
          example: 1.13
          format: float
        totalAmount:
          type: number
          example: 283
          format: float
        status:
          type: string
          enum:
            - open
            - draft
            - partiallyPaid
            - paid
            - unknown
            - void
        totalDiscount:
          type: number
          example: 0
          format: float
        subTotal:
          type: number
          example: 250.5
          format: float
        taxAmount:
          type: number
          example: 32.5
          format: float
        amountDue:
          type: number
          example: 283
          format: float
        discountPercentage:
          type: number
          example: 0
          format: float
        sourceModifiedDate:
          format: date-time
          type: string
          example: "2021-03-09T15:59:47.118Z"
        memo:
          type: string
          example: Example invoice memo.
        payments:
          type: array
          items:
            $ref: '#/components/schemas/Payments'
        subsidiaryRefs:
          type: array
          items:
            $ref: '#/components/schemas/SubsidiaryRef'
        postedDate:
          format: date-time
          type: string
          example: "2021-03-09T15:59:47.118Z"
        currencyRef:
          $ref: '#/components/schemas/CurrencyRef'
        lines:
          type: array
          items:
            $ref: '#/components/schemas/InvoiceLineItemsV1'
      required:
        - id
        - status
        - postedDate
    GetInvoiceResponseDto:
      type: object
      properties:
        pagination:
          $ref: '#/components/schemas/PaginationMetaData'
        count:
          type: number
          readOnly: true
          example: 1
          format: integer
          deprecated: true
        meta:
          $ref: '#/components/schemas/TransactionalReportMetaData'
        data:
          type: array
          items:
            $ref: '#/components/schemas/GetInvoiceV1Data'
      required:
        - pagination
        - count
        - meta
        - data
    InvoiceLineItem:
      type: object
      properties:
        description:
          type: string
          maxLength: 4000
          example: Services rendered.
        quantity:
          type: number
          format: float
          example: 3
        inventoryRef:
          type: string
          example: "240"
        locationRef:
          type: string
          example: "3"
        accountRef:
          type: string
          example: "145"
        discountPercentage:
          type: number
          example: 30
        subTotal:
          type: number
          format: float
          example: 301.5
          deprecated: true
        totalAmount:
          type: number
          format: float
          example: 322
          deprecated: true
        unitAmount:
          type: number
          format: float
          example: 100.5
        taxAmount:
          type: number
          format: float
          example: 20.5
        taxRef:
          type: string
          example: "24"
      required:
        - quantity
    PushInvoice:
      type: object
      properties:
        passThrough:
          type: object
          example:
            CustomField:
              - DefinitionId: "1"
                StringValue: my custom value
                Name: Field One
        invoiceNumber:
          type: string
          maxLength: 21
          example: INV-10546
        postedDate:
          type: string
          format: date
          example: "2021-03-29"
        dueDate:
          type: string
          format: date
          example: "2021-03-29"
        currency:
          type: string
          example: CAD
        currencyRate:
          type: number
          format: float
          example: 1.13
        memo:
          type: string
          maxLength: 4000
          example: Example invoice memo.
        customerRef:
          type: string
          example: "132"
        lines:
          type: array
          items:
            $ref: '#/components/schemas/InvoiceLineItem'
      required:
        - customerRef
        - lines
    PushInvoiceDto:
      type: object
      properties:
        connection:
          $ref: '#/components/schemas/PushConnection'
        data:
          $ref: '#/components/schemas/PushInvoice'
      required:
        - connection
        - data
    PushInvoiceResponseDto:
      type: object
      properties:
        pushCommunicationId:
          type: string
          readOnly: true
          example: 60473b57f0cdd1683ca71f60
        requestedOn:
          type: string
          readOnly: true
          example: "2021-03-09T08:15:22.035Z"
          format: date-time
        status:
          type: string
          readOnly: true
          example: pending
          enum:
            - success
            - failed
            - pending
        businessName:
          type: string
          readOnly: true
          example: Railz
        serviceName:
          type: string
          readOnly: true
          example: quickbooks
          enum:
            - freshbooks
            - quickbooks
            - quickbooksDesktop
            - xero
            - oracleNetsuite
            - sageBusinessCloud
            - sageIntacct
            - dynamicsBusinessCentral
            - wave
            - zohoBooks
        data:
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/PushInvoice'
      required:
        - pushCommunicationId
        - requestedOn
        - status
        - businessName
        - serviceName
        - data
    GetInvoiceCreditNoteDataV1:
      type: object
      properties:
        customerRef:
          $ref: '#/components/schemas/CustomerRef'
        locationRef:
          $ref: '#/components/schemas/LocationRef'
        lines:
          type: array
          items:
            $ref: '#/components/schemas/InvoiceBillLineItemsV1'
    GetInvoiceCreditNoteResponseDto:
      type: object
      properties:
        pagination:
          $ref: '#/components/schemas/PaginationMetaData'
        count:
          type: number
          example: 1
          format: integer
          readOnly: true
        meta:
          readOnly: false
          allOf:
            - $ref: '#/components/schemas/BasicStartEndDateReportMetaData'
        data:
          type: array
          items:
            $ref: '#/components/schemas/GetInvoiceCreditNoteDataV1'
      required:
        - pagination
        - count
        - meta
        - data
    InvoicePaymentLink:
      type: object
      properties:
        type:
          type: string
          enum:
            - invoice
            - payment
            - paymentOnAccount
            - creditNote
            - refund
        id:
          type: string
          example: "50"
        amount:
          type: number
          example: 0
          format: float
      required:
        - type
    InvoicePaymentLinks:
      type: object
      properties:
        type:
          type: string
          enum:
            - invoice
            - payment
            - paymentOnAccount
            - creditNote
            - refund
        id:
          type: string
          example: "50"
      required:
        - type
    InvoicePaymentLineItem:
      type: object
      properties:
        allocatedOnDate:
          format: date-time
          type: string
          example: "2021-03-09T10:57:54.294Z"
        amount:
          type: number
          example: 200.5
          format: float
        link:
          deprecated: true
          allOf:
            - $ref: '#/components/schemas/InvoicePaymentLink'
        links:
          type: array
          items:
            $ref: '#/components/schemas/InvoicePaymentLinks'
    GetInvoicePaymentData:
      type: object
      properties:
        id:
          type: string
          example: "1"
        customerRef:
          $ref: '#/components/schemas/CustomerRef'
        accountRef:
          $ref: '#/components/schemas/AccountRef'
        currencyRate:
          type: number
          example: 1.13
          format: float
        memo:
          type: string
          example: Invoice payment memo.
        subsidiaryRefs:
          type: array
          items:
            $ref: '#/components/schemas/SubsidiaryRef'
        sourceModifiedDate:
          format: date-time
          type: string
          example: "2021-03-10T11:17:23.155Z"
        date:
          format: date-time
          type: string
          example: "2021-03-10T11:17:23.155Z"
        totalAmount:
          type: number
          example: 200.5
          format: float
        currencyRef:
          $ref: '#/components/schemas/CurrencyRef'
        lines:
          type: array
          items:
            $ref: '#/components/schemas/InvoicePaymentLineItem'
      required:
        - id
        - date
    GetInvoicePaymentResponseDto:
      type: object
      properties:
        pagination:
          $ref: '#/components/schemas/PaginationMetaData'
        count:
          type: number
          readOnly: true
          example: 1
          format: integer
          deprecated: true
        meta:
          $ref: '#/components/schemas/TransactionalReportMetaData'
        data:
          type: array
          items:
            $ref: '#/components/schemas/GetInvoicePaymentData'
      required:
        - pagination
        - count
        - meta
        - data
    InvoicePaymentLine:
      type: object
      properties:
        amount:
          type: number
          format: float
          example: "342.99"
        invoiceRef:
          type: string
          example: 3n2
          deprecated: true
        memo:
          type: string
          maxLength: 4000
          example: Sample memo for transaction
      required:
        - amount
    PushInvoicePayment:
      type: object
      properties:
        accountRef:
          type: string
          example: "132"
        customerRef:
          type: string
          example: "250"
        invoiceRef:
          type: string
          example: "250"
          deprecated: true
        totalAmount:
          type: number
          format: float
          example: 200.5
          deprecated: true
        currency:
          type: string
          example: CAD
        currencyRate:
          type: number
          format: float
          example: 1.13
        lines:
          type: array
          items:
            $ref: '#/components/schemas/InvoicePaymentLine'
        date:
          type: string
          format: date
          example: "2021-03-29"
        memo:
          type: string
          maxLength: 4000
          example: Invoice payment memo.
    PushInvoicePaymentDto:
      type: object
      properties:
        connection:
          $ref: '#/components/schemas/PushConnection'
        data:
          $ref: '#/components/schemas/PushInvoicePayment'
      required:
        - connection
        - data
    PushInvoicePaymentResponseDto:
      type: object
      properties:
        pushCommunicationId:
          type: string
          readOnly: true
          example: 60473b57f0cdd1683ca71f60
        requestedOn:
          type: string
          readOnly: true
          example: "2021-03-09T08:15:22.035Z"
          format: date-time
        status:
          type: string
          readOnly: true
          example: pending
          enum:
            - success
            - failed
            - pending
        businessName:
          type: string
          readOnly: true
          example: Railz
        serviceName:
          type: string
          readOnly: true
          example: quickbooks
          enum:
            - freshbooks
            - quickbooks
            - quickbooksDesktop
            - xero
            - oracleNetsuite
            - sageBusinessCloud
            - sageIntacct
            - dynamicsBusinessCentral
            - wave
            - zohoBooks
        data:
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/PushInvoicePayment'
      required:
        - pushCommunicationId
        - requestedOn
        - status
        - businessName
        - serviceName
        - data
    InvoiceCreditNoteLineV1:
      type: object
      properties:
        description:
          type: string
          maxLength: 4000
          example: Services rendered.
        discountPercentage:
          type: number
          format: float
          example: "10.0"
        memo:
          type: string
          maxLength: 4000
          example: Example memo.
          deprecated: true
        taxRef:
          type: string
          example: "45"
        accountRef:
          type: string
          example: "200"
        inventoryRef:
          type: string
          example: "32"
        subTotal:
          type: number
          format: float
          example: "202.0"
          deprecated: true
        totalAmount:
          type: number
          format: float
          example: "197.05"
          deprecated: true
        taxAmount:
          type: number
          format: float
          example: "15.25"
        quantity:
          type: number
          format: float
          example: "4"
        unitAmount:
          type: number
          format: float
          example: "50.4"
      required:
        - quantity
        - unitAmount
    PushInvoiceCreditNoteV1:
      type: object
      properties:
        passThrough:
          type: object
          example:
            CustomField:
              - DefinitionId: "1"
                StringValue: my custom value
                Name: Field One
        currencyRate:
          type: number
          example: "1.13"
        postedDate:
          type: string
          format: date
          example: "2021-03-29"
        allocatedOnDate:
          type: string
          format: date
          example: "2021-03-29"
        memo:
          type: string
          maxLength: 4000
          example: Example memo.
        customerRef:
          type: string
          example: "124"
        currency:
          type: string
          example: CAD
        lines:
          type: array
          items:
            $ref: '#/components/schemas/InvoiceCreditNoteLineV1'
      required:
        - customerRef
        - lines
    PushInvoiceCreditNoteV1Dto:
      type: object
      properties:
        connection:
          $ref: '#/components/schemas/PushConnection'
        data:
          $ref: '#/components/schemas/PushInvoiceCreditNoteV1'
      required:
        - connection
        - data
    PushInvoiceCreditNoteV1ResponseDto:
      type: object
      properties:
        pushCommunicationId:
          type: string
          readOnly: true
          example: 60473b57f0cdd1683ca71f60
        requestedOn:
          type: string
          readOnly: true
          example: "2021-03-09T08:15:22.035Z"
          format: date-time
        status:
          type: string
          readOnly: true
          example: pending
          enum:
            - success
            - failed
            - pending
        businessName:
          type: string
          readOnly: true
          example: Railz
        serviceName:
          type: string
          readOnly: true
          example: quickbooks
          enum:
            - freshbooks
            - quickbooks
            - quickbooksDesktop
            - xero
            - oracleNetsuite
            - sageBusinessCloud
            - sageIntacct
            - dynamicsBusinessCentral
            - wave
            - zohoBooks
        data:
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/PushInvoiceCreditNoteV1'
      required:
        - pushCommunicationId
        - requestedOn
        - status
        - businessName
        - serviceName
        - data
    InvoiceTrackingCategoryRef:
      type: object
      properties:
        id:
          type: string
          example: "4040"
          readOnly: false
        name:
          type: string
          readOnly: false
          example: Region
        type:
          type: string
          example: class
          enum:
            - class
            - department
            - location
            - unknown
    InvoiceLineItemsV2:
      type: object
      properties:
        description:
          type: string
          example: Services rendered.
        unitAmount:
          type: number
          example: 100.5
          format: float
        quantity:
          type: number
          example: 3
          format: integer
        discountAmount:
          type: number
          example: 0
          format: float
        taxAmount:
          type: number
          example: 20.5
          format: float
        taxRateRef:
          $ref: '#/components/schemas/TaxRateRef'
        inventoryRef:
          $ref: '#/components/schemas/InventoryRef'
        discountPercentage:
          type: number
          example: 10.5
          format: float
        id:
          type: string
        accountRef:
          $ref: '#/components/schemas/AccountRef'
        amount:
          type: number
          example: 10.5
          format: float
        trackingCategoryRefs:
          type: array
          items:
            $ref: '#/components/schemas/InvoiceTrackingCategoryRef'
    GetInvoiceV2Data:
      type: object
      properties:
        id:
          type: string
          example: "1"
        invoiceNumber:
          type: string
          example: string
        customerRef:
          $ref: '#/components/schemas/CustomerRef'
        dueDate:
          format: date-time
          type: string
          example: "2021-03-09T15:59:47.118Z"
        currencyRate:
          type: number
          example: 1.13
          format: float
        totalAmount:
          type: number
          example: 283
          format: float
        status:
          type: string
          enum:
            - open
            - draft
            - partiallyPaid
            - paid
            - unknown
            - void
        totalDiscount:
          type: number
          example: 0
          format: float
        subTotal:
          type: number
          example: 250.5
          format: float
        taxAmount:
          type: number
          example: 32.5
          format: float
        amountDue:
          type: number
          example: 283
          format: float
        discountPercentage:
          type: number
          example: 0
          format: float
        sourceModifiedDate:
          format: date-time
          type: string
          example: "2021-03-09T15:59:47.118Z"
        memo:
          type: string
          example: Example invoice memo.
        payments:
          type: array
          items:
            $ref: '#/components/schemas/Payments'
        subsidiaryRefs:
          type: array
          items:
            $ref: '#/components/schemas/SubsidiaryRef'
        postedDate:
          format: date-time
          type: string
          example: "2021-03-09T15:59:47.118Z"
        currency:
          type: string
          example: USD
        lines:
          type: array
          items:
            $ref: '#/components/schemas/InvoiceLineItemsV2'
        passThrough:
          type: object
          example:
            CustomField:
              - DefinitionId: "1"
                StringValue: my custom value
                Name: Field One
      required:
        - id
        - status
    GetInvoiceResponseV2Dto:
      type: object
      properties:
        pagination:
          $ref: '#/components/schemas/PaginationMetaData'
        meta:
          $ref: '#/components/schemas/TransactionalReportMetaDataV2'
        data:
          type: array
          items:
            $ref: '#/components/schemas/GetInvoiceV2Data'
      required:
        - pagination
        - meta
        - data
    PushInvoiceTrackingCategoryRef:
      type: object
      properties:
        id:
          type: string
          example: "4040"
        type:
          type: string
          example: class
          enum:
            - class
            - department
            - location
            - unknown
      required:
        - id
    InvoiceLineItemV2:
      type: object
      properties:
        description:
          type: string
          maxLength: 4000
          example: Services rendered.
        quantity:
          type: number
          format: float
          example: 3
        id:
          type: string
          example: "240"
        discountPercentage:
          type: number
          example: 30
        discountAmount:
          type: number
          example: 20.5
        taxRateRef:
          $ref: '#/components/schemas/TaxRateRefDto'
        accountRef:
          $ref: '#/components/schemas/AccountRefDto'
        inventoryRef:
          $ref: '#/components/schemas/InventoryRefDto'
        trackingCategoryRefs:
          type: array
          items:
            $ref: '#/components/schemas/PushInvoiceTrackingCategoryRef'
        unitAmount:
          type: number
          format: float
          example: 100.5
    PushInvoiceV2:
      type: object
      properties:
        passThrough:
          type: object
          example:
            CustomField:
              - DefinitionId: "1"
                StringValue: my custom value
                Name: Field One
        invoiceNumber:
          type: string
          maxLength: 21
          example: INV-10546
        postedDate:
          type: string
          format: date
          example: "2021-03-29"
        dueDate:
          type: string
          format: date
          example: "2021-03-29"
        currency:
          type: string
          example: CAD
        currencyRate:
          type: number
          format: float
          example: 1.13
        memo:
          type: string
          maxLength: 4000
          example: Example invoice memo.
        customerRef:
          $ref: '#/components/schemas/CustomerRefDto'
        lines:
          type: array
          items:
            $ref: '#/components/schemas/InvoiceLineItemV2'
        subsidiaryRefs:
          type: array
          items:
            $ref: '#/components/schemas/SubsidiaryRefDto'
      required:
        - customerRef
        - lines
    PushInvoiceV2Dto:
      type: object
      properties:
        connectionUuid:
          type: string
          description: Unique connection identifier.
          example: CON-396d5daa-26b2-4979-89b6-cafb2c298155
        data:
          $ref: '#/components/schemas/PushInvoiceV2'
      required:
        - connectionUuid
        - data
    PushInvoiceResponseV2Dto:
      type: object
      properties:
        connectionUuid:
          type: string
          readOnly: true
          example: CON-396d5daa-26b2-4979-89b6-cafb2c298155
        businessName:
          type: string
          readOnly: true
          example: Railz
        serviceName:
          type: string
          readOnly: true
          example: xero
          enum:
            - freshbooks
            - quickbooks
            - quickbooksDesktop
            - xero
            - oracleNetsuite
            - sageBusinessCloud
            - sageIntacct
            - dynamicsBusinessCentral
            - wave
            - zohoBooks
        pushCommunicationId:
          type: string
          readOnly: true
          example: 60473b57f0cdd1683ca71f60
        requestedOn:
          type: string
          readOnly: true
          example: "2021-03-09T08:15:22.035Z"
          format: date-time
        status:
          type: string
          readOnly: true
          example: pending
          enum:
            - success
            - failed
            - pending
        data:
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/PushInvoiceV2'
      required:
        - connectionUuid
        - businessName
        - serviceName
        - pushCommunicationId
        - requestedOn
        - status
        - data
    UpdateInvoiceV2:
      type: object
      properties:
        passThrough:
          type: object
          example:
            CustomField:
              - DefinitionId: "1"
                StringValue: my custom value
                Name: Field One
        invoiceNumber:
          type: string
        customerRef:
          $ref: '#/components/schemas/CustomerRefDto'
        postedDate:
          type: string
          format: date
          example: "2021-03-29"
        dueDate:
          type: string
          format: date
          example: "2021-03-29"
        currency:
          type: string
          example: USD
        currencyRate:
          type: number
          example: 1.13
          format: float
        lines:
          type: array
          items:
            $ref: '#/components/schemas/InvoiceLineItemV2'
        memo:
          type: string
          maxLength: 4000
        subsidiaryRefs:
          type: array
          items:
            $ref: '#/components/schemas/SubsidiaryRefDto'
      required:
        - customerRef
        - lines
    UpdateInvoiceV2Dto:
      type: object
      properties:
        connectionUuid:
          type: string
          description: Unique connection identifier.
          example: CON-396d5daa-26b2-4979-89b6-cafb2c298155
        data:
          $ref: '#/components/schemas/UpdateInvoiceV2'
      required:
        - connectionUuid
        - data
    UpdateInvoiceResponseV2Dto:
      type: object
      properties:
        connectionUuid:
          type: string
          readOnly: true
          example: CON-396d5daa-26b2-4979-89b6-cafb2c298155
        businessName:
          type: string
          readOnly: true
          example: Railz
        serviceName:
          type: string
          readOnly: true
          example: xero
          enum:
            - freshbooks
            - quickbooks
            - quickbooksDesktop
            - xero
            - oracleNetsuite
            - sageBusinessCloud
            - sageIntacct
            - dynamicsBusinessCentral
            - wave
            - zohoBooks
        pushCommunicationId:
          type: string
          readOnly: true
          example: 60473b57f0cdd1683ca71f60
        requestedOn:
          type: string
          readOnly: true
          example: "2021-03-09T08:15:22.035Z"
          format: date-time
        status:
          type: string
          readOnly: true
          example: pending
          enum:
            - success
            - failed
            - pending
        data:
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/UpdateInvoiceV2'
      required:
        - connectionUuid
        - businessName
        - serviceName
        - pushCommunicationId
        - requestedOn
        - status
        - data
    GetInvoiceCreditNoteDataV2:
      type: object
      properties:
        passThrough:
          type: object
          example:
            CustomField:
              - DefinitionId: "1"
                StringValue: my custom value
                Name: Field One
        id:
          type: string
          example: "1"
        postedDate:
          format: date-time
          type: string
          example: "2021-03-09T10:18:29.985Z"
        allocatedOnDate:
          format: date-time
          type: string
          example: "2021-03-09T10:18:29.985Z"
        currency:
          type: string
          example: USD
        currencyRate:
          type: number
          example: 1.13
          format: float
        totalDiscount:
          type: number
          example: 322
          format: float
        discountPercentage:
          type: number
          example: 322
          format: float
        subTotal:
          type: number
          example: 301.5
          format: float
        taxAmount:
          type: number
          example: 20.5
          format: float
        totalAmount:
          type: number
          example: 322
          format: float
        remainingCredit:
          type: number
          example: 322
          format: float
        status:
          type: string
          enum:
            - open
            - paid
            - partiallyPaid
            - void
            - unknown
            - draft
        memo:
          type: string
          example: Example bill memo.
        payments:
          type: array
          items:
            $ref: '#/components/schemas/Payments'
        sourceModifiedDate:
          format: date-time
          type: string
          example: "2021-03-09T10:18:29.985Z"
        locationRef:
          $ref: '#/components/schemas/LocationRef'
        customerRef:
          $ref: '#/components/schemas/CustomerRef'
        subsidiaryRefs:
          type: array
          items:
            $ref: '#/components/schemas/SubsidiaryRef'
        lines:
          type: array
          items:
            $ref: '#/components/schemas/InvoiceBillLineItemsV2'
        invoiceCreditNoteNumber:
          type: string
          description: The buyer facing document number of the invoice credit note.
      required:
        - id
        - postedDate
        - totalAmount
        - status
        - customerRef
        - lines
    GetInvoiceCreditNoteResponseV2Dto:
      type: object
      properties:
        pagination:
          $ref: '#/components/schemas/PaginationMetaData'
        meta:
          readOnly: false
          allOf:
            - $ref: '#/components/schemas/BasicStartEndDateReportMetaDataV2'
        data:
          type: array
          items:
            $ref: '#/components/schemas/GetInvoiceCreditNoteDataV2'
      required:
        - pagination
        - meta
        - data
    InvoiceCreditNoteLineV2:
      type: object
      properties:
        description:
          type: string
          maxLength: 4000
          example: Services rendered.
        discountPercentage:
          type: number
          format: float
          example: "10.0"
        taxRateRef:
          $ref: '#/components/schemas/TaxRateRefDto'
        accountRef:
          $ref: '#/components/schemas/AccountRefDto'
        inventoryRef:
          $ref: '#/components/schemas/InventoryRefDto'
        trackingCategoryRefs:
          type: array
          items:
            $ref: '#/components/schemas/PushInvoiceTrackingCategoryRef'
        quantity:
          type: number
          format: float
          example: "4"
        unitAmount:
          type: number
          format: float
          example: "50.4"
        taxAmount:
          type: number
          format: float
          example: "50.4"
    PushInvoiceCreditNoteV2:
      type: object
      properties:
        passThrough:
          type: object
          example:
            CustomField:
              - DefinitionId: "1"
                StringValue: my custom value
                Name: Field One
        currencyRate:
          type: number
          example: "1.13"
        postedDate:
          type: string
          format: date
          example: "2021-03-29"
        allocatedOnDate:
          type: string
          format: date
          example: "2021-03-29"
        memo:
          type: string
          maxLength: 4000
          example: Example memo.
        customerRef:
          $ref: '#/components/schemas/CustomerRefDto'
        currency:
          type: string
          example: CAD
        lines:
          type: array
          items:
            $ref: '#/components/schemas/InvoiceCreditNoteLineV2'
        subsidiaryRefs:
          type: array
          items:
            $ref: '#/components/schemas/SubsidiaryRefDto'
        invoiceCreditNoteNumber:
          type: string
          description: The buyer facing document number of the invoice credit note.
      required:
        - customerRef
        - lines
    PushInvoiceCreditNoteV2Dto:
      type: object
      properties:
        connectionUuid:
          type: string
          description: Unique connection identifier.
          example: CON-396d5daa-26b2-4979-89b6-cafb2c298155
        data:
          $ref: '#/components/schemas/PushInvoiceCreditNoteV2'
      required:
        - connectionUuid
        - data
    PushInvoiceCreditNoteV2ResponseDto:
      type: object
      properties:
        connectionUuid:
          type: string
          readOnly: true
          example: CON-396d5daa-26b2-4979-89b6-cafb2c298155
        businessName:
          type: string
          readOnly: true
          example: Railz
        serviceName:
          type: string
          readOnly: true
          example: xero
          enum:
            - freshbooks
            - quickbooks
            - quickbooksDesktop
            - xero
            - oracleNetsuite
            - sageBusinessCloud
            - sageIntacct
            - dynamicsBusinessCentral
            - wave
            - zohoBooks
        pushCommunicationId:
          type: string
          readOnly: true
          example: 60473b57f0cdd1683ca71f60
        requestedOn:
          type: string
          readOnly: true
          example: "2021-03-09T08:15:22.035Z"
          format: date-time
        status:
          type: string
          readOnly: true
          example: pending
          enum:
            - success
            - failed
            - pending
        data:
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/PushInvoiceCreditNoteV2'
      required:
        - connectionUuid
        - businessName
        - serviceName
        - pushCommunicationId
        - requestedOn
        - status
        - data
    InvoicePaymentLinksV2:
      type: object
      properties:
        type:
          type: string
          enum:
            - invoice
            - payment
            - paymentOnAccount
            - creditNote
            - refund
        id:
          type: string
          example: "50"
      required:
        - type
        - id
    InvoicePaymentLineItemV2:
      type: object
      properties:
        allocatedOnDate:
          format: date-time
          type: string
          example: "2021-03-09T10:57:54.294Z"
        amount:
          type: number
          example: 200.5
          format: float
        links:
          type: array
          items:
            $ref: '#/components/schemas/InvoicePaymentLinksV2'
    GetInvoicePaymentDataV2:
      type: object
      properties:
        id:
          type: string
          example: "1"
        customerRef:
          $ref: '#/components/schemas/CustomerRef'
        accountRef:
          $ref: '#/components/schemas/AccountRef'
        currencyRate:
          type: number
          example: 1.13
          format: float
        memo:
          type: string
          example: Invoice payment memo.
        subsidiaryRefs:
          type: array
          items:
            $ref: '#/components/schemas/SubsidiaryRef'
        sourceModifiedDate:
          format: date-time
          type: string
          example: "2021-03-10T11:17:23.155Z"
        date:
          format: date-time
          type: string
          example: "2021-03-10T11:17:23.155Z"
        totalAmount:
          type: number
          example: 200.5
          format: float
        currency:
          type: string
          example: USD
        paymentMethod:
          type: string
          enum:
            - unknown
            - cash
            - check
            - creditCard
            - debitCard
            - bankTransfer
            - giftCard
            - other
          example: creditCard
        paymentMethodRef:
          $ref: '#/components/schemas/PaymentMethodRefResponse'
        lines:
          type: array
          items:
            $ref: '#/components/schemas/InvoicePaymentLineItemV2'
      required:
        - id
        - date
        - totalAmount
    GetInvoicePaymentResponseV2Dto:
      type: object
      properties:
        pagination:
          $ref: '#/components/schemas/PaginationMetaData'
        meta:
          $ref: '#/components/schemas/TransactionalReportMetaDataV2'
        data:
          type: array
          items:
            $ref: '#/components/schemas/GetInvoicePaymentDataV2'
      required:
        - pagination
        - meta
        - data
    InvoicePaymentLinkDto:
      type: object
      properties:
        type:
          type: string
          enum:
            - invoice
            - payment
            - paymentOnAccount
            - creditNote
            - refund
        id:
          type: string
          example: "133"
      required:
        - id
    PushInvoicePaymentLineV2:
      type: object
      properties:
        amount:
          type: number
          format: float
          example: "342.99"
        links:
          type: array
          items:
            $ref: '#/components/schemas/InvoicePaymentLinkDto'
        allocatedOnDate:
          type: string
          format: date
          example: "2021-03-29"
    PushInvoicePaymentV2:
      type: object
      properties:
        passThrough:
          type: object
          example:
            CustomField:
              - DefinitionId: "1"
                StringValue: my custom value
                Name: Field One
        accountRef:
          $ref: '#/components/schemas/AccountRefDto'
        customerRef:
          $ref: '#/components/schemas/CustomerRefDto'
        currency:
          type: string
          example: CAD
        totalAmount:
          type: number
          format: float
          example: 200.5
        currencyRate:
          type: number
          format: float
          example: 1.13
        paymentMethod:
          type: string
          enum:
            - unknown
            - cash
            - check
            - creditCard
            - debitCard
            - bankTransfer
            - giftCard
            - other
          example: creditCard
        paymentMethodRef:
          $ref: '#/components/schemas/PaymentMethodRefDto'
        lines:
          type: array
          items:
            $ref: '#/components/schemas/PushInvoicePaymentLineV2'
        date:
          type: string
          format: date
          example: "2021-03-29"
        subsidiaryRefs:
          type: array
          items:
            $ref: '#/components/schemas/SubsidiaryRefDto'
        memo:
          type: string
          maxLength: 4000
          example: Invoice payment memo.
    PushInvoicePaymentV2Dto:
      type: object
      properties:
        connectionUuid:
          type: string
          description: Unique connection identifier.
          example: CON-396d5daa-26b2-4979-89b6-cafb2c298155
        data:
          $ref: '#/components/schemas/PushInvoicePaymentV2'
      required:
        - connectionUuid
        - data
    PushInvoicePaymentResponseV2Dto:
      type: object
      properties:
        connectionUuid:
          type: string
          readOnly: true
          example: CON-396d5daa-26b2-4979-89b6-cafb2c298155
        businessName:
          type: string
          readOnly: true
          example: Railz
        serviceName:
          type: string
          readOnly: true
          example: xero
          enum:
            - freshbooks
            - quickbooks
            - quickbooksDesktop
            - xero
            - oracleNetsuite
            - sageBusinessCloud
            - sageIntacct
            - dynamicsBusinessCentral
            - wave
            - zohoBooks
        pushCommunicationId:
          type: string
          readOnly: true
          example: 60473b57f0cdd1683ca71f60
        requestedOn:
          type: string
          readOnly: true
          example: "2021-03-09T08:15:22.035Z"
          format: date-time
        status:
          type: string
          readOnly: true
          example: pending
          enum:
            - success
            - failed
            - pending
        data:
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/PushInvoicePaymentV2'
      required:
        - connectionUuid
        - businessName
        - serviceName
        - pushCommunicationId
        - requestedOn
        - status
        - data
    UpdateInvoicePaymentLineV2:
      type: object
      properties:
        amount:
          type: number
          format: float
          example: "342.99"
        links:
          type: array
          items:
            $ref: '#/components/schemas/InvoicePaymentLinkDto'
        allocatedOnDate:
          type: string
          format: date
          example: "2021-03-29"
    UpdateInvoicePayment:
      type: object
      properties:
        passThrough:
          type: object
          example:
            CustomField:
              - DefinitionId: "1"
                StringValue: my custom value
                Name: Field One
        accountRef:
          $ref: '#/components/schemas/AccountRefDto'
        customerRef:
          $ref: '#/components/schemas/CustomerRefDto'
        totalAmount:
          type: number
          format: float
          example: 200.5
        currency:
          type: string
          example: CAD
        currencyRate:
          type: number
          format: float
          example: 1.13
        date:
          type: string
          format: date
          example: "2021-03-29"
        paymentMethod:
          type: string
          enum:
            - check
            - creditCard
            - cash
            - other
        memo:
          type: string
          maxLength: 4000
          example: Invoice payment memo.
        lines:
          type: array
          items:
            $ref: '#/components/schemas/UpdateInvoicePaymentLineV2'
        subsidiaryRefs:
          type: array
          items:
            $ref: '#/components/schemas/SubsidiaryRefDto'
    UpdateInvoicePaymentDto:
      type: object
      properties:
        connectionUuid:
          type: string
          description: Unique connection identifier.
          example: CON-396d5daa-26b2-4979-89b6-cafb2c298155
        data:
          $ref: '#/components/schemas/UpdateInvoicePayment'
      required:
        - connectionUuid
        - data
    UpdateInvoicePaymentResponseDto:
      type: object
      properties:
        connectionUuid:
          type: string
          readOnly: true
          example: CON-396d5daa-26b2-4979-89b6-cafb2c298155
        businessName:
          type: string
          readOnly: true
          example: Railz
        serviceName:
          type: string
          readOnly: true
          example: xero
          enum:
            - freshbooks
            - quickbooks
            - quickbooksDesktop
            - xero
            - oracleNetsuite
            - sageBusinessCloud
            - sageIntacct
            - dynamicsBusinessCentral
            - wave
            - zohoBooks
        pushCommunicationId:
          type: string
          readOnly: true
          example: 60473b57f0cdd1683ca71f60
        requestedOn:
          type: string
          readOnly: true
          example: "2021-03-09T08:15:22.035Z"
          format: date-time
        status:
          type: string
          readOnly: true
          example: pending
          enum:
            - success
            - failed
            - pending
        data:
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/UpdateInvoicePayment'
      required:
        - connectionUuid
        - businessName
        - serviceName
        - pushCommunicationId
        - requestedOn
        - status
        - data
    JournalEntryEntityRef:
      type: object
      properties:
        id:
          type: string
          example: "1"
        name:
          type: string
          example: ABC Inc.
        type:
          type: string
          example: vendor
          enum:
            - customer
            - employee
            - vendor
      required:
        - id
    GetJournalEntryLineItemsV1:
      type: object
      properties:
        description:
          type: string
          example: Services rendered.
        credit:
          type: number
          example: 100.5
          format: float
        debit:
          type: number
          example: 3
          format: float
        taxAmount:
          type: number
          example: 20.5
          format: float
        accountRef:
          $ref: '#/components/schemas/AccountRef'
        entityRef:
          $ref: '#/components/schemas/JournalEntryEntityRef'
        taxRateRef:
          $ref: '#/components/schemas/TaxRateRef'
        id:
          type: string
          example: "1"
        trackingCategoryRef:
          deprecated: true
          allOf:
            - $ref: '#/components/schemas/TrackingCategoryRef'
    GetJournalEntryDataV1:
      type: object
      properties:
        id:
          type: string
          example: "1"
        postedDate:
          format: date-time
          type: string
          example: "2021-03-09T10:18:29.985Z"
        createdDate:
          format: date-time
          type: string
          example: "2021-03-09T10:18:29.985Z"
        currencyRate:
          type: number
          example: 1.13
          format: float
        subsidiaryRefs:
          type: array
          items:
            $ref: '#/components/schemas/SubsidiaryRef'
        memo:
          type: string
          example: Example bill memo.
        sourceModifiedDate:
          format: date-time
          type: string
          example: "2021-03-09T10:18:29.985Z"
        totalCredit:
          type: number
          example: 129.99
          format: float
        totalDebit:
          type: number
          example: 129.99
          format: float
        currencyRef:
          $ref: '#/components/schemas/CurrencyRef'
        lines:
          type: array
          items:
            $ref: '#/components/schemas/GetJournalEntryLineItemsV1'
        bankAccountNumber:
          type: string
          example: "11200"
      required:
        - id
    GetJournalEntryV1ResponseDto:
      type: object
      properties:
        pagination:
          $ref: '#/components/schemas/PaginationMetaData'
        count:
          type: number
          example: 1
          format: integer
          readOnly: true
        meta:
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/BasicStartEndDateReportMetaData'
        data:
          type: array
          items:
            $ref: '#/components/schemas/GetJournalEntryDataV1'
      required:
        - pagination
        - count
        - meta
        - data
    JournalEntryLineItems:
      type: object
      properties:
        description:
          type: string
          maxLength: 4000
          example: Journal Entry description.
        accountRef:
          type: string
          example: "200"
        customerRef:
          type: string
          deprecated: true
          example: "250"
        vendorRef:
          type: string
          deprecated: true
          example: "345"
        trackingCategoryRef:
          type: string
          deprecated: true
          example: "4040"
        type:
          type: string
          deprecated: true
          enum:
            - credit
            - debit
          example: debit
        amount:
          type: number
          deprecated: true
          format: float
          example: 150.5
      required:
        - accountRef
        - type
        - amount
    PushJournalEntriesV1:
      type: object
      properties:
        currencyRate:
          type: number
          format: float
          example: 1.13
        postedDate:
          type: string
          format: date
          example: "2021-03-29"
        memo:
          type: string
          maxLength: 4000
          example: Services rendered.
        currency:
          type: string
          example: CAD
        lines:
          type: array
          items:
            $ref: '#/components/schemas/JournalEntryLineItems'
        subsidiaryRefs:
          example:
            - "1"
            - "3"
          type: array
          items:
            type: string
        bankAccountNumber:
          type: string
          example: "11200"
      required:
        - lines
    PushJournalEntriesV1Dto:
      type: object
      properties:
        connection:
          $ref: '#/components/schemas/PushConnection'
        data:
          $ref: '#/components/schemas/PushJournalEntriesV1'
      required:
        - connection
        - data
    PushJournalEntriesV1ResponseDto:
      type: object
      properties:
        pushCommunicationId:
          type: string
          readOnly: true
          example: 60473b57f0cdd1683ca71f60
        requestedOn:
          type: string
          readOnly: true
          example: "2021-03-09T08:15:22.035Z"
          format: date-time
        status:
          type: string
          readOnly: true
          example: pending
          enum:
            - success
            - failed
            - pending
        businessName:
          type: string
          readOnly: true
          example: Railz
        serviceName:
          type: string
          readOnly: true
          example: quickbooks
          enum:
            - freshbooks
            - quickbooks
            - quickbooksDesktop
            - xero
            - oracleNetsuite
            - sageBusinessCloud
            - sageIntacct
            - dynamicsBusinessCentral
            - wave
            - zohoBooks
        data:
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/PushJournalEntriesV1'
      required:
        - pushCommunicationId
        - requestedOn
        - status
        - businessName
        - serviceName
        - data
    PushUpdateJournalEntriesConnection:
      type: object
      properties:
        businessName:
          type: string
          example: Railz
          description: Unique business name identifier.
        serviceName:
          type: string
          example: quickbooks
          description: Name of accounting platform service.
          enum:
            - quickbooks
            - oracleNetsuite
            - xero
            - sageIntacct
      required:
        - businessName
        - serviceName
    PushUpdateJournalEntryLineItems:
      type: object
      properties:
        description:
          type: string
          maxLength: 4000
          example: Journal Entry description.
        accountRef:
          type: string
          example: "200"
        customerRef:
          type: string
          deprecated: true
          example: "250"
        vendorRef:
          type: string
          deprecated: true
          example: "345"
        trackingCategoryRef:
          type: string
          deprecated: true
          example: "4040"
        type:
          type: string
          deprecated: true
          enum:
            - credit
            - debit
          example: debit
        amount:
          type: number
          deprecated: true
          format: float
          example: 150.5
        id:
          type: string
          example: "200"
      required:
        - accountRef
        - type
    PushUpdateJournalEntries:
      type: object
      properties:
        currencyRate:
          type: number
          format: float
          example: 1.13
        postedDate:
          type: string
          format: date
          example: "2021-03-09"
        memo:
          type: string
          maxLength: 4000
          example: Services rendered.
        currency:
          type: string
          example: CAD
        lines:
          type: array
          items:
            $ref: '#/components/schemas/PushUpdateJournalEntryLineItems'
        subsidiaryRefs:
          example:
            - "1"
            - "3"
          type: array
          items:
            type: string
    PushUpdateJournalEntriesV1Dto:
      type: object
      properties:
        connection:
          $ref: '#/components/schemas/PushUpdateJournalEntriesConnection'
        data:
          $ref: '#/components/schemas/PushUpdateJournalEntries'
      required:
        - connection
        - data
    PushUpdateJournalEntriesV1ResponseDto:
      type: object
      properties:
        pushCommunicationId:
          type: string
          readOnly: true
          example: 60473b57f0cdd1683ca71f60
        requestedOn:
          type: string
          readOnly: true
          example: "2021-03-09T08:15:22.035Z"
          format: date-time
        status:
          type: string
          readOnly: true
          example: pending
          enum:
            - success
            - failed
            - pending
        businessName:
          type: string
          readOnly: true
          example: Railz
        serviceName:
          type: string
          readOnly: true
          example: quickbooks
          enum:
            - freshbooks
            - quickbooks
            - quickbooksDesktop
            - xero
            - oracleNetsuite
            - sageBusinessCloud
            - sageIntacct
            - dynamicsBusinessCentral
            - wave
            - zohoBooks
        data:
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/PushUpdateJournalEntries'
      required:
        - pushCommunicationId
        - requestedOn
        - status
        - businessName
        - serviceName
        - data
    JournalRefDto:
      type: object
      properties:
        id:
          type: string
          example: "4040"
        name:
          type: string
          example: ABC Inc
      required:
        - id
    GetJournalEntryLineItemsV2:
      type: object
      properties:
        description:
          type: string
          example: Services rendered.
        credit:
          type: number
          example: 100.5
          format: float
        debit:
          type: number
          example: 3
          format: float
        taxAmount:
          type: number
          example: 20.5
          format: float
        accountRef:
          $ref: '#/components/schemas/AccountRef'
        entityRef:
          $ref: '#/components/schemas/JournalEntryEntityRef'
        taxRateRef:
          $ref: '#/components/schemas/TaxRateRef'
        id:
          type: string
          example: "1"
        trackingCategoryRefs:
          type: array
          items:
            $ref: '#/components/schemas/TrackingCategoryRefV2'
    GetJournalEntryDataV2:
      type: object
      properties:
        id:
          type: string
          example: "1"
        postedDate:
          format: date-time
          type: string
          example: "2021-03-09T10:18:29.985Z"
        createdDate:
          format: date-time
          type: string
          example: "2021-03-09T10:18:29.985Z"
        currencyRate:
          type: number
          example: 1.13
          format: float
        subsidiaryRefs:
          type: array
          items:
            $ref: '#/components/schemas/SubsidiaryRef'
        memo:
          type: string
          example: Example bill memo.
        sourceModifiedDate:
          format: date-time
          type: string
          example: "2021-03-09T10:18:29.985Z"
        totalCredit:
          type: number
          example: 129.99
          format: float
        totalDebit:
          type: number
          example: 129.99
          format: float
        journalNumber:
          type: string
          example: "123"
        currency:
          type: string
          example: USD
        journalRef:
          $ref: '#/components/schemas/JournalRefDto'
        lines:
          type: array
          items:
            $ref: '#/components/schemas/GetJournalEntryLineItemsV2'
      required:
        - id
        - lines
    GetJournalEntryV2ResponseDto:
      type: object
      properties:
        pagination:
          $ref: '#/components/schemas/PaginationMetaData'
        meta:
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/BasicStartEndDateReportMetaDataV2'
        data:
          type: array
          items:
            $ref: '#/components/schemas/GetJournalEntryDataV2'
      required:
        - pagination
        - meta
        - data
    BaseJournalRefDto:
      type: object
      properties:
        id:
          type: string
          example: "4040"
      required:
        - id
    JournalEntryLineItemsV2:
      type: object
      properties:
        description:
          type: string
          maxLength: 4000
          example: Journal Entry description.
        accountRef:
          $ref: '#/components/schemas/AccountRefDto'
        trackingCategoryRefs:
          type: array
          items:
            $ref: '#/components/schemas/BillTrackingCategoryRefDto'
        entityRef:
          $ref: '#/components/schemas/EntityRefDto'
        taxRateRef:
          $ref: '#/components/schemas/TaxRateRefDto'
        debit:
          type: number
          format: float
          example: 100.3
        credit:
          type: number
          format: float
          example: 100.3
        id:
          type: string
          example: "1"
      required:
        - accountRef
    PushJournalEntriesV2:
      type: object
      properties:
        currencyRate:
          type: number
          format: float
          example: 1.13
        postedDate:
          type: string
          format: date
          example: "2021-03-29"
        memo:
          type: string
          maxLength: 4000
          example: Services rendered.
        currency:
          type: string
          example: CAD
        subsidiaryRefs:
          type: array
          items:
            $ref: '#/components/schemas/SubsidiaryRefDto'
        journalRef:
          $ref: '#/components/schemas/BaseJournalRefDto'
        createdDate:
          format: date-time
          type: string
          example: "2021-03-09T10:18:29.985Z"
        journalNumber:
          type: string
          example: "1857648"
        lines:
          type: array
          items:
            $ref: '#/components/schemas/JournalEntryLineItemsV2'
        passThrough:
          type: object
          example:
            CustomField:
              - DefinitionId: "1"
                StringValue: my custom value
                Name: Field One
      required:
        - lines
    PushJournalEntriesV2Dto:
      type: object
      properties:
        connectionUuid:
          type: string
          description: Unique connection identifier.
          example: CON-396d5daa-26b2-4979-89b6-cafb2c298155
        data:
          $ref: '#/components/schemas/PushJournalEntriesV2'
      required:
        - connectionUuid
        - data
    PushJournalEntriesV2ResponseDto:
      type: object
      properties:
        connectionUuid:
          type: string
          readOnly: true
          example: CON-396d5daa-26b2-4979-89b6-cafb2c298155
        businessName:
          type: string
          readOnly: true
          example: Railz
        serviceName:
          type: string
          readOnly: true
          example: xero
          enum:
            - freshbooks
            - quickbooks
            - quickbooksDesktop
            - xero
            - oracleNetsuite
            - sageBusinessCloud
            - sageIntacct
            - dynamicsBusinessCentral
            - wave
            - zohoBooks
        pushCommunicationId:
          type: string
          readOnly: true
          example: 60473b57f0cdd1683ca71f60
        requestedOn:
          type: string
          readOnly: true
          example: "2021-03-09T08:15:22.035Z"
          format: date-time
        status:
          type: string
          readOnly: true
          example: pending
          enum:
            - success
            - failed
            - pending
        data:
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/PushJournalEntriesV2'
      required:
        - connectionUuid
        - businessName
        - serviceName
        - pushCommunicationId
        - requestedOn
        - status
        - data
    BatchPushJournalEntriesV2Dto:
      type: object
      properties:
        connectionUuid:
          type: string
          description: Unique connection identifier.
          example: CON-396d5daa-26b2-4979-89b6-cafb2c298155
        batch:
          type: array
          items:
            $ref: '#/components/schemas/PushJournalEntriesV2'
      required:
        - connectionUuid
        - batch
    PushJournalEntriesIndividualV2ResponseDto:
      type: object
      properties:
        pushCommunicationId:
          type: string
          readOnly: true
          example: 60473b57f0cdd1683ca71f60
        requestedOn:
          type: string
          readOnly: true
          example: "2021-03-09T08:15:22.035Z"
          format: date-time
        status:
          type: string
          readOnly: true
          example: pending
          enum:
            - success
            - failed
            - pending
        data:
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/PushJournalEntriesV2'
      required:
        - pushCommunicationId
        - requestedOn
        - status
        - data
    BatchPushJournalEntriesV2ResponseDto:
      type: object
      properties:
        connectionUuid:
          type: string
          readOnly: true
          example: CON-396d5daa-26b2-4979-89b6-cafb2c298155
        businessName:
          type: string
          readOnly: true
          example: Railz
        serviceName:
          type: string
          readOnly: true
          example: xero
          enum:
            - freshbooks
            - quickbooks
            - quickbooksDesktop
            - xero
            - oracleNetsuite
            - sageBusinessCloud
            - sageIntacct
            - dynamicsBusinessCentral
            - wave
            - zohoBooks
        batchId:
          type: string
          readOnly: true
          example: 60473b57f0cdd1683ca71f60
        batch:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/PushJournalEntriesIndividualV2ResponseDto'
      required:
        - connectionUuid
        - businessName
        - serviceName
        - batchId
        - batch
    PushUpdateJournalEntryLineItemsV2:
      type: object
      properties:
        description:
          type: string
          maxLength: 4000
          example: Journal Entry description.
        accountRef:
          $ref: '#/components/schemas/AccountRefDto'
        trackingCategoryRefs:
          type: array
          items:
            $ref: '#/components/schemas/BillTrackingCategoryRefDto'
        entityRef:
          $ref: '#/components/schemas/EntityRefDto'
        taxRateRef:
          $ref: '#/components/schemas/TaxRateRefDto'
        debit:
          type: number
          format: float
          example: 100.3
        credit:
          type: number
          format: float
          example: 100.3
        id:
          type: string
          example: "1"
      required:
        - accountRef
    BatchPushUpdateJournalEntries:
      type: object
      properties:
        currencyRate:
          type: number
          format: float
          example: 1.13
        postedDate:
          type: string
          format: date
          example: "2021-03-09"
        memo:
          type: string
          maxLength: 4000
          example: Services rendered.
        currency:
          type: string
          example: CAD
        subsidiaryRefs:
          type: array
          items:
            $ref: '#/components/schemas/SubsidiaryRefDto'
        journalRef:
          $ref: '#/components/schemas/BaseJournalRefDto'
        createdDate:
          format: date-time
          type: string
          example: "2021-03-09T10:18:29.985Z"
        journalNumber:
          type: string
          example: "1857648"
        lines:
          type: array
          items:
            $ref: '#/components/schemas/PushUpdateJournalEntryLineItemsV2'
        passThrough:
          type: object
          example:
            CustomField:
              - DefinitionId: "1"
                StringValue: my custom value
                Name: Field One
        journalEntryRef:
          type: string
          description: reference to the journal entry to be updated
      required:
        - journalEntryRef
    BatchPushUpdateJournalEntriesV2Dto:
      type: object
      properties:
        connectionUuid:
          type: string
          description: Unique connection identifier.
          example: CON-396d5daa-26b2-4979-89b6-cafb2c298155
        batch:
          type: array
          items:
            $ref: '#/components/schemas/BatchPushUpdateJournalEntries'
      required:
        - connectionUuid
        - batch
    UpdateJournalEntriesIndividualV2ResponseDto:
      type: object
      properties:
        pushCommunicationId:
          type: string
          readOnly: true
          example: 60473b57f0cdd1683ca71f60
        requestedOn:
          type: string
          readOnly: true
          example: "2021-03-09T08:15:22.035Z"
          format: date-time
        status:
          type: string
          readOnly: true
          example: pending
          enum:
            - success
            - failed
            - pending
        data:
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/BatchPushUpdateJournalEntries'
      required:
        - pushCommunicationId
        - requestedOn
        - status
        - data
    BatchUpdateJournalEntriesV2ResponseDto:
      type: object
      properties:
        connectionUuid:
          type: string
          readOnly: true
          example: CON-396d5daa-26b2-4979-89b6-cafb2c298155
        businessName:
          type: string
          readOnly: true
          example: Railz
        serviceName:
          type: string
          readOnly: true
          example: xero
          enum:
            - freshbooks
            - quickbooks
            - quickbooksDesktop
            - xero
            - oracleNetsuite
            - sageBusinessCloud
            - sageIntacct
            - dynamicsBusinessCentral
            - wave
            - zohoBooks
        batchId:
          type: string
          readOnly: true
          example: 60473b57f0cdd1683ca71f60
        batch:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/UpdateJournalEntriesIndividualV2ResponseDto'
      required:
        - connectionUuid
        - businessName
        - serviceName
        - batchId
        - batch
    PushUpdateJournalEntriesV2:
      type: object
      properties:
        currencyRate:
          type: number
          format: float
          example: 1.13
        postedDate:
          type: string
          format: date
          example: "2021-03-09"
        memo:
          type: string
          maxLength: 4000
          example: Services rendered.
        currency:
          type: string
          example: CAD
        subsidiaryRefs:
          type: array
          items:
            $ref: '#/components/schemas/SubsidiaryRefDto'
        journalRef:
          $ref: '#/components/schemas/BaseJournalRefDto'
        createdDate:
          format: date-time
          type: string
          example: "2021-03-09T10:18:29.985Z"
        journalNumber:
          type: string
          example: "1857648"
        lines:
          type: array
          items:
            $ref: '#/components/schemas/PushUpdateJournalEntryLineItemsV2'
        passThrough:
          type: object
          example:
            CustomField:
              - DefinitionId: "1"
                StringValue: my custom value
                Name: Field One
    PushUpdateJournalEntriesV2Dto:
      type: object
      properties:
        connectionUuid:
          type: string
          description: Unique connection identifier.
          example: CON-396d5daa-26b2-4979-89b6-cafb2c298155
        data:
          $ref: '#/components/schemas/PushUpdateJournalEntriesV2'
      required:
        - connectionUuid
        - data
    PushUpdateJournalEntriesV2ResponseDto:
      type: object
      properties:
        connectionUuid:
          type: string
          readOnly: true
          example: CON-396d5daa-26b2-4979-89b6-cafb2c298155
        businessName:
          type: string
          readOnly: true
          example: Railz
        serviceName:
          type: string
          readOnly: true
          example: xero
          enum:
            - freshbooks
            - quickbooks
            - quickbooksDesktop
            - xero
            - oracleNetsuite
            - sageBusinessCloud
            - sageIntacct
            - dynamicsBusinessCentral
            - wave
            - zohoBooks
        pushCommunicationId:
          type: string
          readOnly: true
          example: 60473b57f0cdd1683ca71f60
        requestedOn:
          type: string
          readOnly: true
          example: "2021-03-09T08:15:22.035Z"
          format: date-time
        status:
          type: string
          readOnly: true
          example: pending
          enum:
            - success
            - failed
            - pending
        data:
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/PushUpdateJournalEntriesV2'
      required:
        - connectionUuid
        - businessName
        - serviceName
        - pushCommunicationId
        - requestedOn
        - status
        - data
    BasicReportMetaDataV2:
      type: object
      properties:
        connectionUuid:
          type: string
          readOnly: true
          example: CON-396d5daa-26b2-4979-89b6-cafb2c298155
        businessName:
          type: string
          readOnly: true
          example: Railz
        serviceName:
          type: string
          readOnly: true
          example: xero
          enum:
            - freshbooks
            - quickbooks
            - quickbooksDesktop
            - xero
            - oracleNetsuite
            - sageBusinessCloud
            - sageIntacct
            - dynamicsBusinessCentral
            - wave
            - zohoBooks
        reportId:
          readOnly: true
          example:
            - 5fad8a342a88364234392fb5
          type: array
          items:
            type: string
        createdAt:
          type: string
          readOnly: true
          example: "2020-11-25T01:02:03Z"
          format: date-time
        updatedAt:
          type: string
          example: "2020-11-30T01:02:03Z"
          format: date-time
          readOnly: false
      required:
        - connectionUuid
        - businessName
        - serviceName
        - reportId
        - createdAt
        - updatedAt
    JournalParentRef:
      type: object
      properties:
        id:
          type: string
          example: "434"
        name:
          type: string
          example: GLedger Parent
      required:
        - id
    GetJournalData:
      type: object
      properties:
        id:
          type: string
          example: "1234"
        journalCode:
          type: string
          example: GL
        name:
          type: string
          example: General Ledger
        status:
          type: string
          enum:
            - active
            - inactive
            - unknown
        parentRef:
          $ref: '#/components/schemas/JournalParentRef'
        type:
          type: string
          example: General
        hasChildren:
          type: boolean
          example: true
        createdDate:
          format: date-time
          type: string
          example: "2021-03-09T10:18:29.985Z"
        sourceModifiedDate:
          format: date-time
          type: string
          example: "2021-03-09T10:18:29.985Z"
      required:
        - id
        - name
        - status
    GetJournalV2ResponseDto:
      type: object
      properties:
        meta:
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/BasicReportMetaDataV2'
        pagination:
          $ref: '#/components/schemas/PaginationMetaData'
        data:
          type: array
          items:
            $ref: '#/components/schemas/GetJournalData'
      required:
        - meta
        - pagination
        - data
    PushJournalsData:
      type: object
      properties:
        passThrough:
          type: object
          example:
            CustomField:
              - DefinitionId: "1"
                StringValue: my custom value
                Name: Field One
        journalCode:
          type: string
          example: GL
        name:
          type: string
          example: General Ledger
        status:
          type: string
          enum:
            - active
            - inactive
            - unknown
      required:
        - journalCode
        - name
        - status
    PushJournalsDto:
      type: object
      properties:
        connectionUuid:
          type: string
          description: Unique connection identifier.
          example: CON-396d5daa-26b2-4979-89b6-cafb2c298155
        data:
          $ref: '#/components/schemas/PushJournalsData'
      required:
        - connectionUuid
        - data
    PushJournalsResponseDto:
      type: object
      properties:
        connectionUuid:
          type: string
          readOnly: true
          example: CON-396d5daa-26b2-4979-89b6-cafb2c298155
        businessName:
          type: string
          readOnly: true
          example: Railz
        serviceName:
          type: string
          readOnly: true
          example: sageIntacct
          enum:
            - freshbooks
            - quickbooks
            - quickbooksDesktop
            - xero
            - oracleNetsuite
            - sageBusinessCloud
            - sageIntacct
            - dynamicsBusinessCentral
            - wave
            - zohoBooks
        pushCommunicationId:
          type: string
          readOnly: true
          example: 60473b57f0cdd1683ca71f60
        requestedOn:
          type: string
          readOnly: true
          example: "2021-03-09T08:15:22.035Z"
          format: date-time
        status:
          type: string
          readOnly: true
          example: pending
          enum:
            - success
            - failed
            - pending
        data:
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/PushJournalsData'
      required:
        - connectionUuid
        - businessName
        - serviceName
        - pushCommunicationId
        - requestedOn
        - status
        - data
    PushUpdateJournalsDto:
      type: object
      properties:
        connectionUuid:
          type: string
          description: Unique connection identifier.
          example: CON-396d5daa-26b2-4979-89b6-cafb2c298155
        data:
          $ref: '#/components/schemas/PushJournalsData'
      required:
        - connectionUuid
        - data
    PortfolioMetricsReportMetaData:
      type: object
      properties:
        startDate:
          type: string
          readOnly: true
          example: "2020-11-01T01:02:03Z"
          format: date-time
        endDate:
          type: string
          readOnly: true
          example: "2020-11-30T01:02:03Z"
          format: date-time
        reportFrequency:
          type: string
          readOnly: true
          example: month
        createdAt:
          type: string
          readOnly: true
          example: "2020-11-30T01:02:03Z"
          format: date-time
      required:
        - startDate
        - endDate
        - reportFrequency
        - createdAt
    PortfolioMetricsReportData:
      type: object
      properties:
        section:
          oneOf:
            - $ref: '#/components/schemas/SummaryStatisticsData'
          allOf:
            - $ref: '#/components/schemas/SummaryStatisticsData'
        subSection:
          oneOf:
            - $ref: '#/components/schemas/SummaryStatisticsData'
          allOf:
            - $ref: '#/components/schemas/SummaryStatisticsData'
        group:
          oneOf:
            - $ref: '#/components/schemas/SummaryStatisticsData'
          allOf:
            - $ref: '#/components/schemas/SummaryStatisticsData'
        subGroup:
          oneOf:
            - $ref: '#/components/schemas/SummaryStatisticsData'
          allOf:
            - $ref: '#/components/schemas/SummaryStatisticsData'
        ratios:
          oneOf:
            - $ref: '#/components/schemas/SummaryStatisticsData'
          allOf:
            - $ref: '#/components/schemas/SummaryStatisticsData'
        pds:
          oneOf:
            - $ref: '#/components/schemas/SummaryStatisticsData'
          allOf:
            - $ref: '#/components/schemas/SummaryStatisticsData'
        creditScores:
          oneOf:
            - $ref: '#/components/schemas/SummaryStatisticsData'
          allOf:
            - $ref: '#/components/schemas/SummaryStatisticsData'
      required:
        - section
        - subSection
        - group
        - subGroup
    PortfolioMetricsReport:
      type: object
      properties:
        meta:
          $ref: '#/components/schemas/PortfolioMetricsReportMetaData'
        data:
          $ref: '#/components/schemas/PortfolioMetricsReportData'
      required:
        - meta
        - data
    PortfolioMetricsResponseDto:
      type: object
      properties:
        count:
          type: number
          readOnly: true
          format: integer
          example: 1
        reports:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/PortfolioMetricsReport'
      required:
        - count
        - reports
    ProbabilityOfDefaultReportMetaData:
      type: object
      properties:
        reportId:
          type: string
          readOnly: true
          example: 5fad8a342a88364234392fb5
        serviceName:
          type: string
          readOnly: true
          example: xero
          enum:
            - quickbooks
            - xero
            - freshbooks
            - quickbooksDesktop
            - sageIntacct
            - sageBusinessCloud
            - oracleNetsuite
            - dynamicsBusinessCentral
            - wave
            - zohoBooks
        businessName:
          type: string
          readOnly: true
          example: Railz
        startDate:
          type: string
          readOnly: true
          example: "2020-11-25T01:02:03Z"
          format: date-time
        endDate:
          type: string
          readOnly: true
          example: "2020-11-25T01:02:03Z"
          format: date-time
        createdAt:
          type: string
          readOnly: true
          example: "2020-12-25T01:02:03Z"
          format: date-time
        updatedAt:
          type: string
          readOnly: false
          example: "2020-12-25T01:02:03Z"
          format: date-time
      required:
        - reportId
        - serviceName
        - businessName
        - startDate
        - endDate
        - createdAt
        - updatedAt
    ProbabilityOfDefaultData:
      type: object
      properties:
        markovPD:
          type: number
          example: 0.659176337
          format: float
          readOnly: true
        mertonPD:
          type: number
          example: 0.659176337
          format: float
          readOnly: true
        wilcoxPD:
          type: number
          example: 0.659176337
          format: float
          readOnly: true
        altmanZScorePD:
          type: number
          example: 0.659176337
          format: float
          readOnly: true
        aggregatePD:
          type: number
          example: 0.659176337
          format: float
          readOnly: true
        logitPD:
          type: number
          example: 0.659176337
          format: float
    ProbabilityOfDefaultReport:
      type: object
      properties:
        meta:
          $ref: '#/components/schemas/ProbabilityOfDefaultReportMetaData'
        data:
          $ref: '#/components/schemas/ProbabilityOfDefaultData'
      required:
        - meta
        - data
    ProbabilityOfDefaultResponseDto:
      type: object
      properties:
        count:
          type: number
          readOnly: true
          format: integer
          example: 1
        reports:
          readOnly: false
          type: array
          items:
            $ref: '#/components/schemas/ProbabilityOfDefaultReport'
      required:
        - count
        - reports
    ProbabilityOfDefaultReportMetaDataV2:
      type: object
      properties:
        connectionUuid:
          type: string
          readOnly: true
          example: CON-396d5daa-26b2-4979-89b6-cafb2c298155
        businessName:
          type: string
          readOnly: true
          example: Railz
        serviceName:
          type: string
          readOnly: true
          example: xero
          enum:
            - freshbooks
            - quickbooks
            - quickbooksDesktop
            - xero
            - oracleNetsuite
            - sageBusinessCloud
            - sageIntacct
            - dynamicsBusinessCentral
            - wave
            - zohoBooks
        reportId:
          type: string
          readOnly: true
          example: 5fad8a342a88364234392fb5
        startDate:
          type: string
          readOnly: true
          example: "2020-11-25T01:02:03Z"
          format: date-time
        endDate:
          type: string
          readOnly: true
          example: "2020-11-25T01:02:03Z"
          format: date-time
        createdAt:
          type: string
          readOnly: true
          example: "2020-12-25T01:02:03Z"
          format: date-time
        updatedAt:
          type: string
          readOnly: false
          example: "2020-12-25T01:02:03Z"
          format: date-time
      required:
        - connectionUuid
        - businessName
        - serviceName
        - reportId
        - startDate
        - endDate
        - createdAt
        - updatedAt
    ProbabilityOfDefaultReportV2:
      type: object
      properties:
        meta:
          $ref: '#/components/schemas/ProbabilityOfDefaultReportMetaDataV2'
        data:
          $ref: '#/components/schemas/ProbabilityOfDefaultData'
      required:
        - meta
        - data
    ProbabilityOfDefaultResponseV2Dto:
      type: object
      properties:
        count:
          type: number
          readOnly: true
          format: integer
          example: 1
        reports:
          readOnly: false
          type: array
          items:
            $ref: '#/components/schemas/ProbabilityOfDefaultReportV2'
      required:
        - count
        - reports
    BasicContact:
      type: object
      properties:
        name:
          type: string
          example: John Smith
        email:
          type: string
          example: jsmith@company.com
        phone:
          type: string
          example: "8884449999"
    GetPurchaseOrderDataV1:
      type: object
      properties:
        id:
          type: string
          example: "1"
        postedDate:
          format: date-time
          type: string
          example: "2021-03-09T10:18:29.985Z"
        deliveryDate:
          format: date-time
          type: string
          example: "2021-03-09T10:18:29.985Z"
        expectedArrivalDate:
          format: date-time
          type: string
          example: "2021-03-09T10:18:29.985Z"
        dueDate:
          format: date-time
          type: string
          example: "2021-03-09T10:18:29.985Z"
        currencyRate:
          type: number
          example: 1.13
          format: float
        totalDiscount:
          type: number
          example: 322
          format: float
        discountPercentage:
          type: number
          example: 322
          format: float
        subTotal:
          type: number
          example: 301.5
          format: float
        taxAmount:
          type: number
          example: 20.5
          format: float
        totalAmount:
          type: number
          example: 322
          format: float
        status:
          type: string
          enum:
            - open
            - closed
            - void
            - unknown
            - draft
          example: open
        memo:
          type: string
          example: Example bill memo.
        shippingAddress:
          $ref: '#/components/schemas/BaseAddress'
        contact:
          $ref: '#/components/schemas/BasicContact'
        sourceModifiedDate:
          format: date-time
          type: string
          example: "2021-03-09T10:18:29.985Z"
        vendorRef:
          $ref: '#/components/schemas/VendorRef'
        currencyRef:
          $ref: '#/components/schemas/CurrencyRef'
        lines:
          type: array
          items:
            $ref: '#/components/schemas/InvoiceBillLineItemsV1'
      required:
        - id
        - postedDate
        - totalAmount
        - status
    GetPurchaseOrderResponseDto:
      type: object
      properties:
        pagination:
          $ref: '#/components/schemas/PaginationMetaData'
        count:
          type: number
          readOnly: true
          example: 1
          format: integer
        meta:
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/BasicStartEndDateReportMetaData'
        data:
          type: array
          items:
            $ref: '#/components/schemas/GetPurchaseOrderDataV1'
      required:
        - pagination
        - count
        - meta
        - data
    PushPurchaseOrderConnection:
      type: object
      properties:
        businessName:
          type: string
          example: Railz
          description: Unique business name identifier.
        serviceName:
          type: string
          example: quickbooks
          description: Name of accounting platform service.
          enum:
            - quickbooks
            - xero
            - dynamicsBusinessCentral
            - oracleNetsuite
      required:
        - businessName
        - serviceName
    ShippingContact:
      type: object
      properties:
        name:
          type: string
          maxLength: 500
          example: John Smith
        email:
          type: string
          maxLength: 100
          example: email@example.com
        phone:
          type: string
          maxLength: 30
          example: 800-123-4567
    PurchaseOrderLineV1:
      type: object
      properties:
        description:
          type: string
          maxLength: 4000
          example: Services rendered.
        quantity:
          type: number
          format: float
          example: "4"
        unitAmount:
          type: number
          format: float
          example: "50.4"
        discountPercentage:
          type: number
          format: float
          example: "10.0"
        taxAmount:
          type: number
          format: float
          example: "15.25"
        subTotal:
          type: number
          format: float
          example: "202.0"
        totalAmount:
          type: number
          format: float
          example: "197.05"
        accountRef:
          type: string
          example: "12"
        taxRef:
          type: string
          example: "45"
        inventoryRef:
          type: string
          example: "32"
        memo:
          type: string
          deprecated: true
          maxLength: 4000
          example: Example memo.
      required:
        - quantity
        - unitAmount
    PushPurchaseOrderV1:
      type: object
      properties:
        passThrough:
          type: object
          example:
            CustomField:
              - DefinitionId: "1"
                StringValue: my custom value
                Name: Field One
        currencyRate:
          type: number
          example: "1.13"
        postedDate:
          type: string
          format: date
          example: "2021-03-29"
        dueDate:
          type: string
          format: date
          example: "2021-03-29"
        deliveryDate:
          type: string
          format: date
          example: "2021-03-29"
        memo:
          type: string
          maxLength: 4000
          example: Example memo.
        vendorRef:
          type: string
          example: "130"
        currency:
          type: string
          example: CAD
        billRef:
          type: string
          example: "164"
        expectedDeliveryDate:
          type: string
          format: date
          example: "2021-03-29"
        shipToAddress:
          $ref: '#/components/schemas/ShippingAddressDto'
        shipToContact:
          $ref: '#/components/schemas/ShippingContact'
        lines:
          type: array
          items:
            $ref: '#/components/schemas/PurchaseOrderLineV1'
      required:
        - vendorRef
        - lines
    PushPurchaseOrderV1Dto:
      type: object
      properties:
        connection:
          $ref: '#/components/schemas/PushPurchaseOrderConnection'
        data:
          $ref: '#/components/schemas/PushPurchaseOrderV1'
      required:
        - connection
        - data
    PushPurchaseOrderV1ResponseDto:
      type: object
      properties:
        pushCommunicationId:
          type: string
          readOnly: true
          example: 60473b57f0cdd1683ca71f60
        requestedOn:
          type: string
          readOnly: true
          example: "2021-03-09T08:15:22.035Z"
          format: date-time
        status:
          type: string
          readOnly: true
          example: pending
          enum:
            - success
            - failed
            - pending
        businessName:
          type: string
          readOnly: true
          example: Railz
        serviceName:
          type: string
          readOnly: true
          example: quickbooks
          enum:
            - freshbooks
            - quickbooks
            - quickbooksDesktop
            - xero
            - oracleNetsuite
            - sageBusinessCloud
            - sageIntacct
            - dynamicsBusinessCentral
            - wave
            - zohoBooks
        data:
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/PushPurchaseOrderV1'
      required:
        - pushCommunicationId
        - requestedOn
        - status
        - businessName
        - serviceName
        - data
    GetPurchaseOrderDataV2:
      type: object
      properties:
        id:
          type: string
          example: "1"
        postedDate:
          format: date-time
          type: string
          example: "2021-03-09T10:18:29.985Z"
        deliveryDate:
          format: date-time
          type: string
          example: "2021-03-09T10:18:29.985Z"
        expectedArrivalDate:
          format: date-time
          type: string
          example: "2021-03-09T10:18:29.985Z"
        dueDate:
          format: date-time
          type: string
          example: "2021-03-09T10:18:29.985Z"
        currencyRate:
          type: number
          example: 1.13
          format: float
        totalDiscount:
          type: number
          example: 322
          format: float
        discountPercentage:
          type: number
          example: 322
          format: float
        subTotal:
          type: number
          example: 301.5
          format: float
        taxAmount:
          type: number
          example: 20.5
          format: float
        totalAmount:
          type: number
          example: 322
          format: float
        status:
          type: string
          enum:
            - open
            - closed
            - void
            - unknown
            - draft
          example: open
        memo:
          type: string
          example: Example bill memo.
        shippingAddress:
          $ref: '#/components/schemas/BaseAddress'
        contact:
          $ref: '#/components/schemas/BasicContact'
        sourceModifiedDate:
          format: date-time
          type: string
          example: "2021-03-09T10:18:29.985Z"
        vendorRef:
          $ref: '#/components/schemas/VendorRef'
        currency:
          type: string
          example: USD
        apAccountRef:
          $ref: '#/components/schemas/AccountRef'
        lines:
          type: array
          items:
            $ref: '#/components/schemas/InvoiceBillLineItemsV2'
        passThrough:
          type: object
          example:
            CustomField:
              - DefinitionId: "1"
                StringValue: my custom value
                Name: Field One
      required:
        - id
        - postedDate
        - totalAmount
        - status
        - vendorRef
        - lines
    GetPurchaseOrderResponseV2Dto:
      type: object
      properties:
        pagination:
          $ref: '#/components/schemas/PaginationMetaData'
        meta:
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/BasicStartEndDateReportMetaDataV2'
        data:
          type: array
          items:
            $ref: '#/components/schemas/GetPurchaseOrderDataV2'
      required:
        - pagination
        - meta
        - data
    ApAccountRefDto:
      type: object
      properties:
        id:
          type: string
          example: "22"
      required:
        - id
    PurchaseOrderTrackingCategoryRefDto:
      type: object
      properties:
        id:
          type: string
          example: "4040"
        name:
          type: string
          example: Region
        type:
          type: string
          example: class
          enum:
            - class
            - department
            - location
            - unknown
    PurchaseOrderLineV2:
      type: object
      properties:
        description:
          type: string
          maxLength: 4000
          example: Services rendered.
        accountRef:
          $ref: '#/components/schemas/AccountRefDto'
        taxRateRef:
          $ref: '#/components/schemas/TaxRateRefDto'
        inventoryRef:
          $ref: '#/components/schemas/InventoryRefDto'
        trackingCategoryRefs:
          type: array
          items:
            $ref: '#/components/schemas/PurchaseOrderTrackingCategoryRefDto'
        quantity:
          type: number
          format: float
          example: "4"
        unitAmount:
          type: number
          format: float
          example: "50.4"
        discountPercentage:
          type: number
          example: 22
          format: float
        taxAmount:
          type: number
          example: 20.5
          format: float
    PushPurchaseOrderV2:
      type: object
      properties:
        passThrough:
          type: object
          example:
            CustomField:
              - DefinitionId: "1"
                StringValue: my custom value
                Name: Field One
        currencyRate:
          type: number
          example: "1.13"
        postedDate:
          type: string
          format: date
          example: "2021-03-29"
        dueDate:
          type: string
          format: date
          example: "2021-03-29"
        deliveryDate:
          type: string
          format: date
          example: "2021-03-29"
        memo:
          type: string
          maxLength: 4000
          example: Example memo.
        vendorRef:
          $ref: '#/components/schemas/VendorRefDto'
        currency:
          type: string
          example: CAD
        apAccountRef:
          $ref: '#/components/schemas/ApAccountRefDto'
        expectedArrivalDate:
          type: string
          format: date
          example: "2021-03-29"
        shippingAddress:
          $ref: '#/components/schemas/ShippingAddressDto'
        contact:
          $ref: '#/components/schemas/ShippingContact'
        lines:
          type: array
          items:
            $ref: '#/components/schemas/PurchaseOrderLineV2'
      required:
        - vendorRef
        - lines
    PushPurchaseOrderV2Dto:
      type: object
      properties:
        connectionUuid:
          type: string
          description: Unique connection identifier.
          example: CON-396d5daa-26b2-4979-89b6-cafb2c298155
        data:
          $ref: '#/components/schemas/PushPurchaseOrderV2'
      required:
        - connectionUuid
        - data
    PushPurchaseOrderV2ResponseDto:
      type: object
      properties:
        connectionUuid:
          type: string
          readOnly: true
          example: CON-396d5daa-26b2-4979-89b6-cafb2c298155
        businessName:
          type: string
          readOnly: true
          example: Railz
        serviceName:
          type: string
          readOnly: true
          example: xero
          enum:
            - freshbooks
            - quickbooks
            - quickbooksDesktop
            - xero
            - oracleNetsuite
            - sageBusinessCloud
            - sageIntacct
            - dynamicsBusinessCentral
            - wave
            - zohoBooks
        pushCommunicationId:
          type: string
          readOnly: true
          example: 60473b57f0cdd1683ca71f60
        requestedOn:
          type: string
          readOnly: true
          example: "2021-03-09T08:15:22.035Z"
          format: date-time
        status:
          type: string
          readOnly: true
          example: pending
          enum:
            - success
            - failed
            - pending
        data:
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/PushPurchaseOrderV2'
      required:
        - connectionUuid
        - businessName
        - serviceName
        - pushCommunicationId
        - requestedOn
        - status
        - data
    RefundLineItemV1:
      type: object
      properties:
        description:
          type: string
          example: Services rendered.
        unitAmount:
          type: number
          example: 100.5
          format: float
        quantity:
          type: number
          example: 3
          format: integer
        discountAmount:
          type: number
          example: 0
          format: float
        taxAmount:
          type: number
          example: 20.5
          format: float
        taxRateRef:
          $ref: '#/components/schemas/TaxRateRef'
        inventoryRef:
          $ref: '#/components/schemas/InventoryRef'
        discountPercentage:
          type: number
          example: 10.5
          format: float
        id:
          type: string
        totalAmount:
          type: number
          example: 10.5
          format: float
          deprecated: true
        subTotal:
          type: number
          example: 301.5
          format: float
          deprecated: true
        trackingCategoryRef:
          deprecated: true
          allOf:
            - $ref: '#/components/schemas/TrackingCategoryRef'
    GetRefundDataV1:
      type: object
      properties:
        id:
          type: string
          example: "1"
        customerRef:
          $ref: '#/components/schemas/CustomerRef'
        accountRef:
          $ref: '#/components/schemas/AccountRef'
        currencyRate:
          type: number
          example: 1.13
          format: float
        totalDiscount:
          type: number
          example: 322
          format: float
        discountPercentage:
          type: number
          example: 322
          format: float
        subTotal:
          type: number
          example: 301.5
          format: float
        taxAmount:
          type: number
          example: 20.5
          format: float
        totalAmount:
          type: number
          example: 322
          format: float
        memo:
          type: string
          example: Example bill memo.
        sourceModifiedDate:
          format: date-time
          type: string
          example: "2021-03-09T10:18:29.985Z"
        date:
          format: date-time
          type: string
          example: "2021-03-09T10:18:29.985Z"
        shippingAddress:
          $ref: '#/components/schemas/BaseAddress'
        currencyRef:
          $ref: '#/components/schemas/CurrencyRef'
        lines:
          type: array
          items:
            $ref: '#/components/schemas/RefundLineItemV1'
      required:
        - id
        - totalAmount
        - date
    GetRefundResponseDto:
      type: object
      properties:
        pagination:
          $ref: '#/components/schemas/PaginationMetaData'
        count:
          type: number
          readOnly: true
          example: 1
          format: integer
        meta:
          $ref: '#/components/schemas/BasicStartEndDateReportMetaData'
        data:
          type: array
          items:
            $ref: '#/components/schemas/GetRefundDataV1'
      required:
        - pagination
        - count
        - meta
        - data
    PushRefundConnection:
      type: object
      properties:
        businessName:
          type: string
          example: Railz
          description: Unique business name identifier.
        serviceName:
          type: string
          example: xero
          description: Name of accounting platform service.
          enum:
            - xero
            - quickbooks
      required:
        - businessName
        - serviceName
    PushRefundLine:
      type: object
      properties:
        inventoryRef:
          type: string
          example: "32"
        taxRef:
          type: string
          example: "2"
        totalAmount:
          type: number
          format: float
          example: "12.88"
    PushRefundData:
      type: object
      properties:
        passThrough:
          type: object
          example:
            CustomField:
              - DefinitionId: "1"
                StringValue: my custom value
                Name: Field One
        currencyRate:
          type: number
          example: "1.13"
          readOnly: false
        totalAmount:
          type: number
          format: float
          example: 150.5
          readOnly: false
        memo:
          type: string
          example: Services rendered.
          maxLength: 4000
          readOnly: false
        customerRef:
          type: string
          example: "145"
          readOnly: false
        accountRef:
          type: string
          example: "130"
          readOnly: false
        date:
          type: string
          format: date
          example: "2021-03-09"
          readOnly: false
        invoiceRef:
          type: string
          example: "503"
          readOnly: false
        currency:
          type: string
          example: CAD
          readOnly: false
        lines:
          type: array
          items:
            $ref: '#/components/schemas/PushRefundLine'
      required:
        - totalAmount
        - customerRef
        - accountRef
        - date
    PushRefundDto:
      type: object
      properties:
        connection:
          $ref: '#/components/schemas/PushRefundConnection'
        data:
          $ref: '#/components/schemas/PushRefundData'
      required:
        - connection
        - data
    PushRefundResponseDto:
      type: object
      properties:
        pushCommunicationId:
          type: string
          readOnly: true
          example: 60473b57f0cdd1683ca71f60
        requestedOn:
          type: string
          readOnly: true
          example: "2021-03-09T08:15:22.035Z"
          format: date-time
        status:
          type: string
          readOnly: true
          example: pending
          enum:
            - success
            - failed
            - pending
        businessName:
          type: string
          readOnly: true
          example: Railz
        serviceName:
          type: string
          readOnly: true
          example: xero
          enum:
            - xero
            - quickbooks
            - freshbooks
        data:
          readOnly: false
          nullable: false
          allOf:
            - $ref: '#/components/schemas/PushRefundData'
      required:
        - pushCommunicationId
        - requestedOn
        - status
        - businessName
        - serviceName
        - data
    RefundLineItemLinks:
      type: object
      properties:
        id:
          type: string
          example: "123"
      required:
        - id
    RefundLineItemV2:
      type: object
      properties:
        description:
          type: string
          example: Services rendered.
        unitAmount:
          type: number
          example: 100.5
          format: float
        quantity:
          type: number
          example: 3
          format: integer
        discountAmount:
          type: number
          example: 0
          format: float
        taxAmount:
          type: number
          example: 20.5
          format: float
        taxRateRef:
          $ref: '#/components/schemas/TaxRateRef'
        inventoryRef:
          $ref: '#/components/schemas/InventoryRef'
        discountPercentage:
          type: number
          example: 10.5
          format: float
        amount:
          type: number
          example: 10.5
          format: float
        trackingCategoryRefs:
          type: array
          items:
            $ref: '#/components/schemas/TrackingCategoryRefV2'
        accountRef:
          $ref: '#/components/schemas/AccountRef'
        links:
          type: array
          items:
            $ref: '#/components/schemas/RefundLineItemLinks'
      required:
        - amount
    GetRefundDataV2:
      type: object
      properties:
        id:
          type: string
          example: "1"
        customerRef:
          $ref: '#/components/schemas/CustomerRef'
        accountRef:
          $ref: '#/components/schemas/AccountRef'
        currencyRate:
          type: number
          example: 1.13
          format: float
        totalDiscount:
          type: number
          example: 322
          format: float
        discountPercentage:
          type: number
          example: 322
          format: float
        subTotal:
          type: number
          example: 301.5
          format: float
        taxAmount:
          type: number
          example: 20.5
          format: float
        totalAmount:
          type: number
          example: 322
          format: float
        memo:
          type: string
          example: Example bill memo.
        sourceModifiedDate:
          format: date-time
          type: string
          example: "2021-03-09T10:18:29.985Z"
        postedDate:
          format: date-time
          type: string
          example: "2021-03-09T10:18:29.985Z"
        currency:
          type: string
          example: USD
        lines:
          type: array
          items:
            $ref: '#/components/schemas/RefundLineItemV2'
        passThrough:
          type: object
          example:
            CustomField:
              - DefinitionId: "1"
                StringValue: my custom value
                Name: Field One
      required:
        - id
        - totalAmount
        - postedDate
    GetRefundResponseV2Dto:
      type: object
      properties:
        pagination:
          $ref: '#/components/schemas/PaginationMetaData'
        meta:
          $ref: '#/components/schemas/BasicStartEndDateReportMetaDataV2'
        data:
          type: array
          items:
            $ref: '#/components/schemas/GetRefundDataV2'
      required:
        - pagination
        - meta
        - data
    RefundTrackingCategoryRefDto:
      type: object
      properties:
        id:
          type: string
          example: "4040"
        type:
          type: string
          example: class
          enum:
            - class
            - department
            - location
            - unknown
      required:
        - id
    PushRefundLineLinkV2:
      type: object
      properties:
        id:
          type: string
          example: "125"
      required:
        - id
    PushRefundLineV2:
      type: object
      properties:
        description:
          type: string
          example: Refund description
        inventoryRef:
          $ref: '#/components/schemas/InventoryRefDto'
        taxRateRef:
          $ref: '#/components/schemas/TaxRateRefDto'
        amount:
          type: number
          format: float
          example: "12.88"
        unitAmount:
          type: number
          format: float
          example: "12.88"
        quantity:
          type: number
          format: float
          example: 3
        discountPercentage:
          type: number
          format: float
          example: 100.5
        accountRef:
          $ref: '#/components/schemas/AccountRefDto'
        trackingCategoryRefs:
          type: array
          items:
            $ref: '#/components/schemas/RefundTrackingCategoryRefDto'
        links:
          type: array
          items:
            $ref: '#/components/schemas/PushRefundLineLinkV2'
      required:
        - amount
    PushRefundDataV2:
      type: object
      properties:
        passThrough:
          type: object
          example:
            CustomField:
              - DefinitionId: "1"
                StringValue: my custom value
                Name: Field One
        currencyRate:
          type: number
          example: "1.13"
          readOnly: false
        totalAmount:
          type: number
          format: float
          example: 150.5
          readOnly: false
        memo:
          type: string
          example: Services rendered.
          maxLength: 4000
          readOnly: false
        postedDate:
          type: string
          format: date
          example: "2021-03-09"
          readOnly: false
        customerRef:
          $ref: '#/components/schemas/CustomerRefDto'
        accountRef:
          $ref: '#/components/schemas/AccountRefDto'
        currency:
          type: string
          example: CAD
        lines:
          type: array
          items:
            $ref: '#/components/schemas/PushRefundLineV2'
      required:
        - accountRef
    PushRefundV2Dto:
      type: object
      properties:
        connectionUuid:
          type: string
          description: Unique connection identifier.
          example: CON-396d5daa-26b2-4979-89b6-cafb2c298155
        data:
          $ref: '#/components/schemas/PushRefundDataV2'
      required:
        - connectionUuid
        - data
    PushRefundResponseV2Dto:
      type: object
      properties:
        connectionUuid:
          type: string
          readOnly: true
          example: CON-396d5daa-26b2-4979-89b6-cafb2c298155
        businessName:
          type: string
          readOnly: true
          example: Railz
        serviceName:
          type: string
          readOnly: true
          example: xero
          enum:
            - freshbooks
            - quickbooks
            - quickbooksDesktop
            - xero
            - oracleNetsuite
            - sageBusinessCloud
            - sageIntacct
            - dynamicsBusinessCentral
            - wave
            - zohoBooks
        pushCommunicationId:
          type: string
          readOnly: true
          example: 60473b57f0cdd1683ca71f60
        requestedOn:
          type: string
          readOnly: true
          example: "2021-03-09T08:15:22.035Z"
          format: date-time
        status:
          type: string
          readOnly: true
          example: pending
          enum:
            - success
            - failed
            - pending
        data:
          readOnly: false
          nullable: false
          allOf:
            - $ref: '#/components/schemas/PushRefundDataV2'
      required:
        - connectionUuid
        - businessName
        - serviceName
        - pushCommunicationId
        - requestedOn
        - status
        - data
    TaxBenchmarkingsReportMetaData:
      type: object
      properties:
        industryCode:
          type: string
          readOnly: true
          example: "44"
        region:
          type: string
          example: CA
        numberOfBusinesses:
          type: number
          example: 282
        createdAt:
          type: string
          readOnly: true
          example: "2020-11-30T01:02:03Z"
          format: date-time
      required:
        - industryCode
        - numberOfBusinesses
        - createdAt
    TaxBenchmarkingsData:
      type: object
      properties:
        section:
          oneOf:
            - $ref: '#/components/schemas/SummaryStatisticsData'
          allOf:
            - $ref: '#/components/schemas/SummaryStatisticsData'
        subSection:
          oneOf:
            - $ref: '#/components/schemas/SummaryStatisticsData'
          allOf:
            - $ref: '#/components/schemas/SummaryStatisticsData'
        group:
          oneOf:
            - $ref: '#/components/schemas/SummaryStatisticsData'
          allOf:
            - $ref: '#/components/schemas/SummaryStatisticsData'
        subGroup:
          oneOf:
            - $ref: '#/components/schemas/SummaryStatisticsData'
          allOf:
            - $ref: '#/components/schemas/SummaryStatisticsData'
      required:
        - section
        - subSection
        - group
        - subGroup
    TaxBenchmarkingsReport:
      type: object
      properties:
        meta:
          $ref: '#/components/schemas/TaxBenchmarkingsReportMetaData'
        data:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/TaxBenchmarkingsData'
      required:
        - meta
        - data
    TaxBenchmarkingsResponseDto:
      type: object
      properties:
        count:
          type: number
          readOnly: true
          format: integer
          example: 1
        reports:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/TaxBenchmarkingsReport'
      required:
        - count
        - reports
    TaxRateComponentV1:
      type: object
      properties:
        name:
          type: string
          example: HST
        rate:
          type: number
          example: 13
          format: float
        isCompound:
          type: boolean
          example: false
        isPurchasesTax:
          type: boolean
          example: false
        isSalesTax:
          type: boolean
          example: false
    GetTaxRatesDataV1:
      type: object
      properties:
        id:
          type: string
          example: "1"
        name:
          type: string
          example: Harmonized sales tax
        code:
          type: string
          example: HST
        effectiveTaxRate:
          type: number
          example: 0
          format: float
        totalTaxRate:
          type: number
          example: 13
          format: float
        sourceModifiedDate:
          format: date-time
          type: string
          example: "2021-03-10T11:26:06.619Z"
        components:
          type: array
          items:
            $ref: '#/components/schemas/TaxRateComponentV1'
      required:
        - id
        - name
    GetTaxRatesResponseDto:
      type: object
      properties:
        pagination:
          $ref: '#/components/schemas/PaginationMetaData'
        count:
          type: number
          readOnly: true
          example: 1
          format: integer
        meta:
          $ref: '#/components/schemas/ListReportMetaData'
        data:
          type: array
          items:
            $ref: '#/components/schemas/GetTaxRatesDataV1'
      required:
        - pagination
        - count
        - meta
        - data
    TaxRateComponentV2:
      type: object
      properties:
        id:
          type: string
          example: "1"
        name:
          type: string
          example: HST
        rate:
          type: number
          example: 13
          format: float
        isCompound:
          type: boolean
          example: false
        isPurchasesTax:
          type: boolean
          example: false
        isSalesTax:
          type: boolean
          example: false
    GetTaxRatesDataV2:
      type: object
      properties:
        id:
          type: string
          example: "1"
        name:
          type: string
          example: Harmonized sales tax
        code:
          type: string
          example: HST
        effectiveTaxRate:
          type: number
          example: 0
          format: float
        totalTaxRate:
          type: number
          example: 13
          format: float
        sourceModifiedDate:
          format: date-time
          type: string
          example: "2021-03-10T11:26:06.619Z"
        components:
          type: array
          items:
            $ref: '#/components/schemas/TaxRateComponentV2'
      required:
        - id
        - name
    GetTaxRatesResponseV2Dto:
      type: object
      properties:
        pagination:
          $ref: '#/components/schemas/PaginationMetaData'
        meta:
          $ref: '#/components/schemas/ListReportMetaDataV2'
        data:
          type: array
          items:
            $ref: '#/components/schemas/GetTaxRatesDataV2'
      required:
        - pagination
        - meta
        - data
    PushTaxRateComponent:
      type: object
      properties:
        id:
          type: string
          example: "1"
        name:
          type: string
          example: HST
        rate:
          type: number
          example: 13
          format: float
        isCompound:
          type: boolean
          example: false
        isPurchasesTax:
          type: boolean
          example: false
        isSalesTax:
          type: boolean
          example: false
    TaxAuthority:
      type: object
      properties:
        id:
          type: string
      required:
        - id
    PushTaxRate:
      type: object
      properties:
        name:
          type: string
          example: Name of the tax rate
        code:
          type: string
          example: "11200"
        effectiveTaxRate:
          type: number
          format: float
          example: 0
        totalTaxRate:
          type: number
          format: float
          example: 0
        bankName:
          type: string
          example: TD Bank
        components:
          type: array
          items:
            $ref: '#/components/schemas/PushTaxRateComponent'
        taxAuthority:
          $ref: '#/components/schemas/TaxAuthority'
      required:
        - name
    PushTaxRateDto:
      type: object
      properties:
        connectionUuid:
          type: string
          description: Unique connection identifier.
          example: CON-396d5daa-26b2-4979-89b6-cafb2c298155
        data:
          $ref: '#/components/schemas/PushTaxRate'
      required:
        - connectionUuid
        - data
    PushTaxRateResponseDto:
      type: object
      properties:
        connectionUuid:
          type: string
          readOnly: true
          example: CON-396d5daa-26b2-4979-89b6-cafb2c298155
        businessName:
          type: string
          readOnly: true
          example: Railz
        serviceName:
          type: string
          readOnly: true
          example: xero
          enum:
            - freshbooks
            - quickbooks
            - quickbooksDesktop
            - xero
            - oracleNetsuite
            - sageBusinessCloud
            - sageIntacct
            - dynamicsBusinessCentral
            - wave
            - zohoBooks
        pushCommunicationId:
          type: string
          readOnly: true
          example: 60473b57f0cdd1683ca71f60
        requestedOn:
          type: string
          readOnly: true
          example: "2021-03-09T08:15:22.035Z"
          format: date-time
        status:
          type: string
          readOnly: true
          example: pending
          enum:
            - success
            - failed
            - pending
        data:
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/PushTaxRate'
      required:
        - connectionUuid
        - businessName
        - serviceName
        - pushCommunicationId
        - requestedOn
        - status
        - data
    GetTaxAuthorityData:
      type: object
      properties:
        id:
          type: string
          example: "1"
        name:
          type: string
          example: Dept. of Revenue
        memo:
          type: string
        registrationNumber:
          type: string
          example: "460000000066001"
        sourceModifiedDate:
          format: date-time
          type: string
          example: "2021-03-10T11:26:06.619Z"
      required:
        - id
        - name
    GetTaxAuthorityResponseDto:
      type: object
      properties:
        meta:
          $ref: '#/components/schemas/ListReportMetaDataV2'
        data:
          type: array
          items:
            $ref: '#/components/schemas/GetTaxAuthorityData'
      required:
        - meta
        - data
    BasicReportMetaData:
      type: object
      properties:
        reportId:
          readOnly: true
          example:
            - 5fad8a342a88364234392fb5
          type: array
          items:
            type: string
        serviceName:
          type: string
          readOnly: true
          example: xero
          enum:
            - freshbooks
            - quickbooks
            - quickbooksDesktop
            - xero
            - oracleNetsuite
            - sageBusinessCloud
            - sageIntacct
            - dynamicsBusinessCentral
            - wave
            - zohoBooks
        businessName:
          type: string
          readOnly: true
          example: Railz
        createdAt:
          type: string
          readOnly: true
          example: "2020-11-25T01:02:03Z"
          format: date-time
        updatedAt:
          type: string
          example: "2020-11-30T01:02:03Z"
          format: date-time
          readOnly: false
      required:
        - reportId
        - serviceName
        - businessName
        - createdAt
        - updatedAt
    GetTrackingCategoryData:
      type: object
      properties:
        id:
          type: string
          example: "123"
        name:
          type: string
          example: East Coast
        isEditable:
          type: boolean
          example: "true"
        parentRef:
          $ref: '#/components/schemas/ParentRef'
        status:
          type: string
          enum:
            - active
            - archived
            - unknown
          example: active
        sourceModifiedDate:
          format: date-time
          type: string
          example: "2021-03-10T11:26:06.619Z"
      required:
        - id
        - name
        - isEditable
        - status
    GetTrackingCategoryResponseDto:
      type: object
      properties:
        pagination:
          $ref: '#/components/schemas/PaginationMetaData'
        count:
          type: number
          readOnly: true
          example: 1
          format: integer
        meta:
          $ref: '#/components/schemas/BasicReportMetaData'
        data:
          type: array
          items:
            $ref: '#/components/schemas/GetTrackingCategoryData'
      required:
        - pagination
        - count
        - meta
        - data
    PushTrackingCategoriesConnection:
      type: object
      properties:
        businessName:
          type: string
          example: Railz
          description: Unique business name identifier.
        serviceName:
          type: string
          example: quickbooks
          description: Name of accounting platform service.
          enum:
            - quickbooks
            - xero
      required:
        - businessName
        - serviceName
    PushTrackingCategoriesV1:
      type: object
      properties:
        name:
          type: string
          example: Region
          maxLength: 100
        parentRef:
          type: string
          example: "1334"
      required:
        - name
    PushTrackingCategoriesV1Dto:
      type: object
      properties:
        connection:
          $ref: '#/components/schemas/PushTrackingCategoriesConnection'
        data:
          $ref: '#/components/schemas/PushTrackingCategoriesV1'
      required:
        - connection
        - data
    PushTrackingCategoriesResponseV1Dto:
      type: object
      properties:
        pushCommunicationId:
          type: string
          readOnly: true
          example: 60473b57f0cdd1683ca71f60
        requestedOn:
          type: string
          readOnly: true
          example: "2021-03-09T08:15:22.035Z"
          format: date-time
        status:
          type: string
          readOnly: true
          example: pending
          enum:
            - success
            - failed
            - pending
        businessName:
          type: string
          readOnly: true
          example: Railz
        serviceName:
          type: string
          readOnly: true
          example: quickbooks
          enum:
            - freshbooks
            - quickbooks
            - quickbooksDesktop
            - xero
            - oracleNetsuite
            - sageBusinessCloud
            - sageIntacct
            - dynamicsBusinessCentral
            - wave
            - zohoBooks
        data:
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/PushTrackingCategoriesV1'
      required:
        - pushCommunicationId
        - requestedOn
        - status
        - businessName
        - serviceName
        - data
    SubsidiaryRefResponse:
      type: object
      properties:
        id:
          type: string
          example: "1"
        name:
          type: string
          example: Railz Financial
    GetTrackingCategoryDataV2:
      type: object
      properties:
        id:
          type: string
          example: "123"
        name:
          type: string
          example: East Coast
        isEditable:
          type: boolean
          example: "true"
        parentRef:
          $ref: '#/components/schemas/ParentRef'
        status:
          type: string
          enum:
            - active
            - archived
            - unknown
          example: active
        sourceModifiedDate:
          format: date-time
          type: string
          example: "2021-03-10T11:26:06.619Z"
        hasChildren:
          type: boolean
          example: false
        type:
          type: string
          example: class
          enum:
            - class
            - department
            - location
            - unknown
        subsidiaryRefs:
          type: array
          items:
            $ref: '#/components/schemas/SubsidiaryRefResponse'
      required:
        - id
        - name
        - status
        - type
    GetTrackingCategoryResponseV2Dto:
      type: object
      properties:
        pagination:
          $ref: '#/components/schemas/PaginationMetaData'
        meta:
          $ref: '#/components/schemas/BasicReportMetaDataV2'
        data:
          type: array
          items:
            $ref: '#/components/schemas/GetTrackingCategoryDataV2'
      required:
        - pagination
        - meta
        - data
    SubsidiaryRefV2Dto:
      type: object
      properties:
        id:
          type: string
          example: "4"
        name:
          type: string
      required:
        - id
    PushTrackingCategoriesV2:
      type: object
      properties:
        name:
          type: string
          example: Region
          maxLength: 100
        id:
          type: string
          example: "1"
        parentRef:
          $ref: '#/components/schemas/ParentRefDtoV2'
        type:
          type: string
          example: class
          enum:
            - class
            - location
            - department
            - unknown
        isEditable:
          type: boolean
          example: "true"
        hasChildren:
          type: boolean
          example: false
        status:
          type: string
          example: active
          enum:
            - active
            - inactive
            - unknown
        subsidiaryRefs:
          type: array
          items:
            $ref: '#/components/schemas/SubsidiaryRefV2Dto'
        passThrough:
          type: object
          example:
            CustomField:
              - DefinitionId: "1"
                StringValue: my custom value
                Name: Field One
      required:
        - name
    PushTrackingCategoriesV2Dto:
      type: object
      properties:
        connectionUuid:
          type: string
          description: Unique connection identifier.
          example: CON-396d5daa-26b2-4979-89b6-cafb2c298155
        data:
          $ref: '#/components/schemas/PushTrackingCategoriesV2'
      required:
        - connectionUuid
        - data
    PushTrackingCategoriesResponseV2Dto:
      type: object
      properties:
        pushCommunicationId:
          type: string
          readOnly: true
          example: 60473b57f0cdd1683ca71f60
        requestedOn:
          type: string
          readOnly: true
          example: "2021-03-09T08:15:22.035Z"
          format: date-time
        status:
          type: string
          readOnly: true
          example: pending
          enum:
            - success
            - failed
            - pending
        businessName:
          type: string
          readOnly: true
          example: Railz
        serviceName:
          type: string
          readOnly: true
          example: quickbooks
          enum:
            - freshbooks
            - quickbooks
            - quickbooksDesktop
            - xero
            - oracleNetsuite
            - sageBusinessCloud
            - sageIntacct
            - dynamicsBusinessCentral
            - wave
            - zohoBooks
        data:
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/PushTrackingCategoriesV2'
      required:
        - pushCommunicationId
        - requestedOn
        - status
        - businessName
        - serviceName
        - data
    TrialBalancesDataV1:
      type: object
      properties:
        section:
          type: string
          example: Expenses
          enum:
            - Income
            - Expenses
            - Assets
            - Liabilities
            - Equity
        subSection:
          type: string
          example: Operating Expenses
          enum:
            - Income
            - Cost of Goods Sold
            - Operating Expenses
            - Other Income
            - Other Expenses
            - Uncategorized Expenses
            - Uncategorized Income
            - Expenses
            - Current Assets
            - Non-Current Assets
            - Current Liabilities
            - Non-Current Liabilities
            - Equity
            - Other Assets
            - Other Liabilities
        group:
          type: string
          example: Expenses
        subGroup:
          type: string
          example: Utilities
        subAccountId:
          type: string
          example: 203rc
        depth:
          type: number
          example: 3
          description: The sub account depth, based on it's account hierarchy level. E.g. top parent account would have a depth of 1.
        account:
          type: string
          readOnly: true
          example: Utilities - Water
        subAccount:
          type: string
          example: Utilities
        subsidiaryRefs:
          type: array
          items:
            $ref: '#/components/schemas/SubsidiaryRef'
        credit:
          type: number
          example: 80
          format: float
        debit:
          type: number
          example: 0
          format: float
        accountId:
          type: string
          example: 2s4n2
        fullyQualifiedName:
          type: string
          example: 'Expenses : Transportation : Car Mileage'
          description: Full name of the account and parent account(s), colon separated.
        ytdCredit:
          type: number
          example: 80
          format: float
          deprecated: true
        ytdDebit:
          type: number
          example: 0
          format: float
          deprecated: true
        currencyRef:
          $ref: '#/components/schemas/CurrencyRef'
      required:
        - section
        - subSection
        - group
        - subGroup
        - depth
        - account
        - fullyQualifiedName
    TrialBalancesReport:
      type: object
      properties:
        meta:
          $ref: '#/components/schemas/FinancialStatementReportMetaData'
        data:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/TrialBalancesDataV1'
      required:
        - meta
        - data
    TrialBalancesResponseDto:
      type: object
      properties:
        pagination:
          $ref: '#/components/schemas/PaginationMetaData'
        count:
          type: number
          readOnly: true
          example: 1
          format: integer
          deprecated: true
        reports:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/TrialBalancesReport'
      required:
        - pagination
        - count
        - reports
    TrialBalancesDataV2:
      type: object
      properties:
        section:
          type: string
          example: Expenses
          enum:
            - Income
            - Expenses
            - Assets
            - Liabilities
            - Equity
        subSection:
          type: string
          example: Operating Expenses
          enum:
            - Income
            - Cost of Goods Sold
            - Operating Expenses
            - Other Income
            - Other Expenses
            - Uncategorized Expenses
            - Uncategorized Income
            - Expenses
            - Current Assets
            - Non-Current Assets
            - Current Liabilities
            - Non-Current Liabilities
            - Equity
            - Other Assets
            - Other Liabilities
        group:
          type: string
          example: Expenses
        subGroup:
          type: string
          example: Utilities
        subAccountId:
          type: string
          example: 203rc
        depth:
          type: number
          example: 3
          description: The sub account depth, based on it's account hierarchy level. E.g. top parent account would have a depth of 1.
        account:
          type: string
          readOnly: true
          example: Utilities - Water
        subAccount:
          type: string
          example: Utilities
        subsidiaryRefs:
          type: array
          items:
            $ref: '#/components/schemas/SubsidiaryRef'
        credit:
          type: number
          example: 80
          format: float
        debit:
          type: number
          example: 0
          format: float
        accountId:
          type: string
          example: 2s4n2
        fullyQualifiedName:
          type: string
          example: 'Expenses : Transportation : Car Mileage'
        currency:
          type: string
          example: USD
        classification:
          type: string
          example: Asset
        type:
          type: string
          example: Fixed Asset
        subType:
          type: string
          example: Fixed Asset
        ytdCredit:
          type: number
          example: 80
          format: float
        ytdDebit:
          type: number
          example: 80
          format: float
      required:
        - section
        - subSection
        - group
        - subGroup
        - depth
        - account
        - accountId
    TrialBalancesReportV2:
      type: object
      properties:
        meta:
          $ref: '#/components/schemas/FinancialStatementReportMetaDataV2'
        data:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/TrialBalancesDataV2'
      required:
        - meta
        - data
    TrialBalancesResponseV2Dto:
      type: object
      properties:
        pagination:
          $ref: '#/components/schemas/PaginationMetaData'
        reports:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/TrialBalancesReportV2'
      required:
        - pagination
        - reports
    GetVendorData:
      type: object
      properties:
        id:
          type: string
          example: "1"
        vendorName:
          type: string
          example: ACME Inc.
        contactName:
          type: string
          example: Jane Smith
        emailAddress:
          type: string
          example: email@acme.com
        website:
          type: string
          example: www.acme.com
        phone:
          type: string
          example: "8889990000"
        taxNumber:
          type: string
          example: "987654321"
        balance:
          type: number
          example: 0
          format: float
        status:
          type: string
          enum:
            - unknown
            - active
            - archived
        subsidiaryRefs:
          type: array
          items:
            $ref: '#/components/schemas/SubsidiaryRef'
        sourceModifiedDate:
          type: string
          example: "2021-03-09T08:49:36.035Z"
        parentRef:
          $ref: '#/components/schemas/ParentRef'
        defaultCurrency:
          $ref: '#/components/schemas/CurrencyRef'
        addresses:
          type: array
          items:
            $ref: '#/components/schemas/Address'
        contacts:
          type: array
          items:
            $ref: '#/components/schemas/Contact'
      required:
        - id
        - status
    GetVendorResponseDto:
      type: object
      properties:
        pagination:
          $ref: '#/components/schemas/PaginationMetaData'
        count:
          type: number
          readOnly: true
          example: 1
          format: integer
          deprecated: true
        meta:
          $ref: '#/components/schemas/ListReportMetaData'
        data:
          type: array
          items:
            $ref: '#/components/schemas/GetVendorData'
      required:
        - pagination
        - count
        - meta
        - data
    PushVendorV1:
      type: object
      properties:
        contactFirstName:
          type: string
          maxLength: 100
          example: Jane
        contactLastName:
          type: string
          maxLength: 100
          example: Smith
        emailAddress:
          type: string
          maxLength: 100
          example: email@acme.com
        phone:
          type: string
          maxLength: 30
          example: "8889990000"
        website:
          type: string
          maxLength: 100
          format: uri
          example: www.acme.com
        isPerson:
          type: boolean
        vendorName:
          type: string
          maxLength: 500
          example: ACME Inc.
        addresses:
          type: array
          items:
            $ref: '#/components/schemas/Addresses'
        defaultCurrency:
          type: string
          example: CAD
        subsidiaryRefs:
          example:
            - "1"
            - "3"
          type: array
          items:
            type: string
      required:
        - vendorName
    PushVendorV1Dto:
      type: object
      properties:
        connection:
          $ref: '#/components/schemas/PushConnection'
        data:
          $ref: '#/components/schemas/PushVendorV1'
      required:
        - connection
        - data
    PushVendorV1ResponseDto:
      type: object
      properties:
        pushCommunicationId:
          type: string
          readOnly: true
          example: 60473b57f0cdd1683ca71f60
        requestedOn:
          type: string
          readOnly: true
          example: "2021-03-09T08:15:22.035Z"
          format: date-time
        status:
          type: string
          readOnly: true
          example: pending
          enum:
            - success
            - failed
            - pending
        businessName:
          type: string
          readOnly: true
          example: Railz
        serviceName:
          type: string
          readOnly: true
          example: quickbooks
          enum:
            - freshbooks
            - quickbooks
            - quickbooksDesktop
            - xero
            - oracleNetsuite
            - sageBusinessCloud
            - sageIntacct
            - dynamicsBusinessCentral
            - wave
            - zohoBooks
        data:
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/PushVendorV1'
      required:
        - pushCommunicationId
        - requestedOn
        - status
        - businessName
        - serviceName
        - data
    PushUpdateVendorConnection:
      type: object
      properties:
        businessName:
          type: string
          example: Railz
          description: Unique business name identifier.
        serviceName:
          type: string
          example: quickbooks
          description: Name of accounting platform service.
          enum:
            - quickbooks
            - xero
            - freshbooks
            - dynamicsBusinessCentral
            - oracleNetsuite
            - sageIntacct
            - sageBusinessCloud
      required:
        - businessName
        - serviceName
    PutVendorV1:
      type: object
      properties:
        contactFirstName:
          type: string
          maxLength: 100
          example: Jane
        contactLastName:
          type: string
          maxLength: 100
          example: Smith
        emailAddress:
          type: string
          maxLength: 100
          example: email@acme.com
        phone:
          type: string
          maxLength: 30
          example: "8889990000"
        website:
          type: string
          maxLength: 100
          format: uri
          example: www.acme.com
        isPerson:
          type: boolean
        vendorName:
          type: string
          maxLength: 500
          example: ACME Inc.
        addresses:
          type: array
          items:
            $ref: '#/components/schemas/Addresses'
        defaultCurrency:
          type: string
          example: CAD
        subsidiaryRefs:
          example:
            - "1"
            - "3"
          type: array
          items:
            type: string
    PushUpdateVendorV1Dto:
      type: object
      properties:
        connection:
          $ref: '#/components/schemas/PushUpdateVendorConnection'
        data:
          $ref: '#/components/schemas/PutVendorV1'
      required:
        - connection
        - data
    PutVendorV1ResponseDto:
      type: object
      properties:
        pushCommunicationId:
          type: string
          readOnly: true
          example: 60473b57f0cdd1683ca71f60
        requestedOn:
          type: string
          readOnly: true
          example: "2021-03-09T08:15:22.035Z"
          format: date-time
        status:
          type: string
          readOnly: true
          example: pending
          enum:
            - success
            - failed
            - pending
        businessName:
          type: string
          readOnly: true
          example: Railz
        serviceName:
          type: string
          readOnly: true
          example: quickbooks
          enum:
            - freshbooks
            - quickbooks
            - quickbooksDesktop
            - xero
            - oracleNetsuite
            - sageBusinessCloud
            - sageIntacct
            - dynamicsBusinessCentral
            - wave
            - zohoBooks
        data:
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/PutVendorV1'
      required:
        - pushCommunicationId
        - requestedOn
        - status
        - businessName
        - serviceName
        - data
    GetVendorDataV2:
      type: object
      properties:
        id:
          type: string
          example: "1"
        vendorName:
          type: string
          example: ACME Inc.
        contactName:
          type: string
          example: Jane Smith
        emailAddress:
          type: string
          example: email@acme.com
        website:
          type: string
          example: www.acme.com
        phone:
          type: string
          example: "8889990000"
        taxNumber:
          type: string
          example: "987654321"
        balance:
          type: number
          example: 0
          format: float
        status:
          type: string
          enum:
            - unknown
            - active
            - archived
        subsidiaryRefs:
          type: array
          items:
            $ref: '#/components/schemas/SubsidiaryRef'
        sourceModifiedDate:
          type: string
          example: "2021-03-09T08:49:36.035Z"
        parentRef:
          $ref: '#/components/schemas/ParentRef'
        contactFirstName:
          type: string
          example: Jane
        contactLastName:
          type: string
          example: Smith
        isPerson:
          type: boolean
          example: false
        currency:
          type: string
          example: USD
        billingAddress:
          $ref: '#/components/schemas/BillingAddress'
        shippingAddress:
          $ref: '#/components/schemas/ShippingAddress'
        contacts:
          type: array
          items:
            $ref: '#/components/schemas/CustomerVendorContactV2'
        paymentMethodRef:
          $ref: '#/components/schemas/PaymentMethodRefResponse'
      required:
        - id
        - status
    GetVendorResponseV2Dto:
      type: object
      properties:
        pagination:
          $ref: '#/components/schemas/PaginationMetaData'
        meta:
          $ref: '#/components/schemas/ListReportMetaDataV2'
        data:
          type: array
          items:
            $ref: '#/components/schemas/GetVendorDataV2'
      required:
        - pagination
        - meta
        - data
    PushVendorV2:
      type: object
      properties:
        contactFirstName:
          type: string
          maxLength: 100
          example: Jane
        contactLastName:
          type: string
          maxLength: 100
          example: Smith
        emailAddress:
          type: string
          maxLength: 100
          example: email@acme.com
        phone:
          type: string
          maxLength: 30
          example: "8889990000"
        website:
          type: string
          maxLength: 100
          format: uri
          example: www.acme.com
        isPerson:
          type: boolean
        vendorName:
          type: string
          maxLength: 500
          example: ACME Inc.
        contactName:
          type: string
          maxLength: 500
          example: Jane Smith
        parentRef:
          $ref: '#/components/schemas/ParentRefDto'
        currency:
          type: string
          example: CAD
        paymentMethodRef:
          $ref: '#/components/schemas/PaymentMethodRefDto'
        billingAddress:
          $ref: '#/components/schemas/BillingAddressDto'
        shippingAddress:
          $ref: '#/components/schemas/ShippingAddressDto'
        subsidiaryRefs:
          type: array
          items:
            $ref: '#/components/schemas/SubsidiaryRefDto'
        contacts:
          type: array
          items:
            $ref: '#/components/schemas/PushCustomerVendorContactV2'
        taxNumber:
          type: string
          example: "987654321"
        passThrough:
          type: object
          example:
            CustomField:
              - DefinitionId: "1"
                StringValue: my custom value
                Name: Field One
    PushVendorV2Dto:
      type: object
      properties:
        connectionUuid:
          type: string
          description: Unique connection identifier.
          example: CON-396d5daa-26b2-4979-89b6-cafb2c298155
        data:
          $ref: '#/components/schemas/PushVendorV2'
      required:
        - connectionUuid
        - data
    PushVendorV2ResponseDto:
      type: object
      properties:
        connectionUuid:
          type: string
          readOnly: true
          example: CON-396d5daa-26b2-4979-89b6-cafb2c298155
        businessName:
          type: string
          readOnly: true
          example: Railz
        serviceName:
          type: string
          readOnly: true
          example: xero
          enum:
            - freshbooks
            - quickbooks
            - quickbooksDesktop
            - xero
            - oracleNetsuite
            - sageBusinessCloud
            - sageIntacct
            - dynamicsBusinessCentral
            - wave
            - zohoBooks
        pushCommunicationId:
          type: string
          readOnly: true
          example: 60473b57f0cdd1683ca71f60
        requestedOn:
          type: string
          readOnly: true
          example: "2021-03-09T08:15:22.035Z"
          format: date-time
        status:
          type: string
          readOnly: true
          example: pending
          enum:
            - success
            - failed
            - pending
        data:
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/PushVendorV2'
      required:
        - connectionUuid
        - businessName
        - serviceName
        - pushCommunicationId
        - requestedOn
        - status
        - data
    BatchPushVendorV2Dto:
      type: object
      properties:
        connectionUuid:
          type: string
          description: Unique connection identifier.
          example: CON-396d5daa-26b2-4979-89b6-cafb2c298155
        batch:
          type: array
          items:
            $ref: '#/components/schemas/PushVendorV2'
      required:
        - connectionUuid
        - batch
    PushVendorIndividualResponseV2Dto:
      type: object
      properties:
        pushCommunicationId:
          type: string
          readOnly: true
          example: 60473b57f0cdd1683ca71f60
        requestedOn:
          type: string
          readOnly: true
          example: "2021-03-09T08:15:22.035Z"
          format: date-time
        status:
          type: string
          readOnly: true
          example: pending
          enum:
            - success
            - failed
            - pending
        data:
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/PushVendorV2'
      required:
        - pushCommunicationId
        - requestedOn
        - status
        - data
    BatchPushVendorResponseV2Dto:
      type: object
      properties:
        connectionUuid:
          type: string
          readOnly: true
          example: CON-396d5daa-26b2-4979-89b6-cafb2c298155
        businessName:
          type: string
          readOnly: true
          example: Railz
        serviceName:
          type: string
          readOnly: true
          example: xero
          enum:
            - freshbooks
            - quickbooks
            - quickbooksDesktop
            - xero
            - oracleNetsuite
            - sageBusinessCloud
            - sageIntacct
            - dynamicsBusinessCentral
            - wave
            - zohoBooks
        batchId:
          type: string
          readOnly: true
          example: 60473b57f0cdd1683ca71f60
        batch:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/PushVendorIndividualResponseV2Dto'
      required:
        - connectionUuid
        - businessName
        - serviceName
        - batchId
        - batch
    BatchPutVendor:
      type: object
      properties:
        contactFirstName:
          type: string
          maxLength: 100
          example: Jane
        contactLastName:
          type: string
          maxLength: 100
          example: Smith
        emailAddress:
          type: string
          maxLength: 100
          example: email@acme.com
        phone:
          type: string
          maxLength: 30
          example: "8889990000"
        website:
          type: string
          maxLength: 100
          format: uri
          example: www.acme.com
        isPerson:
          type: boolean
        vendorName:
          type: string
          maxLength: 500
          example: ACME Inc.
        contactName:
          type: string
          example: Jane Smith
        parentRef:
          $ref: '#/components/schemas/ParentRefDto'
        currency:
          type: string
          example: CAD
        paymentMethodRef:
          $ref: '#/components/schemas/PaymentMethodRefDto'
        billingAddress:
          $ref: '#/components/schemas/BillingAddressDto'
        contacts:
          type: array
          items:
            $ref: '#/components/schemas/PushCustomerVendorContactV2'
        taxNumber:
          type: string
          example: "987654321"
        shippingAddress:
          $ref: '#/components/schemas/ShippingAddressDto'
        subsidiaryRefs:
          type: array
          items:
            $ref: '#/components/schemas/SubsidiaryRefDto'
        passThrough:
          type: object
          example:
            CustomField:
              - DefinitionId: "1"
                StringValue: my custom value
                Name: Field One
        vendorRef:
          type: string
          description: id of vendor to be updated
      required:
        - vendorRef
    BatchUpdateVendorV2Dto:
      type: object
      properties:
        connectionUuid:
          type: string
          description: Unique connection identifier.
          example: CON-396d5daa-26b2-4979-89b6-cafb2c298155
        batch:
          type: array
          items:
            $ref: '#/components/schemas/BatchPutVendor'
      required:
        - connectionUuid
        - batch
    UpdateVendorIndividualResponseV2Dto:
      type: object
      properties:
        pushCommunicationId:
          type: string
          readOnly: true
          example: 60473b57f0cdd1683ca71f60
        requestedOn:
          type: string
          readOnly: true
          example: "2021-03-09T08:15:22.035Z"
          format: date-time
        status:
          type: string
          readOnly: true
          example: pending
          enum:
            - success
            - failed
            - pending
        data:
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/BatchPutVendor'
      required:
        - pushCommunicationId
        - requestedOn
        - status
        - data
    BatchUpdateVendorResponseV2Dto:
      type: object
      properties:
        connectionUuid:
          type: string
          readOnly: true
          example: CON-396d5daa-26b2-4979-89b6-cafb2c298155
        businessName:
          type: string
          readOnly: true
          example: Railz
        serviceName:
          type: string
          readOnly: true
          example: xero
          enum:
            - freshbooks
            - quickbooks
            - quickbooksDesktop
            - xero
            - oracleNetsuite
            - sageBusinessCloud
            - sageIntacct
            - dynamicsBusinessCentral
            - wave
            - zohoBooks
        batchId:
          type: string
          readOnly: true
          example: 60473b57f0cdd1683ca71f60
        batch:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/UpdateVendorIndividualResponseV2Dto'
      required:
        - connectionUuid
        - businessName
        - serviceName
        - batchId
        - batch
    PutVendorV2:
      type: object
      properties:
        contactFirstName:
          type: string
          maxLength: 100
          example: Jane
        contactLastName:
          type: string
          maxLength: 100
          example: Smith
        emailAddress:
          type: string
          maxLength: 100
          example: email@acme.com
        phone:
          type: string
          maxLength: 30
          example: "8889990000"
        website:
          type: string
          maxLength: 100
          format: uri
          example: www.acme.com
        isPerson:
          type: boolean
        vendorName:
          type: string
          maxLength: 500
          example: ACME Inc.
        contactName:
          type: string
          example: Jane Smith
        parentRef:
          $ref: '#/components/schemas/ParentRefDto'
        currency:
          type: string
          example: CAD
        paymentMethodRef:
          $ref: '#/components/schemas/PaymentMethodRefDto'
        billingAddress:
          $ref: '#/components/schemas/BillingAddressDto'
        contacts:
          type: array
          items:
            $ref: '#/components/schemas/PushCustomerVendorContactV2'
        taxNumber:
          type: string
          example: "987654321"
        shippingAddress:
          $ref: '#/components/schemas/ShippingAddressDto'
        subsidiaryRefs:
          type: array
          items:
            $ref: '#/components/schemas/SubsidiaryRefDto'
        passThrough:
          type: object
          example:
            CustomField:
              - DefinitionId: "1"
                StringValue: my custom value
                Name: Field One
    PushUpdateVendorV2Dto:
      type: object
      properties:
        connectionUuid:
          type: string
          description: Unique connection identifier.
          example: CON-396d5daa-26b2-4979-89b6-cafb2c298155
        data:
          $ref: '#/components/schemas/PutVendorV2'
      required:
        - connectionUuid
        - data
    PutVendorV2ResponseDto:
      type: object
      properties:
        connectionUuid:
          type: string
          readOnly: true
          example: CON-396d5daa-26b2-4979-89b6-cafb2c298155
        businessName:
          type: string
          readOnly: true
          example: Railz
        serviceName:
          type: string
          readOnly: true
          example: xero
          enum:
            - freshbooks
            - quickbooks
            - quickbooksDesktop
            - xero
            - oracleNetsuite
            - sageBusinessCloud
            - sageIntacct
            - dynamicsBusinessCentral
            - wave
            - zohoBooks
        pushCommunicationId:
          type: string
          readOnly: true
          example: 60473b57f0cdd1683ca71f60
        requestedOn:
          type: string
          readOnly: true
          example: "2021-03-09T08:15:22.035Z"
          format: date-time
        status:
          type: string
          readOnly: true
          example: pending
          enum:
            - success
            - failed
            - pending
        data:
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/PutVendorV2'
      required:
        - connectionUuid
        - businessName
        - serviceName
        - pushCommunicationId
        - requestedOn
        - status
        - data
    GetVendorBankAccountDataV2:
      type: object
      properties:
        id:
          type: string
          example: lPNjeW1nR6CDn5okmGQ6hEpMo4lLNoSrzqDje
        name:
          type: string
          example: Business Bank Account
        type:
          type: string
          enum:
            - checking
            - saving
            - creditCard
            - loan
            - investment
            - unknown
          example: checking
        accountNumber:
          type: string
          example: "11200"
        routingNumber:
          type: string
          example: "123456789"
        bankName:
          type: string
          example: TD Bank
        supportsAch:
          type: boolean
          example: true
        supportsWire:
          type: boolean
          example: true
        supportsCheck:
          type: boolean
          example: true
        address:
          $ref: '#/components/schemas/BaseAddress'
        contactName:
          type: string
        vendorRef:
          $ref: '#/components/schemas/VendorRef'
        currency:
          type: string
          example: USD
        sourceModifiedDate:
          type: string
          example: "2021-03-09T08:49:36.035Z"
      required:
        - id
    GetVendorBankAccountResponseV2Dto:
      type: object
      properties:
        meta:
          $ref: '#/components/schemas/ListReportMetaDataV2'
        pagination:
          $ref: '#/components/schemas/PaginationMetaData'
        data:
          type: array
          items:
            $ref: '#/components/schemas/GetVendorBankAccountDataV2'
      required:
        - meta
        - pagination
        - data
    PushVendorBankAccount:
      type: object
      properties:
        name:
          type: string
          example: Business Bank Account
        type:
          type: string
          example: checking
        accountNumber:
          type: string
          example: "11200"
        routingNumber:
          type: string
          example: "123456789"
        bankName:
          type: string
          example: TD Bank
        supportsAch:
          type: boolean
          example: true
        supportsWire:
          type: boolean
          example: true
        supportsCheck:
          type: boolean
          example: true
        address:
          $ref: '#/components/schemas/PushBaseAddress'
        contactName:
          type: string
          maxLength: 500
          example: Jane Smith
        currency:
          type: string
          example: CAD
        vendorRef:
          $ref: '#/components/schemas/VendorRefDto'
      required:
        - vendorRef
    PushVendorBankAccountDto:
      type: object
      properties:
        connectionUuid:
          type: string
          description: Unique connection identifier.
          example: CON-396d5daa-26b2-4979-89b6-cafb2c298155
        data:
          $ref: '#/components/schemas/PushVendorBankAccount'
      required:
        - connectionUuid
        - data
    PushVendorBankAccountResponseDto:
      type: object
      properties:
        connectionUuid:
          type: string
          readOnly: true
          example: CON-396d5daa-26b2-4979-89b6-cafb2c298155
        businessName:
          type: string
          readOnly: true
          example: Railz
        serviceName:
          type: string
          readOnly: true
          example: xero
          enum:
            - freshbooks
            - quickbooks
            - quickbooksDesktop
            - xero
            - oracleNetsuite
            - sageBusinessCloud
            - sageIntacct
            - dynamicsBusinessCentral
            - wave
            - zohoBooks
        pushCommunicationId:
          type: string
          readOnly: true
          example: 60473b57f0cdd1683ca71f60
        requestedOn:
          type: string
          readOnly: true
          example: "2021-03-09T08:15:22.035Z"
          format: date-time
        status:
          type: string
          readOnly: true
          example: pending
          enum:
            - success
            - failed
            - pending
        data:
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/PushVendorBankAccount'
      required:
        - connectionUuid
        - businessName
        - serviceName
        - pushCommunicationId
        - requestedOn
        - status
        - data
    PutVendorBankAccount:
      type: object
      properties:
        name:
          type: string
          example: Business Bank Account
        type:
          type: string
          example: checking
        accountNumber:
          type: string
          example: "11200"
        routingNumber:
          type: string
          example: "123456789"
        bankName:
          type: string
          example: TD Bank
        supportsAch:
          type: boolean
          example: true
        supportsWire:
          type: boolean
          example: true
        supportsCheck:
          type: boolean
          example: true
        address:
          $ref: '#/components/schemas/PushBaseAddress'
        contactName:
          type: string
          maxLength: 500
          example: Jane Smith
        currency:
          type: string
          example: CAD
        vendorRef:
          $ref: '#/components/schemas/VendorRefDto'
    PutVendorBankAccountDto:
      type: object
      properties:
        connectionUuid:
          type: string
          description: Unique connection identifier.
          example: CON-396d5daa-26b2-4979-89b6-cafb2c298155
        data:
          $ref: '#/components/schemas/PutVendorBankAccount'
      required:
        - connectionUuid
        - data
    PutVendorBankAccountResponseDto:
      type: object
      properties:
        connectionUuid:
          type: string
          readOnly: true
          example: CON-396d5daa-26b2-4979-89b6-cafb2c298155
        businessName:
          type: string
          readOnly: true
          example: Railz
        serviceName:
          type: string
          readOnly: true
          example: xero
          enum:
            - freshbooks
            - quickbooks
            - quickbooksDesktop
            - xero
            - oracleNetsuite
            - sageBusinessCloud
            - sageIntacct
            - dynamicsBusinessCentral
            - wave
            - zohoBooks
        pushCommunicationId:
          type: string
          readOnly: true
          example: 60473b57f0cdd1683ca71f60
        requestedOn:
          type: string
          readOnly: true
          example: "2021-03-09T08:15:22.035Z"
          format: date-time
        status:
          type: string
          readOnly: true
          example: pending
          enum:
            - success
            - failed
            - pending
        data:
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/PutVendorBankAccount'
      required:
        - connectionUuid
        - businessName
        - serviceName
        - pushCommunicationId
        - requestedOn
        - status
        - data
    GetPaymentMethodData:
      type: object
      properties:
        id:
          type: string
          example: "1"
        name:
          type: string
          example: Harmonized sales tax
        type:
          type: string
          enum:
            - unknown
            - cash
            - check
            - creditCard
            - debitCard
            - bankTransfer
            - giftCard
            - other
          example: creditCard
        status:
          type: string
          enum:
            - active
            - archived
            - unknown
        sourceModifiedDate:
          format: date-time
          type: string
          example: "2021-03-10T11:26:06.619Z"
      required:
        - id
        - name
        - type
    GetPaymentMethodResponseV2Dto:
      type: object
      properties:
        pagination:
          $ref: '#/components/schemas/PaginationMetaData'
        count:
          type: number
          readOnly: true
          example: 1
          format: integer
        meta:
          $ref: '#/components/schemas/ListReportMetaDataV2'
        data:
          type: array
          items:
            $ref: '#/components/schemas/GetPaymentMethodData'
      required:
        - pagination
        - count
        - meta
        - data
    VendorRefDtoV2:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
    AccountRefV2Dto:
      type: object
      properties:
        id:
          type: string
          example: "200"
    ExpenseLineItem:
      type: object
      properties:
        accountRef:
          $ref: '#/components/schemas/AccountRef'
        description:
          type: string
          example: Services rendered.
        unitAmount:
          type: number
          example: 100.5
          format: float
        quantity:
          type: number
          example: 3
          format: integer
        taxRateRef:
          $ref: '#/components/schemas/TaxRateObjectRefResponse'
        taxAmount:
          type: number
          example: 20.5
          format: float
        amount:
          type: number
          example: 10.5
          format: float
        trackingCategoryRefs:
          type: array
          items:
            $ref: '#/components/schemas/TrackingCategoryResponse'
      required:
        - amount
    GetExpenseData:
      type: object
      properties:
        id:
          type: string
          example: "1"
        vendorRef:
          $ref: '#/components/schemas/VendorRefDtoV2'
        accountRef:
          $ref: '#/components/schemas/AccountRefV2Dto'
        currency:
          type: string
          example: USD
        totalAmount:
          type: number
          example: 100.13
          format: float
        currencyRate:
          type: number
          example: 1.13
          format: float
        postedDate:
          format: date-time
          type: string
          example: "2021-03-09T10:18:29.985Z"
        paymentMethod:
          type: string
          enum:
            - unknown
            - cash
            - check
            - creditCard
            - debitCard
            - bankTransfer
            - giftCard
            - other
          example: creditCard
        paymentMethodRef:
          $ref: '#/components/schemas/PaymentMethodRefResponse'
        memo:
          type: string
          example: Example expense memo.
        lines:
          type: array
          items:
            $ref: '#/components/schemas/ExpenseLineItem'
        sourceModifiedDate:
          format: date-time
          type: string
          example: "2021-03-10T11:26:06.619Z"
      required:
        - id
        - totalAmount
        - postedDate
    GetExpenseResponseV2Dto:
      type: object
      properties:
        pagination:
          $ref: '#/components/schemas/PaginationMetaData'
        meta:
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/BasicStartEndDateReportMetaDataV2'
        data:
          type: array
          items:
            $ref: '#/components/schemas/GetExpenseData'
      required:
        - pagination
        - meta
        - data
    ExpenseLineDto:
      type: object
      properties:
        accountRef:
          $ref: '#/components/schemas/AccountRefDto'
        taxRateRef:
          $ref: '#/components/schemas/TaxRateRefDto'
        trackingCategoryRefs:
          type: array
          items:
            $ref: '#/components/schemas/BillTrackingCategoryRefDto'
        description:
          type: string
          maxLength: 4000
          example: Services rendered.
        quantity:
          type: number
          format: float
          example: "4"
        unitAmount:
          type: number
          format: float
          example: "50.4"
        taxAmount:
          type: number
          format: float
          example: "50.4"
        amount:
          type: number
          format: float
          example: "50.4"
    PushExpense:
      type: object
      properties:
        passThrough:
          type: object
          example:
            CustomField:
              - DefinitionId: "1"
                StringValue: my custom value
                Name: Field One
        vendorRef:
          $ref: '#/components/schemas/VendorRefDto'
        accountRef:
          $ref: '#/components/schemas/AccountRefDto'
        currency:
          type: string
          example: CAD
        currencyRate:
          type: number
          example: "1.13"
        postedDate:
          type: string
          format: date
          example: "2021-03-29"
        paymentMethod:
          type: string
          enum:
            - unknown
            - cash
            - check
            - creditCard
            - debitCard
            - bankTransfer
            - giftCard
            - other
          example: creditCard
        paymentMethodRef:
          $ref: '#/components/schemas/PaymentMethodRefDto'
        memo:
          type: string
          maxLength: 4000
          example: Example memo.
        lines:
          type: array
          items:
            $ref: '#/components/schemas/ExpenseLineDto'
    PushExpenseDto:
      type: object
      properties:
        connectionUuid:
          type: string
          description: Unique connection identifier.
          example: CON-396d5daa-26b2-4979-89b6-cafb2c298155
        data:
          $ref: '#/components/schemas/PushExpense'
      required:
        - connectionUuid
        - data
    PushExpenseeResponseDto:
      type: object
      properties:
        connectionUuid:
          type: string
          readOnly: true
          example: CON-396d5daa-26b2-4979-89b6-cafb2c298155
        businessName:
          type: string
          readOnly: true
          example: Railz
        serviceName:
          type: string
          readOnly: true
          example: xero
          enum:
            - freshbooks
            - quickbooks
            - quickbooksDesktop
            - xero
            - oracleNetsuite
            - sageBusinessCloud
            - sageIntacct
            - dynamicsBusinessCentral
            - wave
            - zohoBooks
        pushCommunicationId:
          type: string
          readOnly: true
          example: 60473b57f0cdd1683ca71f60
        requestedOn:
          type: string
          readOnly: true
          example: "2021-03-09T08:15:22.035Z"
          format: date-time
        status:
          type: string
          readOnly: true
          example: pending
          enum:
            - success
            - failed
            - pending
        data:
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/PushExpense'
      required:
        - connectionUuid
        - businessName
        - serviceName
        - pushCommunicationId
        - requestedOn
        - status
        - data
    BankAccountRef:
      type: object
      properties:
        id:
          type: string
          example: "200"
    ContactPerson:
      type: object
      properties:
        name:
          type: string
          example: John Smith
        email:
          type: string
          example: jsmith@company.com
    GetContactData:
      type: object
      properties:
        id:
          type: string
          example: "1"
        contactName:
          type: string
          example: Jane Smith
        contactFirstName:
          type: string
          example: Jane
        contactLastName:
          type: string
          example: Smith
        emailAddress:
          type: string
          example: email@acme.com
        bankAccountRef:
          $ref: '#/components/schemas/BankAccountRef'
        website:
          type: string
          example: www.acme.com
        currency:
          type: string
          example: USD
        phone:
          type: string
          example: "8889990000"
        billingAddress:
          $ref: '#/components/schemas/BillingAddress'
        shippingAddress:
          $ref: '#/components/schemas/ShippingAddress'
        contacts:
          type: array
          items:
            $ref: '#/components/schemas/ContactPerson'
        taxNumber:
          type: string
          example: "987654321"
        status:
          type: string
          enum:
            - unknown
            - active
            - archived
        balance:
          type: number
          example: 0
          format: float
        contactType:
          type: string
          enum:
            - unknown
            - customer
            - vendor
          example: customer
        sourceModifiedDate:
          type: string
          example: "2021-03-09T08:49:36.035Z"
      required:
        - id
    GetContactResponseDto:
      type: object
      properties:
        pagination:
          $ref: '#/components/schemas/PaginationMetaData'
        meta:
          $ref: '#/components/schemas/ListReportMetaDataV2'
        data:
          type: array
          items:
            $ref: '#/components/schemas/GetContactData'
      required:
        - pagination
        - meta
        - data
    Weight:
      type: object
      properties:
        value:
          type: number
          example: 1.25
          format: float
        unitOfMeasure:
          type: string
          enum:
            - g
            - kg
            - lb
            - oz
          example: lb
    ProductLocationRef:
      type: object
      properties:
        id:
          type: string
          example: "12323"
        name:
          type: string
    QuantityPerLocation:
      type: object
      properties:
        quantity:
          type: number
          format: float
        locationRef:
          $ref: '#/components/schemas/ProductLocationRef'
    Inventory:
      type: object
      properties:
        totalQuantity:
          type: number
          example: 10
          format: float
        quantityPerLocation:
          type: array
          items:
            $ref: '#/components/schemas/QuantityPerLocation'
    ProductVariants:
      type: object
      properties:
        id:
          type: string
          example: "808950810"
        name:
          type: string
          example: Pink
        isTaxEnabled:
          type: boolean
          example: true
        sku:
          type: string
          example: IPOD2008PINK
        barcode:
          type: string
          example: 1234_pink
        weight:
          $ref: '#/components/schemas/Weight'
        unitPrice:
          type: number
          example: 199
          format: float
        inventory:
          $ref: '#/components/schemas/Inventory'
        isShippingRequired:
          type: boolean
          example: true
        createdDate:
          format: date-time
          type: string
          example: "2022-03-11T11:29:03-05:00"
      required:
        - id
        - name
        - unitPrice
        - createdDate
    GetProductData:
      type: object
      properties:
        id:
          type: string
          example: "632910392"
        type:
          type: string
          example: Speakers
        name:
          type: string
          example: Amazon Echo
        description:
          type: string
          example: Sample product description
        createdDate:
          format: date-time
          type: string
          example: "2021-03-09T10:18:29.985Z"
        sourceModifiedDate:
          format: date-time
          type: string
          example: "2021-03-09T10:18:29.985Z"
        status:
          type: string
          enum:
            - active
            - archived
            - draft
          example: active
        isGiftCard:
          type: boolean
          example: true
        productVariants:
          type: array
          items:
            $ref: '#/components/schemas/ProductVariants'
      required:
        - id
        - name
        - createdDate
        - sourceModifiedDate
        - status
    GetProductResponseDto:
      type: object
      properties:
        pagination:
          $ref: '#/components/schemas/PaginationMetaData'
        data:
          type: array
          items:
            $ref: '#/components/schemas/GetProductData'
        count:
          type: number
          readOnly: true
          example: 1
          format: integer
        meta:
          $ref: '#/components/schemas/BasicStartEndDateReportMetaData'
      required:
        - pagination
        - data
        - count
        - meta
    GetProductResponseV2Dto:
      type: object
      properties:
        pagination:
          $ref: '#/components/schemas/PaginationMetaData'
        data:
          type: array
          items:
            $ref: '#/components/schemas/GetProductData'
        count:
          type: number
          readOnly: true
          example: 1
          format: integer
          deprecated: true
        meta:
          $ref: '#/components/schemas/BasicStartEndDateReportMetaDataV2'
      required:
        - pagination
        - data
        - count
        - meta
    OrderRef:
      type: object
      properties:
        id:
          type: string
          example: "625362839"
        orderNumber:
          type: string
          example: "1001"
      required:
        - id
    CommerceCurrencyRef:
      type: object
      properties:
        id:
          type: string
        symbol:
          type: string
          example: CAD
        name:
          type: string
          example: Canadian Dollar
      required:
        - symbol
        - name
    GetDisputeData:
      type: object
      properties:
        id:
          type: string
          example: "1052608616"
        totalAmount:
          type: number
          example: 100
          format: float
        status:
          type: string
          example: processing
          enum:
            - evidenceRequired
            - inquiryProcessing
            - processing
            - inquiryClosed
            - chargeRefunded
            - inquiryAccepted
            - inquiryWon
            - inquiryLost
            - unknown
            - other
        reason:
          type: string
          example: subscriptionCanceled
          enum:
            - bankNotProcessed
            - creditNotProcessed
            - debitNotAuthorized
            - duplicate
            - fraudulent
            - general
            - incorrectAccountDetails
            - insufficientFunds
            - productNotReceived
            - productUnacceptable
            - subscriptionCanceled
            - unrecognized
            - unknown
            - other
        dueDate:
          format: date-time
          type: string
          example: 2022-03-11T11:29:03-05:00"
        createdDate:
          format: date-time
          type: string
          example: 2022-03-11T11:29:03-05:00"
        sourceModifiedDate:
          format: date-time
          type: string
          example: 2022-03-11T11:29:03-05:00"
        orderRef:
          $ref: '#/components/schemas/OrderRef'
        currencyRef:
          $ref: '#/components/schemas/CommerceCurrencyRef'
      required:
        - id
        - totalAmount
        - status
        - reason
        - dueDate
        - createdDate
    GetDisputeResponseDto:
      type: object
      properties:
        count:
          type: number
          readOnly: true
          example: 1
          format: integer
        pagination:
          $ref: '#/components/schemas/PaginationMetaData'
        data:
          type: array
          items:
            $ref: '#/components/schemas/GetDisputeData'
        meta:
          $ref: '#/components/schemas/BasicStartEndDateReportMetaData'
      required:
        - count
        - pagination
        - data
        - meta
    GetDisputeResponseV2Dto:
      type: object
      properties:
        count:
          type: number
          readOnly: true
          example: 1
          format: integer
          deprecated: true
        pagination:
          $ref: '#/components/schemas/PaginationMetaData'
        data:
          type: array
          items:
            $ref: '#/components/schemas/GetDisputeData'
        meta:
          $ref: '#/components/schemas/BasicStartEndDateReportMetaDataV2'
      required:
        - count
        - pagination
        - data
        - meta
    FulfillmentRefs:
      type: object
      properties:
        carrier:
          type: string
          example: USPS
        trackingNumber:
          type: string
          example: 1Z2345
        service:
          type: string
          example: manual
        trackingUrl:
          type: string
          example: https://tools.usps.com/go/TrackConfirmAction_input?qtc_tLabels1=1Z2345
    Lines:
      type: object
      properties:
        id:
          type: string
          example: "466157049"
        productId:
          type: string
          example: "632910392"
        variantId:
          type: string
          example: "39072856"
        name:
          type: string
          example: Custom Engraving Front
        quantity:
          type: number
          example: 3
        totalPrice:
          type: number
          example: 199
          format: float
        unitPrice:
          type: number
          example: 300
          format: float
        sku:
          type: string
          example: IPOD2008GREEN
      required:
        - id
        - variantId
        - quantity
        - totalPrice
    RefundRefs:
      type: object
      properties:
        id:
          type: string
          example: 2
        totalAmount:
          type: number
          example: 2
          format: float
      required:
        - id
        - totalAmount
    OrderTransactionSourceRefs:
      type: object
      properties:
        id:
          type: string
          example: "699519475"
        type:
          type: string
          example: payment
          enum:
            - failedPayout
            - payment
            - paymentFee
            - paymentFeeRefund
            - payout
            - refund
            - transfer
            - dispute
            - order
            - other
            - unknown
        totalAmount:
          type: number
          example: "50.00"
          format: float
      required:
        - id
        - totalAmount
    OrderCustomerRef:
      type: object
      properties:
        id:
          type: string
          example: "207119551"
        customerName:
          type: string
          example: Amelia Earhart
        email:
          type: string
          example: Amelia.Earhart@example.com
      required:
        - id
    GetOrderData:
      type: object
      properties:
        id:
          type: string
          example: "450789469"
        orderNumber:
          type: string
          example: "1001"
        fulfillmentRefs:
          type: array
          items:
            $ref: '#/components/schemas/FulfillmentRefs'
        lines:
          type: array
          items:
            $ref: '#/components/schemas/Lines'
        refundRefs:
          type: array
          items:
            $ref: '#/components/schemas/RefundRefs'
        transactionSourceRefs:
          type: array
          items:
            $ref: '#/components/schemas/OrderTransactionSourceRefs'
        shippingAddress:
          $ref: '#/components/schemas/ShippingAddress'
        billingAddress:
          $ref: '#/components/schemas/BillingAddress'
        customerRef:
          $ref: '#/components/schemas/OrderCustomerRef'
        currencyRef:
          $ref: '#/components/schemas/CommerceCurrencyRef'
        totalShippingAmount:
          type: number
          example: 30
          format: float
        totalGratuityAmount:
          type: number
          example: 4.87
          format: float
        totalDiscountAmount:
          type: number
          example: 0
          format: float
        totalTaxAmount:
          type: number
          example: 11.94
          format: float
        totalAmount:
          type: number
          example: 598.94
          format: float
        createdDate:
          format: date-time
          type: string
          example: "2022-03-11T11:29:03-05:00"
        sourceModifiedDate:
          format: date-time
          type: string
          example: "2022-03-11T11:29:03-05:00"
        status:
          type: string
          enum:
            - open
            - closed
            - cancelled
            - unknown
            - draft
        paymentStatus:
          type: string
          enum:
            - pending
            - approved
            - paid
            - failed
            - cancelled
            - refunded
            - unknown
        fulfillmentStatus:
          type: string
          enum:
            - fulfilled
            - partial
            - unfulfilled
            - cancelled
            - unknown
      required:
        - id
        - totalTaxAmount
        - totalAmount
        - createdDate
        - sourceModifiedDate
        - status
        - paymentStatus
        - fulfillmentStatus
    GetOrderResponseDto:
      type: object
      properties:
        pagination:
          $ref: '#/components/schemas/PaginationMetaData'
        data:
          type: array
          items:
            $ref: '#/components/schemas/GetOrderData'
        count:
          type: number
          readOnly: true
          example: 1
          format: integer
        meta:
          $ref: '#/components/schemas/BasicStartEndDateReportMetaData'
      required:
        - pagination
        - data
        - count
        - meta
    GetOrderResponseV2Dto:
      type: object
      properties:
        pagination:
          $ref: '#/components/schemas/PaginationMetaData'
        data:
          type: array
          items:
            $ref: '#/components/schemas/GetOrderData'
        count:
          type: number
          readOnly: true
          example: 1
          format: integer
          deprecated: true
        meta:
          $ref: '#/components/schemas/BasicStartEndDateReportMetaDataV2'
      required:
        - pagination
        - data
        - count
        - meta
    TransactionSourceRefs:
      type: object
      properties:
        id:
          type: string
          example: "1006917261"
        type:
          type: string
          example: payment
          enum:
            - failedPayout
            - payment
            - paymentFee
            - paymentFeeRefund
            - payout
            - refund
            - transfer
            - dispute
            - order
            - other
            - unknown
      required:
        - id
    GetTransactionData:
      type: object
      properties:
        id:
          type: string
          example: "699519475"
        orderId:
          type: string
          example: "217130470"
        paymentMethodType:
          type: string
          enum:
            - cash
            - card
            - cryptocurrency
            - bank
            - digital
            - storeCredit
            - paypal
            - prepaid
            - buyNowPayLater
            - other
            - unknown
          example: digital
        totalAmount:
          type: number
          example: -3.45
          format: float
        currencyRef:
          $ref: '#/components/schemas/CommerceCurrencyRef'
        transactionSourceRefs:
          type: array
          items:
            $ref: '#/components/schemas/TransactionSourceRefs'
        transactionType:
          type: string
          enum:
            - failedPayout
            - payment
            - paymentFee
            - paymentFeeRefund
            - payout
            - refund
            - transfer
            - dispute
            - order
            - other
            - unknown
          example: transfer
        createdDate:
          format: date-time
          type: string
          example: "2022-03-11T11:29:03-05:00"
        sourceModifiedDate:
          format: date-time
          type: string
          example: "2022-03-11T11:29:03-05:00"
        status:
          type: string
          enum:
            - success
            - failed
            - pending
            - cancelled
            - approved
            - scheduled
            - other
            - unknown
          example: pending
      required:
        - id
        - totalAmount
        - transactionType
        - createdDate
        - status
    GetTransactionResponseDto:
      type: object
      properties:
        pagination:
          $ref: '#/components/schemas/PaginationMetaData'
        data:
          type: array
          items:
            $ref: '#/components/schemas/GetTransactionData'
        count:
          type: number
          readOnly: true
          example: 1
          format: integer
        meta:
          $ref: '#/components/schemas/BasicStartEndDateReportMetaData'
      required:
        - pagination
        - data
        - count
        - meta
    GetTransactionResponseV2Dto:
      type: object
      properties:
        pagination:
          $ref: '#/components/schemas/PaginationMetaData'
        data:
          type: array
          items:
            $ref: '#/components/schemas/GetTransactionData'
        count:
          type: number
          readOnly: true
          example: 1
          format: integer
          deprecated: true
        meta:
          $ref: '#/components/schemas/BasicStartEndDateReportMetaDataV2'
      required:
        - pagination
        - data
        - count
        - meta
    FireWebhookConnectionV1Dto:
      type: object
      properties:
        businessName:
          type: string
          example: Railz
          readOnly: false
        serviceName:
          type: string
          example: quickbooks
          enum:
            - railzSandbox
            - freshbooks
            - oracleNetsuite
            - quickbooks
            - quickbooksDesktop
            - sageBusinessCloud
            - sageIntacct
            - xero
            - dynamicsBusinessCentral
            - wave
            - myob
            - shopify
            - square
            - plaid
            - zohoBooks
          readOnly: false
        connectionId:
          type: string
          example: CON-004f4cbe-e9ba-46c0-a7ef-2da661fe0e15
          readOnly: false
        event:
          type: string
          enum:
            - login
            - auth
            - connectionStatus
            - customerRequest
            - data
            - dataPerType
            - push
            - batchPush
            - delete
          readOnly: false
        requestType:
          type: string
          description: Request types for data per type. Required when dataPerType event is present.
          example: ACCOUNTING_TRANSACTION,ACCOUNTS,AGED_PAYABLE,AGED_RECEIVABLE,ATTACHMENT,BALANCE_SHEETS,BANKING_RECONCILIATION,BANK_TRANSACTION_ACCOUNTING,BANK_ACCOUNT_ACCOUNTING,BANK_TRANSFERS,BILL_CREDIT_NOTES,BILL_PAYMENTS,BILLS,BUSINESS_INFO,BUSINESS_VALUATION,CASH_FLOW_STATEMENTS,CREDIT_SCORE,CUSTOMERS,DEPOSITS,ESTIMATES,FINANCIAL_BENCHMARKING,FINANCIAL_FORECAST,FINANCIAL_RATIO,FRAUD_RISK_METRICS,INCOME_STATEMENTS,INVENTORY,INVOICE_CREDIT_NOTES,INVOICE_PAYMENTS,INVOICES,JOURNAL_ENTRIES,JOURNAL,PROBABILITY_OF_DEFAULT,PURCHASE_ORDERS,REFUNDS,TAX_BENCHMARKING,TAX_RATES,TAX_AUTHORITY,TRACKING_CATEGORIES,TRIAL_BALANCES,VENDORS,PAYMENT_METHODS,PORTFOLIO_METRICS,EXPENSES,CONTACT,VENDOR_BANK_ACCOUNT,CUSTOMER_BANK_ACCOUNT,BILL_PAYMENT_REQUEST,COMMERCE_TRANSACTION,COMMERCE_PRODUCT,COMMERCE_ORDER,COMMERCE_DISPUTE,BANK_ACCOUNT,BANK_TRANSACTION,BANK_ASSET
        pushCommunicationId:
          type: string
          format: uuid
          readOnly: false
        batchId:
          type: string
          format: uuid
          readOnly: false
        deleteCommunicationId:
          type: string
          format: uuid
          readOnly: false
        customerRequestType:
          type: string
          example: customersDataRequest
          readOnly: false
      required:
        - event
    FireWebhookV1Dto:
      type: object
      properties:
        connection:
          $ref: '#/components/schemas/FireWebhookConnectionV1Dto'
      required:
        - connection
    FireWebhookResponseV1Dto:
      type: object
      properties:
        webhookFired:
          type: boolean
          readOnly: true
          example: true
      required:
        - webhookFired
    FireWebhookConnectionV2Dto:
      type: object
      properties:
        connectionUuid:
          type: string
          example: CON-004f4cbe-e9ba-46c0-a7ef-2da661fe0e15
          readOnly: false
        event:
          type: string
          enum:
            - login
            - auth
            - connectionStatus
            - customerRequest
            - data
            - dataPerType
            - push
            - batchPush
            - delete
          readOnly: false
        requestType:
          type: string
          description: Request types for data per type. Required when dataPerType event is present.
          example: ACCOUNTING_TRANSACTION,ACCOUNTS,AGED_PAYABLE,AGED_RECEIVABLE,ATTACHMENT,BALANCE_SHEETS,BANKING_RECONCILIATION,BANK_TRANSACTION_ACCOUNTING,BANK_ACCOUNT_ACCOUNTING,BANK_TRANSFERS,BILL_CREDIT_NOTES,BILL_PAYMENTS,BILLS,BUSINESS_INFO,BUSINESS_VALUATION,CASH_FLOW_STATEMENTS,CREDIT_SCORE,CUSTOMERS,DEPOSITS,ESTIMATES,FINANCIAL_BENCHMARKING,FINANCIAL_FORECAST,FINANCIAL_RATIO,FRAUD_RISK_METRICS,INCOME_STATEMENTS,INVENTORY,INVOICE_CREDIT_NOTES,INVOICE_PAYMENTS,INVOICES,JOURNAL_ENTRIES,JOURNAL,PROBABILITY_OF_DEFAULT,PURCHASE_ORDERS,REFUNDS,TAX_BENCHMARKING,TAX_RATES,TAX_AUTHORITY,TRACKING_CATEGORIES,TRIAL_BALANCES,VENDORS,PAYMENT_METHODS,PORTFOLIO_METRICS,EXPENSES,CONTACT,VENDOR_BANK_ACCOUNT,CUSTOMER_BANK_ACCOUNT,BILL_PAYMENT_REQUEST,COMMERCE_TRANSACTION,COMMERCE_PRODUCT,COMMERCE_ORDER,COMMERCE_DISPUTE,BANK_ACCOUNT,BANK_TRANSACTION,BANK_ASSET
        pushCommunicationId:
          type: string
          format: uuid
          readOnly: false
        batchId:
          type: string
          format: uuid
          readOnly: false
        deleteCommunicationId:
          type: string
          format: uuid
          readOnly: false
        customerRequestType:
          type: string
          example: customersDataRequest
          readOnly: false
        dataRequestStatus:
          type: string
          example: success
          description: status to be returned for requests of data webhook
          enum:
            - empty
            - success
            - failed
        payloadType:
          type: string
          description: Webhook payload type.
          enum:
            - full
            - simple
      required:
        - connectionUuid
        - event
    FireWebhookV2Dto:
      type: object
      properties:
        connection:
          $ref: '#/components/schemas/FireWebhookConnectionV2Dto'
      required:
        - connection
    FireWebhookResponseV2Dto:
      type: object
      properties:
        webhookFired:
          type: boolean
          readOnly: true
          example: true
        connectionUuid:
          type: string
          readOnly: true
          example: CON-004f4cbe-e9ba-46c0-a7ef-2da661fe0e15
        businessUuid:
          type: string
          readOnly: true
          example: BIZ-26bc4510-8c6f-4688-996d-e87acf3e0b3f
      required:
        - webhookFired
        - connectionUuid
        - businessUuid
    CreditsData:
      type: object
      properties:
        scorePit:
          type: number
          minimum: 300
          maximum: 850
          example: 800
          format: integer
          readOnly: false
        score12m:
          type: number
          minimum: 300
          maximum: 850
          example: 800
          format: integer
          readOnly: false
        score24m:
          type: number
          minimum: 300
          maximum: 850
          example: 800
          format: integer
          readOnly: false
        score36m:
          type: number
          minimum: 300
          maximum: 850
          example: 800
          format: integer
          readOnly: false
        spRating:
          type: string
          enum:
            - AAA
            - AA+
            - AA
            - AA-
            - A+
            - A
            - A-
            - BBB+
            - BBB
            - BBB-
            - BB+
            - BB
            - BB-
            - B+
            - B
            - B-
            - CCC+
            - CCC
            - CCC-
            - CC
            - C
            - D
          example: AA+
        moodysRating:
          type: string
          enum:
            - Aaa
            - Aa1
            - Aa2
            - Aa3
            - A1
            - A2
            - A3
            - Baa1
            - Baa2
            - Baa3
            - Ba1
            - Ba2
            - Ba3
            - B1
            - B2
            - B3
            - Caa1
            - Caa2
            - Ca
            - C
          example: Aaa
        fitchRating:
          type: string
          enum:
            - AAA
            - AA+
            - AA
            - AA-
            - A+
            - A
            - A-
            - BBB+
            - BBB
            - BBB-
            - BB+
            - BB
            - BB-
            - B+
            - B
            - B-
            - CCC
            - DDD
            - DD
            - D
          example: AA+
        dbrsRating:
          type: string
          enum:
            - AAA
            - AA (high)
            - AA
            - AA (low)
            - A (high)
            - A
            - A (low)
            - BBB (high)
            - BBB
            - BBB (low)
            - BB (high)
            - BB
            - BB (low)
            - CCC (high)
            - CCC
            - CCC (low)
            - CC
            - C
            - D
          example: AAA
        railzRating:
          type: string
          enum:
            - A+
            - A
            - A-
            - B+
            - B
            - B-
            - C+
            - C
            - C-
            - D
          example: A
        railzGrade:
          type: string
          enum:
            - Very Poor
            - Poor
            - Fair
            - Good
            - Very Good
            - Excellent
          example: Excellent
        description:
          type: string
          example: Highest quality borrower, minimal credit risk.
      required:
        - scorePit
        - score12m
        - score24m
        - score36m
        - spRating
        - moodysRating
        - fitchRating
        - dbrsRating
        - railzRating
        - railzGrade
        - description
    CreditsReport:
      type: object
      properties:
        meta:
          $ref: '#/components/schemas/CreditRatingsReportMetaData'
        data:
          $ref: '#/components/schemas/CreditsData'
      required:
        - meta
        - data
    CreditsResponseDto:
      type: object
      properties:
        count:
          type: number
          readOnly: true
          format: integer
          example: 1
        reports:
          readOnly: false
          type: array
          items:
            $ref: '#/components/schemas/CreditsReport'
      required:
        - count
        - reports
